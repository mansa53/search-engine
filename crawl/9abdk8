{"url": "https://www.reddit.com/r/learnprogramming/comments/9abdk8/resources_for_learning_about_graphics_programming/", "text": "I'm looking for some resources to learn about the nuts and bolts of graphics programming. I've played around with various tools/libraries (matplotlib, processing, Cairo, pygame) but I'm curious as to what's actually going on under the hood when using these tools. For instance, if pixels need to be drawn at non-integer coordinates, how is the rounding handled? how are curves handled in a general sense? how do filters and edge-detection algorithms work on images? Things of that nature. \n\nI don't have a particular project or goal in mind, mostly just curious exploration. I'm a PhD student in math so anything more theoretical/math-intensive is fine (preferable really), but I'm open to any and all suggestions. Thanks!", "score": 3, "comments": [{"body": "Hi, I'll try to answer this as best as I can. Normally I would include at least one dedicated math book, but for you it's probably best to just jump into the books that assume a working knowledge of Linear Algebra/Trig/Calculus.\n\nThese are the books that tend to show up everywhere when learning about computer graphics.\n\n* [Real-Time Rendering](https://www.amazon.com/Real-Time-Rendering-Fourth-Tomas-Akenine-M%C3%B6ller/dp/1138627003/ref=dp_ob_title_bk)\n* [Computer Graphics: Principles and Practice](https://www.amazon.com/Computer-Graphics-Principles-Practice-3rd/dp/0321399528) (Once referred to as the \"Computer Graphics Bible\" by some)\n* [GPU Gems](https://developer.nvidia.com/gpugems/GPUGems/gpugems_pref01.html)\n\nThese are all are very powerful if you already have a solid math foundation like yourself.\n\nThen there is the actual programming side of things so you can try to put the theory into practice. This is accomplished through low-level APIs such as DirectX, Vulkan and OpenGL. If you don't already have an understanding of a language like C++, I would recommend picking that up as well.\n\n* [OpenGL Superbible](https://www.amazon.com/OpenGL-Superbible-Comprehensive-Tutorial-Reference/dp/0672337479)\n* [Best books for C++](https://stackoverflow.com/questions/388242/the-definitive-c-book-guide-and-list)\n\nBut really, if your goal is to get a thorough understanding of everything involved in the computer graphics world, [this article](http://fabiensanglard.net/Computer_Graphics_Principles_and_Practices/index.php) is probably a good reference for what to include in your library. Fabien Sanglard is extremely helpful if you are interested in some of what the game industry has done to bring graphics theory to life.", "id": "e4ug7nz", "replies": [{"body": "this all looks fantastic thank you very much! ", "id": "e4w8h5b", "replies": []}]}], "title": "Resources for learning about graphics programming?"}