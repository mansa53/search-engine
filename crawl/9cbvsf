{"url": "https://www.reddit.com/r/learnprogramming/comments/9cbvsf/so_im_not_supposed_to_read_file_input_in/", "text": "A commenter on one of my earlier posts just told me that I don't need to read file input in competitive programming problems and that a simple input() would suffice. This is just depressing because I've spent the major part of today just figuring out how to read file I/O for [this](http://train.usaco.org/usacoprob2?a=5RvCaKEk4eB&S=gift1) problem. I'll paste my code down below so please just tell me what I'm supposed to do in place of all my readline()'s.\n\n\u200b\n\n    \"\"\"\n    ID: <redacted>\n    LANG: PYTHON3\n    TASK: gift1\n    \"\"\"\n    #comments are for testing\n    \n    class Person(object):\n        def __init__(self, n, a, g_num):\n            self.name = n\n            self.account = a\n            self.g_num = g_num\n            try:\n                self.gift = a // g_num\n                self.has = -a + (a % g_num)\n            except ZeroDivisionError:\n                self.gift = 0\n                self.has = -a\n        def getName(self):\n            return self.name\n        def getNum(self):\n            return self.g_num\n        def getHas(self):\n            return self.has\n        def setHas(self, h):\n            self.has = h\n        def getGift(self):\n            return self.gift\n        def __str__(self):\n            return '<' + self.name + ', ' + str(self.account) + ', ' + str(self.g_num) + ', ' + str(self.gift) + '>'\n    \n    \n    \n    Person_list = [] \n    \n    with open('gift1_in.txt', 'r') as f_in:\n        f = f_in.readline\n        gift_dict = {}\n        NP = int(f())\n        # print(NP)\n        names = []\n        for i in range(NP):\n            names.append(str(f()).rstrip())\n        # for person in names:\n        #    print(person)\n        for j in range(NP):\n            p_name = f().rstrip()\n            account = f().split(' ')\n            newPerson = Person(p_name, int(account[0]), int(account[1]))\n            Person_list.append(newPerson)\n            # print(Person_list[j])\n            gift_dict[newPerson] = []\n            for k in range(newPerson.getNum()): \n                gift_dict[newPerson].append(f().rstrip())\n            # print('    ', gift_dict[newPerson])\n     \n    for taker in Person_list:\n        for giver in gift_dict:\n            if taker.getName() in gift_dict[giver]:\n                taker.setHas(taker.getHas() + giver.getGift())\n    \n    with open('gift1_out.txt', 'w') as f_out:\n        for name in names:\n            for person in Person_list:\n                if person.getName() == name:\n                    f_out.write(name + ' ' + str(person.getHas()) + '\\n')\n\nI'd love any criticism and advice on how to make my code more efficient. Thanks!", "score": 0, "comments": [{"body": "A class is not needed. Simply use a list to store the names in order and a dictionary to map each name to its corresponding value.", "id": "e59jlcy", "replies": []}, {"body": "Probably saying you should read from standard input, and write to standard output. Either of which can be redirected files if you want. ", "id": "e59sjhw", "replies": []}, {"body": "Your   link is sending me to a login page. Can you post the problem description?\n\n&#x200B;\n\nMy guess is that you aarare supposed to rite a method that takes a list of Person objects.", "id": "e59s04i", "replies": []}], "title": "So I'm not supposed to read file input in competitive programming problems?"}