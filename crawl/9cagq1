{"url": "https://www.reddit.com/r/learnprogramming/comments/9cagq1/how_do_i_get_into_competitive_programming/", "text": "I've been coding for two years now. I did one year of Java and then I moved on to Python. I completed MIT's 6.00.1x Intro to Computation and Programming using Python and I'm currently working my way through 6.00.2x. I'm also trying to learn C++ using the C++ Primer book. Winning one of those competitive programming competitions has always been a goal of mine and there's one coming up in mid-October. I started practicing with USACO's training gateway but I feel stumped. This is nothing like any of the courses I've done before. I have to spend whole weeks on basically every problem and I fail at it even then. I tried practicing on HackerRank which was pretty doable but then I opened CodeChef and I couldn't even do the first Beginner problem. I like to think I'm not a complete noob and I have at least a decent grasp over writing algorithms and such but the past few weeks have just been so demotivating. Should I just draw out of the competition? Is there anything I can do to improve.", "score": 1, "comments": [{"body": "I'd try codeforces.com. You can sort the problems from most solved to least and the most solved ones are really easy (almost like squaring a number, I'm sure you can do this immediately once you know how to take the given input). Just try to go to problems where you are able to solve some but have troubles with others and keep trying for a few hours on a problem. If you don't succeed you can look for help (they have a few hints on most problems). Just keep practicing and you'll get better. If you find out you miss certain skills in maths/coding, just focus on improving those as well and you'll become better over time! ", "id": "e59bsij", "replies": [{"body": "Thanks for your help! Something I'm really having trouble with is reading in file input. I've gone through the Python docs and I feel like I have a good idea about how to do it but when I actually write the code, it just looks like a grisly mess almost like there has to be a better way to do it.", "id": "e59crxz", "replies": [{"body": "For competitive programming, you don't have to read files. Simply read from standard input using input() for python3.", "id": "e59hdug", "replies": [{"body": "Wait what!? But don't they give you these files where line 1 corresponds to X, line 2 to Y and such? Doing a simple input() would mean taking input from a user but you're supposed to read it from a file. Am I wrong?", "id": "e59hkcp", "replies": [{"body": "Yes, just use input().", "id": "e59i3g9", "replies": [{"body": "Can you answer [this](https://www.reddit.com/r/learnprogramming/comments/9cbvsf/so_im_not_supposed_to_read_file_input_in/)? I'd really appreciate the help. I feel totally lost right now.", "id": "e59i86s", "replies": [{"body": "That problem is a special one that requires you to read the input file. So you can't use input(). In this case you'll use\n\n    with open(\"gift1.in\", \"r\") as f:\n        for line in f:\n            #do something\n\nEdit: It seems like most USACO problems involve reading input files. This is unusual as most contests (Codeforces, ACM-ICPC, IOI etc) only require you to read from standard input.", "id": "e59ilgz", "replies": [{"body": "But all the ones I've seen follow exactly this same format (here's the sample input file, this line is this, etc., etc.) so why would the reading be different for any other problem?", "id": "e59ivaq", "replies": [{"body": "It's a recurring trend only for USACO and few other contests.", "id": "e59iz3l", "replies": [{"body": "In any case, I'd think 60 lines for anything written is Python is excessive to say the least. Is there any way I can make this more concise?", "id": "e59j1d6", "replies": []}]}]}]}]}]}]}]}]}]}], "title": "How do I get into competitive programming?"}