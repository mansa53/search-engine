{"url": "https://www.reddit.com/r/learnprogramming/comments/9aujq4/question_from_a_newbie/", "text": "Hello, im currently learning JavaScript and I ran into something I cant fit into my head:\n\nclass Person {int age;string name;public void SayHi() {Console.WriteLine(\"Hi\");}}static void Main(string\\[\\] args){Person p1 = **new** Person();p1.SayHi();}\n\nAnd the part that confuses me is \"  Person p1 = **new** Person(); \"  why do I have to do that??", "score": 1, "comments": [{"body": "That doesn't look like JavaScript.  Is it C#?", "id": "e4y83o4", "replies": []}, {"body": "new Person creates an instance of Person. \nAn instance can be thought of as a living thing. \nThe program stores the location to that living thing in p1. \nSo you can refer to it using it\u2019s name p1. \np1 = null will destroy the remaining link to that object. \n\nThe process is formally called initialization. \n", "id": "e4ycl91", "replies": [{"body": "Thank you finally", "id": "e4yl5rr", "replies": []}]}, {"body": "With good old C/C++ variables are by default bound to their scope (they are said to be on the program's *stack*), and are hence destroyed when the scope ends. Sometimes you need a variable to last indefinitely - perhaps the user will press a key to destroy it; in such cases you need to declare a variable on the program's *heap*, and this is classically done via the **new** operator. In C# (code you've posted) / Java / etc, there is no way to directly use the program stack, so you declare everything on the heap, thus you'll find `Foo f = new Foo();` littered throughout the codebase.", "id": "e4ye4av", "replies": []}, {"body": "That is definitely not JavaScript. It's incomplete C#, so not what you want at all.\n\nBy the way, here's the C# code formatted (and completed so it will compile):\n\n    using System;\n\n    namespace App1\n    {\n        class Person\n        {\n            int age;\n            string name;\n\n            public void SayHi()\n            {\n                Console.WriteLine(\"Hi\");\n            }\n        }\n\n        class App1\n        {\n            static void Main(string[] args)\n            {\n                Person p1 = new Person();\n                p1.SayHi();\n            }\n        }\n    }", "id": "e4yav4u", "replies": []}, {"body": "This is not JS as others have noted.\n\nIn general, you have to write `new` whenever you call a constructor, to indicate that you are constructing a new instance of Person.\n", "id": "e4yc6f2", "replies": []}], "title": "Question from a newbie"}