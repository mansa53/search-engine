{"url": "https://www.reddit.com/r/learnprogramming/comments/9bgsyh/java_having_difficulties_restarting_my_connect/", "text": "Link to my code: https://gist.github.com/junwei-tj/7f1f4faed3fff9ebc557731d8a9b76be\n\nI've encountered a similar problem when I created a Tic-Tac-Toe game, and a user here suggested to use the Container method removeAll() to delete the contents of my Container object before re-initalizing all my components and adding them back into the Container. However, this solution did not work in my Connect Four programme. Why and how can I go about making my game restart when the game ends?", "score": 1, "comments": [{"body": "\u201cDifficulties\u201d can you elaborate and the desire and actual behaviour?", "id": "e52y6bk", "replies": [{"body": "I'm lost as to how to make my game restart. I thought clearing the Container and re-adding the (newly initialized) components back would do the trick but as of now, when the game restarts, the GUI remains the same and I cannot click on any of the buttons as well. \n\nI used the console to print the state of the game board and it does show that the game has restarted (the game board is empty) but because the GUI is not working the game cannot continue.", "id": "e52z9r4", "replies": []}]}, {"body": "You have the gameplay code and the graphics code too tightly coupled together, you should write the game simulation part separately without any awt/swing stuff. Then have the graphics/rendering code simply present the current state of the game. So when you clear the board, by zeroing out an array or something, the graphics should update automatically to reflect that state.", "id": "e52z66m", "replies": [{"body": "Yea I agree too that my code right now is quite closely-linked together. I was thinking of getting a working non-OOP version of the game first before trying to separate them into separate classes.", "id": "e52zcdh", "replies": []}]}, {"body": "Voila, i got it working after you removeall the components of the contentpane you have to  revalidate and repaint it.\n\njust add this after cp.removeAll();\n\ncp.revalidate();\n\n cp.repaint();\n\n&#x200B;\n\nJust read the docs on removeAll() next time.", "id": "e538e7q", "replies": [{"body": "Holy you're a lifesaver. Been stuck on this for a few days now :( Thank you very much!\n\nHowever I have another question - in my Tic-Tac-Toe code ([link here](https://gist.github.com/junwei-tj/f38d72f0c9b40f143ef0a0fd0ab9756d)) I merely used removeAll() without having to use revalidate(). Why is that so? I pretty much modelled my Connect Four code on my Tic-Tac-Toe program.\n\nI've tried googling and reading the doc on revalidate() and removeAll() but I can't seem to understand", "id": "e53bxrp", "replies": []}]}], "title": "[Java] Having difficulties restarting my Connect Four game after game is over"}