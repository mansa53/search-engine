{"url": "https://www.reddit.com/r/learnprogramming/comments/9avyp3/best_online_resource_to_learn_data_structures_and/", "text": "Hey guys, I\u2019ve never done any DS/A and my career fair is coming up in 2 weeks. I\u2019m EE and do software because I like it more (too late to change though). At any rate what\u2019s the best resource to learn relatively quickly. I\u2019m going to purchase a copy of cracking the coding interview but as far as I understand it doesn\u2019t actually teach the basics. So I guess essentially what online resource can I use to set me up for CTCI. Thanks in advance ", "score": 3, "comments": [{"body": "Hackerrank and select the interview module. It's the same as cracking the coding interview but with videos. It's good but you have given yourself little or no time to learn all you need to know. The DS/A are easy to understand but coding them on the fly can be difficult. If you want to learn fast look for visualisations.  \nhttps://visualgo.net/en\nAs for materials lafores data structures book is good in java. ", "id": "e4yktfc", "replies": [{"body": "Alright thanks so much. So does hacker rank teach you like a mini lecture of sorts or just problem sets. ", "id": "e4yln0b", "replies": [{"body": "Try it out. See what you think. The book cracking the coding interview will have little use to a beginner because it's about 30 pages of the material and 400 pages of problems. I think hackerrank is  the most compact learning system. I'm at your stage I need to get interview prepared.   I've  a background in DS /A and even for me a two week window would be stretching it too get interview ready. \n", "id": "e4yms7y", "replies": []}]}]}, {"body": "Wouldn't start learning CS just for an interview. If you are interested for the topic on it's own, i'd suggest these [courses](https://www.coursera.org/specializations/algorithms). Takes about 2-3 months if you focus on it.\n\nThink it might also make a bad impression on the interviewer if he notices you're a pretender. Better explain what you can. I'd prefer somebody showing interest in complexity above one pretending to know it.\n", "id": "e4yynrb", "replies": [{"body": "I\u2019ve been programming and learning software engineering on my own for about a year now. I had a pretty good internship as a software engineer this summer lol. I just haven\u2019t gotten around to learn DSA. Thanks for the info ", "id": "e4yzww1", "replies": [{"body": "It's really worth the effort. Will give you a much better view on why programs are slow/fast, and which DS/A to use in specific siutations. In practice you'll rarely code them, but knowing the most important ones will give you a good starting point for design choices.\n", "id": "e4z0dqa", "replies": [{"body": "Yeah for sure", "id": "e4z2wqt", "replies": []}]}]}, {"body": "I\u2019ve been programming and learning software engineering on my own for about a year now. I had a pretty good internship as a software engineer this summer lol. I just haven\u2019t gotten around to learn DSA. Thanks for the info ", "id": "e4yzxk1", "replies": []}]}], "title": "Best online resource to learn Data Structures and Algorithms to prepare me for future interviews 1-2 months"}