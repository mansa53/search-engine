{"url": "https://www.reddit.com/r/learnprogramming/comments/9c9lm1/help_with_lists/", "text": " For assignment 1 print a list of your three favorite places to visit in the Los Angeles area (e.g. Griffith Observatory at night, Annenberg Beach House, Santa Monica Pier, etc.). Do not just copy the list provided but create your own list. Number your list as shown in the example without using the numbers 1, 2, or 3. Use only the number 5 in your program to print 1, 2, and 3.\n\n    number = 5 print(\"My three favorite places to go in the Los Angeles area are: \\n\" + str(number - 4) + \" The Santa Monica Pier\\n\" + str(number - 3) + \" Little Tokyo\\n\" + str(number - 2) + \" The Promenade after school\")\n\nI went with this at first and the teacher said to not use the number 1 2 or 3 anywhere in the script. So i'm guessing he means \n\n    for i in range(5):\n\nidk I suck at this :/\" Use only the number 5 in your program to print 1, 2, and 3\" ", "score": 3, "comments": [{"body": "Yes, although you probably want `range(1, len(lst) + 1)`. Or better yet, `enumerate`. You can then iterate through each element of the list with a `for` loop.\n\nFor example,\n\n    lst = [\"place1\", \"place2\", \"place3\"]\n    for index, element in enumerate(lst, 1):\n        # ...\n\nDon't do the following.\n\n    def flatten(nested_lst):\n        return [i for j in nested_lst for i in j]\n\n    def pretty_list(lst):\n        return (\"{}: {}\\n\" * len(lst)).format(*flatten(enumerate(lst, 1)))\n\n    lst = [\"place1\", \"place2\", \"place3\"]\n    print(pretty_list(lst))", "id": "e596xz3", "replies": [{"body": "Don't do the following; I am writing for academic purposes since this is what u/POGtastic wanted to do but I find this, slightly more elegant.\n\n     print(*map(lambda x:f'{x[0]+1}: {x[1]}',enumerate(lst)),sep='\\n')  \n\nand without 1:\n\n     print(*map(lambda x:f'{x[0]+True}: {x[True]}',enumerate(lst)),sep='\\n')  \n\nand without 0:\n\n     print(*map(lambda x:f'{x[False]+True}: {x[True]}',enumerate(lst)),sep='\\n')  ", "id": "e59d4fq", "replies": [{"body": "I like being able to generate the string before printing it, but that's a great one-liner.", "id": "e59d6pk", "replies": []}]}]}, {"body": "Here is an idea:\n\n\n     for i in range(True,5+True):\n     \"\"\" You can figure the rest\"\"\"\n\nOr:\n\n    for index, place in enumerate(lst):\n    \"\"\" Figure out from above how to retrieve 1\"\"\"\n\nOr\n\n    index = False\n    for place in lst:\n        index +=  \n        \"\"\"You can figure the rest\"\"\"", "id": "e59d96l", "replies": []}, {"body": "    for i in range(5//5, 5-5//5):\n        print(i)\n\nmaybe?\n", "id": "e594izt", "replies": []}], "title": "Help with lists"}