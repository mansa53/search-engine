{"url": "https://www.reddit.com/r/learnprogramming/comments/9btxxg/programming_student_looking_for_advice/", "text": "This coming Tuesday, I will be starting my 3 year video game programming course at college. I have no previous experience, however I am very invested in learning, and figured I'd ask. Is there any advice you wish someone told you before starting?", "score": 11, "comments": [{"body": "Try the assignments yourself first, then ask teaching assistants or, if permitted, fellow students for help if you're stuck. Most people profit more from actual programming as opposed to reading books about programming languages, I used books and online resources for reference mostly. Try to keep a consistent work pace. Don't neglect physical exercise, this can be a great way of clearing one's head when one's eyes are starting to glaze over. Finally, don't be discouraged by people who are already more experienced.\n\nEdit: Have a sheet of paper ready for making sketches of problems that seem large or difficult. If your courses allow integrated development environments, give their debuggers a whirl.", "id": "e55qpza", "replies": [{"body": "Thank you for the advice! I'm sure once I start it'll be hard for me to stop, I just need that initial momentum to get going. ", "id": "e55scvd", "replies": []}]}, {"body": "1. Pick C++, and prefer the Microsoft toolchain (MSVC, MSASM, etc) unless you have very strong principles against them or something.\n\n1. If you have to choose an engine, pick Unreal 4.x and write *as much as possible* in C++ (as opposed to their visual scripting language: Blueprints). \n\n1. Sooner or later, try to figure out which specialisations interest you: engine, gameplay, rendering / animation, AI, networking / multiplayer, audio, tools / builds, etc. These three points will align quite well with industry jobs for entry level game programmers.\n\n1. Make a small game/system/mechanic using anything new that you learn: at least it's more interesting than writing dry merge sort.\n\n1. Collaborate early and learn how to share codebases and be productive in a team as soon as you can. Build a portfolio along the way.\n\n1. Play a lot of games! Try to find out what you like about them (in terms of how it works, rather than the art or the music), and see if you could implement a similar mechanic with as much polish as you can.", "id": "e55sfa8", "replies": []}, {"body": "**Consider keeping a portfolio as you go**\n\n&nbsp;\n\n*(I'm guessing that because you're doing Video Game production, you'll be encouraged to do this anyway)*\n\n&nbsp;\n\nI did Computer Science and I didn't really keep a portfolio. I (tried to) build one after I graduated, but I had lost some of the code and found it hard to make sense of some of the rest. \n\n&nbsp;\n\nIf you want to get into Video Game Production, companies are going to be interested projects you have done. It isn't as big a factor with general Software Development (at least for graduate jobs), however it will certainly make you stand out from the crowd. \n\n&nbsp;\n\nFurthermore, We had a talk from [Ardvark Swift](https://aswift.com/) - they pointed out that recruiters are not going to have enough time to sit and read through loads of code. \n\n&nbsp;\n\n*Pictures, Videos, Summaries* - you just needs something that a recruiter can look at and understand relatively quickly. Companies are always interested in candidates who can recognize their shortcomings, so don't be afraid to highlight any challenges you faced in a project.    \n\n&nbsp;\n\nBe wary that a recruiter isn't going to be able to download/compile a bunch of code, similarly they're not going to be interested in reading a 2 page report.  ", "id": "e55r1n4", "replies": [{"body": "For sure! Thank you for this advice! It's definitely odd to think about what my resume will look like in 3+ years, however this info will for sure help my future self!", "id": "e55sy9g", "replies": []}]}, {"body": "I'd suggest keeping an open mind and be willing to write any type of application/software, not just gaming related.", "id": "e569qo7", "replies": []}, {"body": "Do you already know what some of your courses will be from looking at your degree plan or otherwise? If so go to the colleges bookstore website and find the books. Then see if you can find the same or an older version online and get a head start. I actually just did this with one of my classes. Obviously it's not a substitute for an actual class but it can help you nonetheless. ", "id": "e56b5zo", "replies": []}, {"body": "Make sure you learn strong programming fundamentals, not just things like \"how to make a game in Flash\" or \"how to code a simple game in Unity.\" Neither are invalid things to get practice in, but they are also tools more than they are programming itself, so they can leave you confused and floundering if you don't get much practice outside of them. \n\nIf you have a strong foundation in fundamental programming concepts, it will not only make you a better programmer for games, but it will give you a place to go (other software jobs) if you struggle to break into the game industry, or get burnt out on its development structures.\n\nI imagine some of this will be taken into account in your education, but I'm assuming not for the sake of giving the advice. Video game education in any formal format is not a well-traveled path, so you'll probably have to do some looking out for yourself in terms of making sure you learn what you need; I'd recommend getting a look at what game programmer job applications look like early to help you get a feel for what the expectations are going to be like. (Keeping in mind that some programmer applications are more wish list than reality, so don't get overwhelmed, but also try to use them as a barometer for keeping track of the most essential skills you need to learn. For example, C++ is still used a lot in games, so that's probably the best language to be experienced in for game programming. And Git / source control is an essential toolset to get familiar with for project management, especially when working on teams, for any kind of programming.)", "id": "e56czp6", "replies": []}, {"body": "Learn version control first, literally before anything else", "id": "e56h8hp", "replies": []}, {"body": "I would say no matter what you do in school build upon it outside of school. My brother just finished his Bachelor of Computer Science and has nothing to show for it except his degree. Which I feel is a bad path to go. While I'm the opposite I am going to school for my degree but have everything going toward projects outside of school so I could be biased.", "id": "e56l0ay", "replies": []}, {"body": "Game specific programs at colleges tend to suck, even CS programs aren't that great these days. Keep a portfolio, and be prepared to self-teach.", "id": "e55ud5o", "replies": []}], "title": "Programming student looking for advice!"}