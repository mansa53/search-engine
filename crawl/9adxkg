{"url": "https://www.reddit.com/r/learnprogramming/comments/9adxkg/java_can_this_code_fragment_be_shortened_if_so_how/", "text": "Code:\n\n    public static void mystery(int a) {\n\n\tif (a >= 0) {\n\n\t\tSystem.out.println(a);\n\n\t} else if (a == 0) {\n\n\t\tSystem.out.println(a+1);\n\n\t} else {\n\n\t\tSystem.out.println(a+2);\n\n\t}\n\n}", "score": 1, "comments": [{"body": "The second case will never happen, so this can be simplified to only\n\n    System.out.println(a >= 0 ? a : a+2);\n\nEDIT: Comment below.", "id": "e4uq46z", "replies": [{"body": "I believe you meant:\n\n    System.out.println(a >= 0 ? a : a+2);", "id": "e4uq652", "replies": [{"body": "Can either of you please explain?\n\nCause as how I see, I fail to see otherwise how else it could be simplified. (I'm a newbie to programming )", "id": "e4uqa6i", "replies": [{"body": "First of all, your second if always fails, `>=` includes `==`, leaving only `<` elements, which always fail `==` thus they get into the `else`.\n\nCorrecting that, we get the following:\n\n    public static void mystery(int a) {\n    if (a >= 0) {\n        System.out.println(a);\n    } else {\n        System.out.println(a+2);\n    }\n\nBecause your calls the same function twice, just with different value as parameter, you can do this:\n\n    System.out.println(a>=0?a:a+2);\n\nThis : `a>=0?a:a+2` is an expression. `a>=0` returns true or false. Then, the ternary operator `?` takes the true or false and returns the first expression before `:` if it received true otherwise, the second expression if it received false. In other words, `a>=0?a:a+2` reads like this: `if a>=0`, then `a` else `a+2`.", "id": "e4uqi8y", "replies": [{"body": "Thank you! I had a feeling about the second condition but wasn't sure.\n\nAlso, learned how to use ternary operator. Cheers", "id": "e4uqqul", "replies": [{"body": "If you want to have the second condition as well;\n\n\n     System.out.println(a>0?a:(a<0? a+2:1))\n\nNo problem, feel free to ask questions any time.", "id": "e4uqxec", "replies": [{"body": "OP. The ternary operator is very nice, and in many languages it is actually more efficient than if/else in some cases, but be careful to write readable code.", "id": "e4urjr8", "replies": [{"body": "It would be nice if more languages were expression based and `if` was an expression itself. Such as in Rust:\n\n    let x = if a > 0 { a } else if a < 0 { a + 2 } else 1;", "id": "e4urte9", "replies": []}]}, {"body": "Nested ternarys should be avoided unless you're golfing, or trying to write difficult to read code. Prefer readability over brevity. ", "id": "e4uyxsv", "replies": [{"body": "I don\u2019t disagree, showing how awful nested ternaries can be is exactly why I wrote it.", "id": "e4uz4k9", "replies": []}]}]}]}]}]}]}]}, {"body": "This case can be minimized to \n\n    System.out.println(max(a,min(a+2,1)));\n\n\na= 5-> max(5,min(7,1))=max(5,1)=5,   \na=0-> max(0,min(2,1))=max(0,1)=1,   \na=-2-> max(-2,min(0,1))=max(-2,0)=0,   \na=-1-> max(-1,min(1,1))=max(-1,1)=1,  \na=-3-> max(-3,min(-1,1))=max(-3,-1)=-1.  ", "id": "e4uzfnv", "replies": []}, {"body": "If you needed an output when a is = 0, < 0, and > 0, then you could do this:\n\nif (a > 0) system.out.println(a +1); return;\nsystem.out.println(a == 0 ? a : a -1);", "id": "e4v8x73", "replies": []}], "title": "[JAVA] Can this Code Fragment be shortened? If so, How?"}