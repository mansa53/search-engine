{"url": "https://www.reddit.com/r/learnprogramming/comments/9bzv5h/if_i_attend_an_elite_university_with_no_prior/", "text": "I\u2019m going into my senior year of high school and have come to realize that programming is a career path I might be interested in following. I have a 1520 SAT, 3.8 GPA, and good extracurriculars (however they are mostly science oriented). Math is also one of my best subjects. \n\nWhile I always thought I would go into science, programming is becoming more and more intriguing. I think I have a shot to get into schools such as UIUC, Berkeley, UW, Cornell, and UT-A for computer science, however I have very minimal coding experience. Obviously I would apply to a bunch of schools under some sort of science major and make sure the schools I was applying to under comp sci also had good science programs. \n\nMy question is: will I be too far behind my peers at these universities? Is going in with minimal coding experience a terrible idea? I would really appreciate any feedback. ", "score": 1, "comments": [{"body": "I read somewhere that a university professor gave everyone an aptitude test prior to his intro to programming class. It had respectable accuracy. I think you should be more concerned about your aptitude for it. Something to look into?\n\nAs far as catching up or being farther ahead in CS:\n\n* read the syllabi available for your school's degree tracks.\n* Figure out what languages they will use and with what dependence. There will be at least 3, not including markdown languages like html. Assembly, C, C++, Java, Python, JavaScript\n* read the syllabus for the intro to programming class\n* find the 1 best book on that language\n* do every single exercise in that book.\n* Learn to use git and git best practices to keep those exercises organized. [https://try.github.io/](https://try.github.io/)\n* programming requires coding, coding is typing with annoying accuracy. Find an IDE that works for you. You will probably want to learn Vim or EMACS. Learn how to trick out your IDE and invest the time to get very good at using shortcuts and best practices.\n\nThe last four are a loop.\n\n[**http://sijinjoseph.com/programmer-competency-matrix/**](http://sijinjoseph.com/programmer-competency-matrix/)\n\nWhenever you encounter a new domain search <domain> \"best practices\", \"code recipes\", \"idioms\", \"cookbooks\".\n\nLearn Objected Oriented Design Patterns\n\nLearn Software Architecture Design Patterns\n\nLearn how to use other people's libraries\n\nLearn how to pick software licenses and what the license means for your code.\n\n\u200b\n\nDevelop a methodology of processes and systems for organizing information and acquiring new skills. Create a list of high value resources that have both static information and the ability to ask questions. Register for stack exchange in multiple domains. Keep your personal life and professional/student life separate - start with emails move to separate devices as you can afford to do so.\n\n\u200b\n\nIt would probably be best to make sure you know how to admin your computer and network, apply patches, secure your network, restore your system, identify malware, etc. You should learn how to use a VM for computer security especially emails with attachments.  Setup Virtual LAN's. Whitelist IP addresses, use VPNs, use cron jobs to do administrative tasks like back up files.\n\n\u200b\n\nYou may want to investigate studying for the Linux sysadmin test and the security+ test. Someone will probably try and hack your computer so make sure you have your system secured and backed up in multiple locations with multiple images. Learn and use computer security best practices. It could be a roommate, it could be Chinese intelligence.\n\n\u200b\n\nI would recommend you buy a cheap $50 tablet and do all of your internet shit habits on that tablet only. VLAN it and put it on a separate VPN. Porn, facebook, twitter, Instagram, reddit, etc. Keep that distraction block away from you while you are working. Limit the amount of time and more importantly the percentage of your daily dopamine reward you get from social media. Use a signal account to send yourself links if you find something to research. Sanitize the links if you are paranoid. Create sacrificial email addresses for when you have to trade an email for information. Don't automatically load images or attachments.\n\n\u200b\n\nResearch how to maximize your productivity on your work computer. The better you can manage your professional/student life and personal life, the better your life will be.\n\n\u200b\n\nMake sure you include taking care of your personal relationships is scheduled in like work. Call your grandparents, your parents, your siblings, your friends, acquaintances, etc. Set quality time aside for them. Find a programming mentor if you can. Keep in contact with them. Look at [meetup.com](https://meetup.com) for technical meetups in your area.\n\n\u200b\n\nMy last bit of advice has to do with programming as a core skill for whatever you choose to do. Every domain needs programmers. If you get into chemistry, biology, physics, psychology, all of those will benefit from you being able to a) think about a problem like a programmer and b) use those language skills to rapidly turn data into information with analysis and visualization. Being able to code and deploy a website is also a valuable skill.\n\nProgrammers are lazy. They want to figure out the best way to do something and only build the system to do it once. Here is the secret: It is only lazy if you take the time you saved and do nothing. If you are ambitious and hang out with ambitious people you will find things to do that are meaningful and elevate your life and the life of those around you. If your friends are jackasses, you will do jackass things. Those things might ruin your life.\n\n&#x200B;\n\nSomething else I wished I had learned earlier was the concept of the Pareto Principle and Parkinson's Law. If you have gotten this far consider picking up a copy of 4 hour work week and let it change some of your perspectives on things. Definitely graduate HS and do as well as you can in everything.\n\n\u200b\n\nTL;dr - Learn and implement an organizational and learning methodology. Learn how to become a power user for the tools you are using. Implement systems that will limit your failures. Tap your network. Make friends with people who bring out the best in you. Research what is expected of you and begin training to meet those expectations. Track your stress and clarity levels so you know when to back off and you know when you can accelerate without burn out.\n\n\u200b\n\nIt seems overwhelming. If you need a place to start, put this into a list based off of what you personally need to do first.\n\n\u200b\n\nAlso, workout daily. Get in great shape. Future you will thank you. Don't become a douche.", "id": "e573q5y", "replies": []}, {"body": "I went into college where I was going to be programming in C++ for the first time. I took the summer before my freshman year of college to make a text adventure in C++ to teach myself. 3 months, 5,000 lines of code later, I ended up being 3 semesters of C++ classes ahead of my peers.\n\nAs long as you can be diligent and learn outside of the classroom if you want to get ahead or need to catch up, you'll be fine.", "id": "e570kwt", "replies": [{"body": "Thanks so much for the response! If I do end up doing that, I will most likely do the same thing, or see if I can do a semester over the summer.", "id": "e572hkq", "replies": []}]}, {"body": "I graduated with an EECS major from UC Berkeley about ten years ago. While the CS61A/B/C series is the introduction to CS and generally don\u2019t assume background knowledge there were also classes that were meant to be even earlier stage programming.\n\nI don\u2019t know if anyone from my CS classes that took the earlier stage classes, everyone I know of started with CS61A including those that had never programmed before.\n\nWhile having more experience will help, having little to no experience is expected. I wouldn\u2019t worry.", "id": "e577fvf", "replies": [{"body": "Thank you so much that definitely eases my worries, my friends think I am screwed wanting to major in computer science with no experience. The more research I do the more computer science sounds like the place to be. Good work life balance, high employment rates, lots of math (big plus for me), generous compensation, and what sounds like a good work environment. ", "id": "e5790jy", "replies": [{"body": "Keep in mind that work life balance depends on the company. Similarly, the vast majority of programmers rarely need anything beyond basic algebra.", "id": "e57qfj5", "replies": []}]}]}], "title": "If I attend an elite university with no prior coding experience, will I be too far behind?"}