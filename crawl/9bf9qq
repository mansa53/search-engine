{"url": "https://www.reddit.com/r/learnprogramming/comments/9bf9qq/senior_in_high_school_with_a_lot_of_questions/", "text": "First off, I don't usually partake in posting or commenting on any type of subreddit and have only joined this one very recently so forgive me if I sound awkward. \n\nI have always liked computers, I don't remember a time where I wasn't the person you talked to when you had a computer problem. This has always given me confidence in most topics regarding computers, I just assumed programming wasn't going to be any different. I realized very quickly that this was not something you just pick up when you wanted when I looked up something regarding programming 3 years ago, and ever since then I have been putting it off.  \n\nAll of this brings me to my senior year, I really want to learn how this stuff works. I decided that I am going to major in Computer Science and have been dead set on learning how to code. I have read so many posts on this sub; most of them about where to get started all the while bookmarking all the different posts that had useful links or topics that could possibly help me, but I have not found one describes what to do in my situation. \n\nWhat should I be doing to prepare for college? From what I have read many CS students come into college with some knowledge of what they are doing, I personally have no clue what I should be studying and improving. I've heard there is going to be quite a lot of math involved in College but I shouldn't have too many problems with it I have always been pretty good at math and am currently taking the second highest math course at my high school so I don't think I should have a problem with that part, but other than that I am completely clueless on what to do. What should I be doing?\n\nI also want to mention that i'm gonna be using this learning experience as the main topic of my senior project and would love the advice of someone that is willing to help!!\n\nThank you!!!", "score": 3, "comments": [{"body": "> From what I have read many CS students come into college with some knowledge of what they are doing\n\nI would avoid making generalizations. It's certainly true that *some* CS students come into college with some prior understanding of programming, but it's not necessarily the case that *many* or *most* of them do. Of course, the exact expected demographic of the students will vary from school to school, but most CS intro courses at universities and colleges are designed to start from complete scratch: they assume most students have little to no prior knowledge of how to code.\n\nThis is something you could perhaps research about your target schools: investigate what their intro CS courses are like, see if they have a reputation for being high-quality, etc...\n\n> I personally have no clue what I should be studying and improving\n\nReally, almost anything you could possibly do could help. You could try working on a project of your own + looking up relevant tutorials and resources as you go, you could try purchasing and following along some intro book, you could try following along some free course on coursera or edX or something, you could try joining some tech-oriented club...\n\n(For example, try checking to see if your high school has an FRC or FTC robotics team -- those can be quite fun.)\n\nYou could even maybe take a look at your target school and see if their intro classes make their lectures/slides/homework assignments publicly available and try working through those.\n\nIt's also totally fine to just not worry about this at all and enjoy your senior year. As I said, most intro courses are designed to start from square 1, so there isn't necessarily any *need* to try and get ahead.\n\n> I've heard there is going to be quite a lot of math involved in College but I shouldn't have too many problems with it I have always been pretty good at math and am currently taking the second highest math course at my high school so I don't think I should have a problem with that part\n\nRegarding math: you could also perhaps take a look at discrete math and proofs. You've probably mostly done calculus up to this point. Getting exposed to different kinds of math might be useful/an interesting and eye-opening experience.\n\nAs a note: the amount of math you'll be expected to learn can vary quite dramatically from school to school. Some CS programs bake in mathematical rigor from day 1 and in nearly every class after that point; others just spend a single class or two covering the mathematical foundations of CS (and prioritize teaching other things).\n\nAgain, something to research.\n", "id": "e52m7t4", "replies": [{"body": "Thank you! I have been looking into many books recently that could help me in getting started so i'm glad i'm doing something that can help me. Also you mentioned that I could start working on a small project of my own, but I really don't know what would be exciting to work on, I don't really have any knowledge on what I can create. It sounds really interesting and I'm hoping I could do it for my senior project!!!", "id": "e52mulx", "replies": []}]}, {"body": "> What should I be doing to prepare for college?\n\nFirst off, you\u2019ll want a programming environment.  If you don\u2019t have a computer that can run Linux, I strongly recommend finding one (that\u2019d be a different subreddit), installing Linux, and getting acquainted with it.  It doesn\u2019t have to be super-powerful; you\u2019re not debugging supercomputing crap.  If you have an old non-Apple laptop lying around that still works, perfect.  Some people will recommend Apple stuff, but once you get to Architectures you\u2019ll be one of the people who\u2019re shit out of luck when the time comes to `gcc` and run their \u201cHello, world\u201d assembly program, because the dynamic linkage to `printf` doesn\u2019t work the same way under MacOS as it does under Linux.\n\nKnowing how to use the OS\u2019s basic tools and what tools are there will be very useful, so fuck around a bit once you\u2019ve got it up.  Look at what\u2019s listed in the package manager (e.g., Synaptic for Ubuntu), and add on anything that look interesting or useful if you have space for it.  You probably don\u2019t want to get into a full-blown IDE yet, but find a plaintext editor you like (I tend to prefer KWrite or Kate) and get it configured to a reasonable state.  (Don\u2019t get too deep into vim or emacs yet, though playing with them is a good idea if you have spare time; those are *very* useful for quick edits or over six layers of mixed-OS SSH but less so for stuff you\u2019re likely to care about.)  Ditto terminal emulator\u2014again, KDE user so Konsole is my go-to.  Get your computer to where you won\u2019t be tempted to fiddle with customization while you should be doing other things :), although getting it beaten all the way into place will remain a never-ending labor of love.\n\nIf you haven\u2019t already, look at the web sites for intro-level CS classes currently being taught.  Chances are they\u2019ll use the same languages and environments when you take them\u2014probably the same curricula too\u2014and for the most part they\u2019ll be using publically available stuff.  Make sure the necessary language packages are installed.  If they use Java, grab one of the recent Oracle JVMs (probably have to grab from the site and install manually); if they use C or C++, install the appropriate GCC or Clang packages from your distro; if they use Python, you\u2019re probably good to go as-is, though you may need to juggle versions.  Regardess, see if you can get a basic \u201cHello, world\u201d running in the same fashion as you would for the class.  After that, you\u2019re about as set as you can tolerably be, so have some playtime with the OS, language, and compiler(s)/interpreter(s).  Don\u2019t be afraid of getting out ahead of whatever the class would teach you; worse comes to worse you\u2019ll mis-learn something minor, or you\u2019ll be able to take a test without studying.\n\n> From what I have read many CS students come into college with some knowledge of what they are doing\n\nIn my experience, surprisingly few and surprisingly little knowledge.  YMMV.\n\n> I've heard there is going to be quite a lot of math involved in College\n\nIf you can handle bases other than 10 (e.g., EA\u2081\u2086\u00a0= 111\u00a01010\u2082\u00a0= 172\u2088\u00a0= 234\u2081\u2080), logarithms, and basic big-sigma notation, you\u2019re right where you need to be.  (Probably a bit ahead of the crowd, even.)  Until you pick a field to specialize in, most of the hard-ish math will be in analyzing algorithms, so if you can get a feel for recursion and proof by induction, you\u2019ll have an easier time with that.  Peeking a bit at Boolean logic, logic circuit design, linear algebra, and number theory isn\u2019t a bad idea.", "id": "e53pn5x", "replies": [{"body": "Thank you for all the advice! You stated that I would need a programming environment for well yknow programming lol. I have built my own computer before and am currently using a pretty good machine right now, I do have a hobby of playing games on my down time sometimes so I do like that I am always compatible. Should I purchase a new computer? I don't have a budget or anything I can pretty much choose whatever laptop I want if its for college. I've been saving for quite a long time!! Is that the better option or??", "id": "e5486ut", "replies": [{"body": "I wouldn\u2019t bother buying a new computer right now, although having a Linux-only box is probably a good idea at some point.  (Dual-booting sucks badly; I assume Windows is okay qua VM nowadays but I don\u2019t have experience with that personally.)\n\nA laptop is handy, but it\u2019s not strictly necessary (unless they say it is, and they probably won\u2019t) and IMO tends to distract during class more than it helps.  Physically writing things down is a good thing, and having a computer set up in your dorm room that you can SSH/SFTP into from labs or your phone is super-useful.\n\nIf you do get a laptop, you don\u2019t need to get anything super-expensive; $1500 would suffice for a laptop that, without undue smacking-at, dropping, or crushing, should last you through school.", "id": "e55i4gz", "replies": []}]}]}, {"body": "Get a book and start reading.", "id": "e52s6o8", "replies": []}], "title": "Senior in High School With a Lot of Questions... (Sorry if its a bit long)"}