{"url": "https://www.reddit.com/r/learnprogramming/comments/9bucni/switching_careers_advice_needed_for_switching/", "text": "Hey all. I'm currently working in the video games industry, it was a childhood dream of mine. After a few years of development the charm of the industry has worn off, mainly due to the salary hit that you're expected take in exchange for passion. I've decided to leave the industry and specialize in finance where things are more lucrative.\n\nI hold a masters degree in computer science with 3 years in video games and 1 year in general programming across various languages such as C++, C#, Java etc. I've looked at many of the jobs available and they all seem to request linux development experience. As of now all of my C++ development has been within the windows environment. To compensate for this I'm planning to develop a linux based finance app as a portfolio piece over the next few months. I'm aware that C++ is in theory cross platform but there are bound to be platform specific hurdles (I have minimal linux experience in general). Can anybody recommend a good book or website that may aide me.", "score": 1, "comments": [{"body": "To be honest, I\u2019d just apply for jobs regardless of the OS and learn on the job if it\u2019s not Windows. Unless you are doing something very infrastructure-heavy, you are unlikely to have any issues. ", "id": "e55rh0d", "replies": []}, {"body": "I've developed on both Linux and Windows over the past 20 years.\n\nThe first thing I'd suggest is to not worry about developing a Linux-based app. It's highly unlikely that you'll be developing Linux \"desktop\" apps, and I'm not sure that skill would help much.\n\nThe reason places want Linux experience is because Linux powers the vast majority of servers, plus supercomputers and embedded devices.\n\nHere are some things you might find different about Linux, coming from Windows, that you might want to learn:\n\n* There are dozens of Linux distros, and quite a few different graphical desktop environments. It might help to get familiar with a really popular one like Ubuntu with its default GNOME-based desktop, but honestly there's so much variation here that nobody knows them all.\n* Every Linux distro has amazingly awesome package management. That means that from the command-line or from a graphical tool you can basically pick any software that runs on Linux and with one click, install it and all of its dependencies. Compared to Windows, installing supported software is amazingly easy.\n* Learning the command line is critical. Sure, there are GUIs for many things, but the real power of Linux is being able to do everything from the command line so that it can be scripted and controlled remotely. Learn to use input and output redirection, pipes, tee.\n* Piping commands together is something you'll do every day. On Windows you might open a log viewer and type a string into the \"filter\" textbox at the top to see only the logs you're interested in. On Linux you'll take the file and run it through \"grep\" to get the lines you want, then maybe use sed to trim away some of the fields you don't care about and transform others, then redirect that result to a file. Again, the key advantage is that you can now script it.\n* Unix has an \"everything is a file\" philosophy. Want to see what processes are currently running? There's a magic directory that contains an entry for every process. When a process starts up, a new entry appears in that \"directory\". Same with USB devices, network interfaces, and more. The filesystem is really powerful.\n* Speaking of the filesystem, the Linux filesystem is dramatically faster than on Windows. Searching the whole hard drive for a file with a particular name is an order of magnitude faster on Windows. Doing a \"git status\" on a large repository is an order of magnitude faster.\n* Starting new processes is different. On Windows, you execute a new process. On Linux, you fork an existing process.\n\nThere are some things you'll dislike compared to Windows:\n\n* There's no IDE as good as Visual Studio.\n* GUIs are more poorly designed and more inconsistent\n* There's no single \"best\" way to do a lot of things, there are often lots of competing alternatives, even for stuff that's really core to the system\n* There's very little binary compatibility. It's hard to make an executable that \"just works\" on most Linux distros. (Docker helps with this.)\n\nGood luck!\n\n&#x200B;\n\n&#x200B;\n\n&#x200B;", "id": "e55snlu", "replies": []}], "title": "Switching Careers. Advice needed for switching from Windows C++ dev to Linux"}