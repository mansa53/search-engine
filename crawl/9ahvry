{"url": "https://www.reddit.com/r/learnprogramming/comments/9ahvry/how_to_get_into_contributing_to_open_source/", "text": "I really want to get into contributing to open source software communities. I also want to create softwares for my own use. I just know all that these \"learning\" websites teach.\nBut I am not able to know how much knowledge, is the base to start with. Every other website that teaches programming, has a redundant material consisting of a few functions and few other basics. I just can't understand how that knowledge is enough to create a software.\nI don't seem to see a bridge between this programming knowledge and that equired to create softwares. All I can think is that recruiters check this knowledge and all the other training is given at the companies.\n\nBut again, where do open source developers start from?  What is the base knowledge required to get into completing little tasks in the open souce projects.\nI've been trying a long time to get into coding but I don't know HOW to start, let alone where. \nI'd really like to know how to start to get into software development.", "score": 382, "comments": [{"body": "Highly recommend checking these out :)\n\nMaking your first contribution: [https://www.firsttimersonly.com/](https://www.firsttimersonly.com/)\n\nIdentifying projects to contribute to: [https://www.codetriage.com/](https://www.codetriage.com/)", "id": "e4vncfh", "replies": [{"body": "Thanks man, this looks great.", "id": "e4vr9r0", "replies": []}, {"body": "I also made a site to help with this: [https://gityouanissue.com](https://gityouanissue.com) \n", "id": "e4wgjtd", "replies": []}, {"body": "Thank you! Awesome resources.", "id": "e4wlc1f", "replies": []}]}, {"body": "Pick a project on GitHub using the language of your choice and dive in.  \n  \nSometimes projects have a tag/flair for tasks that are like \u201cEasy\u201d, \u201cIntro task\u201d, etc.  \n  \nWhen you pick a new project, attaching a debugger, adding tons of random breakpoints and generally exploring the code base could help. ", "id": "e4vn9y0", "replies": [{"body": "The issue I get stuck with most of the time is the huge code base is lots and lots of folders and files. How do I get rid of this phobia and pick a starting point?", "id": "e4vt6lh", "replies": [{"body": "It\u2019s easy to get lost in large code bases, and I find myself doing that too sometimes. It\u2019s a problem that can do with wanting to understand everything immediately. You should point your focus to one section/problem that\u2019s being solved in an application, and start there. For example, \u201chow does registration/authentication work in this web app?\u201d Start there, walk through the code with a debugger, and the problem is smaller. ", "id": "e4vvx5i", "replies": [{"body": "Thank you for such a nice advice. I was going through a few p2p networking courses. I will keep your approach in mind next time I start tweaking around it.", "id": "e4wqduq", "replies": [{"body": "Can you please share the link of p2p I am really interested in it?", "id": "e4ws97g", "replies": [{"body": "Libtorrent : https://github.com/arvidn/libtorrent\n\nTransmission : https://github.com/transmission/transmission", "id": "e4wsf1z", "replies": []}]}]}]}]}]}, {"body": "Apache has a help wanted site that shows some Apache projects that are looking for new contributors. They're all organized by difficulty and language too. [https://helpwanted.apache.org](https://helpwanted.apache.org).\n\nIf you want to learn how to actually create software instead of just the basics of a language I would suggest just picking a side project and building something for fun/experience. There's a lot of resources to help you get started on projects like these, here are a couple I've found helpful.\n\n[https://github.com/danistefanovic/build-your-own-x](https://github.com/danistefanovic/build-your-own-x)\n\n[https://medium.freecodecamp.org/the-secret-to-being-a-top-developer-is-building-things-heres-a-list-of-fun-apps-to-build-aac61ac0736c](https://medium.freecodecamp.org/the-secret-to-being-a-top-developer-is-building-things-heres-a-list-of-fun-apps-to-build-aac61ac0736c)\n\n[https://medium.freecodecamp.org/the-secret-to-being-a-top-developer-is-building-things-d3d058e4e472](https://medium.freecodecamp.org/the-secret-to-being-a-top-developer-is-building-things-d3d058e4e472)\n", "id": "e4vum8w", "replies": [{"body": "All these projects are based on JavaScript.\nThis brings me to (a rather naive) question that what are c++ and java use for? And could you suggest some projects based on them", "id": "e4wsfhv", "replies": [{"body": "Not really sure what you mean, that last link is the only one that's all JavaScript. The GitHub one has a ton of Java and C++ project ideas. You could also just do a quick Google search like, \"beginner Java project ideas\". \n\nJava and C++ are used for a lot of things. Java is very popular in Enterprise development, and is often used to build the back end of many web apps. C++ is very low level and fast, so it's often used for things that need to deal with hardware or that need to be as fast as possible. They're used for more than just that though.", "id": "e4wvvsg", "replies": []}]}]}, {"body": "It sounds like you've studied languages without learning any frameworks. What language do you know? Learn an appropriate framework for making applications in that language next:\n\n* JS -> Express/React\n* Python -> Django or Flask\n* Java -> Spring or Android\n* Ruby -> Rails\n* C# -> Dotnet or Xamarin\n\nAs far as OSS my first contributions were to libraries I was currently using but didn't have a function I wanted so I just made a tiny PR to add it.", "id": "e4vt7hz", "replies": [{"body": "Sometimes a tiny PR can have a big impact and it will take months to merge it so it can be disheartening. ", "id": "e4wjhsy", "replies": [{"body": "Translation? How can you expect me to lurk when you're saying all these fancy things?!", "id": "e4wm0r4", "replies": [{"body": "The example pull requires was simply a CSS for image setting Max width to 100% but can't do that", "id": "e4wmatj", "replies": []}]}]}]}, {"body": "I feel like I run into two archetypes of programmers.  People who learned how to write code because they wanted to be programmers and people who had a problem and needed it fixed.\n\nFind some problems and fix em.  ", "id": "e4vo0b0", "replies": [{"body": "Hard when you do nothing", "id": "e4wbtg8", "replies": [{"body": "Brilliant!  Do something!  Do fuckin ANYTHING.  Make a video game.  A real basic suckass one.  Make an annoying chime that chimes every time you click on a link during an odd second.  Or a robot voice that announces what numerical level your volume is at when you adjust it.\n\nIt'll probably suck and not work and now you have things to fix.  ", "id": "e4wcd8d", "replies": [{"body": "That robot idea sounds cool. Any idea what modules I should look into to program something like that in Python on macOS? ", "id": "e4wghle", "replies": [{"body": "~~by default py should have `say` and a way to check the OS' volume.~~\n\nThat's what I get for taking a guess at a language I don't use.  \nHere's some TTS modules https://pythonprogramminglanguage.com/text-to-speech/", "id": "e4wwexq", "replies": [{"body": "I\u2019ll look into those, thank you! I\u2019ve been programming for close to a year and one thing that\u2019s a mystery to me still is working with the OS. Just gotta research and practice more though that\u2019s all.", "id": "e4x1mrn", "replies": []}]}]}, {"body": "Oh, there's tons of random bs I wanna make. But fixing problems? Can't do none of that.", "id": "e4wczaq", "replies": [{"body": "Almost everything I've ever programmed has had random problems.  What I'm saying here is if you want work then go work.  There isn't a magic repository that has all these issues that you can handle and are interested in.  Find something you are interested in and improve it, build it, and/or maintain it.", "id": "e4wwqhm", "replies": []}]}]}]}]}, {"body": "I found most of these answers unhelpful when I was at your position exactly one year ago. Now I'm one of the top contributors for an Open source project. I got in so fast because I contacted and asked all the main contributors for help. They always need help and they'll be glad to help out someone who genuinely want to contribute to the project. So ask the people what they want, Email them, Irc or through the issue tracker. Just ask them", "id": "e4wecet", "replies": [{"body": "So, what is the basic amount of knowledge required in a language? \nWhat all should one be able to do, to start with the basic contributions? ", "id": "e4wm8m0", "replies": [{"body": "Just know enough to solve problems in a language. You can always learn more about the language and the framework as you get more into the project. ", "id": "e4woqvl", "replies": [{"body": "In fact if you don't learn anything while going through the project, you probably aren't doing it right. Granted you might already be an expert in the way of ipythons codebase, but chances are they are using something you have to interact with that you have little to no experience with.", "id": "e4xijre", "replies": []}]}]}]}, {"body": "Honestly, fix something, or add details to the doc and put up a PR (pull request).  \nYou'll find out if they're even interested in community involvement.  There are a large number of open source repos where the admins and a small cadre of devotees are the only people that can even merge code in.\nIf the PR goes unaddressed or they close it, you'll know you're not welcome.", "id": "e4wbuyw", "replies": [{"body": "So a PR is like a stranger coming by your office unannounced and saying \"Hey, I saw your fence needed painting. Do you like the color?\"\n\nIf you do like the color you can approve it. If you dont like the color or prefer the old one, you can do nothing and it stays the same. \n\nAm I understanding?", "id": "e4wm5hu", "replies": [{"body": "Exactly. ", "id": "e4wsks9", "replies": [{"body": "Heck yeah! I'm learning stuff!", "id": "e4wtmfm", "replies": []}]}, {"body": "Yeah, and an open source project should be welcoming.  They may respond with change requests, but a good project will be happy to have anybody even thinking about painting the fence.", "id": "e4x9epz", "replies": []}]}]}, {"body": "> I don't seem to see a bridge between this programming knowledge and that required to create softwares.\n\nThe bridge between the knowledge and the product is a few weeks/months/years of sitting down and actually writing the damn thing. There is no magic, whenever you don't understand something, you just look it up.\n\n> But again, where do open source developers start from?\n\nWherever you want. Pick something that interests you and improve on it in some way or just start your own projects.", "id": "e4vsno5", "replies": [{"body": "Yeah, trials and errors.\n surely the most important thing is experimenting and actually making \"things\" happen, focusing on certain project and digging into it, ", "id": "e4w0ztw", "replies": []}]}, {"body": "http://automatetheboringstuff.com \nI think this will be pretty helpful for you.", "id": "e4vja4f", "replies": []}, {"body": "well the way to programming is to start programming. start with knowing functions and data types then try to create something out of what you've learnt. then learn about OOP and classes then practice programming with creating games and learn about cellular automata (they are really helpful when starting programming they have little tricks here and there but they are good to start with). and NEVER EVER STOP!!!! Try to participate in coding challenges in some discord servers they'll help you increase your knowledge and control over programming. i'd suggest you read this book: [https://inventwithpython.com/cracking/](https://inventwithpython.com/cracking/)  after getting a bit into programming like maybe after a month. and if you want to create games then use pygame it's really good and easy to use too but learn how to use it after learning about classes and all that stuff. and that's all i can say. Good Luck!!!", "id": "e4vnxk6", "replies": []}, {"body": "Best way I have found is using open source repos finding functionality that is missing or incomplete and posting on github asking if you can open a pull request for that functionality. Most repo owners as happy for the help. Good open source repos have a process in place with automatic builds kicking off on your pull request. ", "id": "e4w6axv", "replies": []}, {"body": "!remindme 16hrs", "id": "e4wdz4r", "replies": []}, {"body": "Firstly, you should check the licence of the project that you want to work on. 'Open source' is a buzzword and you should seek out the 'free as free beer software' projects and not the other ones. \n\nThen, for starters, you could start off by adding concrete a concise comments in a code. Creating good comments in a project is somewhere underrated and for a source code, having a comments is a **great +.** \n\nAlso, you should check out functions in source. There are different ways of achieving something in programming and trying to get more 'functional' and declarative way to solve some problem is **the greatest** thing that programmer can offer. No scanning the code to see what this iteration does, or what this variable holds at this point of run-time, it just does what you want. ", "id": "e4wpzui", "replies": []}, {"body": "Just have a look. \n\nThis project could need your help :)\n\nhttps://elementary.io/en/get-involved", "id": "e4wq5d8", "replies": []}, {"body": "What help me to transverse the gap between online courses and actual, useful software was to start building simple apps my self with the knowledge I had.\n\n&#x200B;\n\nHowever, I did this in a manner where I really tried to make great apps (think of all the situations one might want to use such an app for it to be flexible, think of the ways somebody can misuse it or make errors informative and helpful, instead of frustrating and etc) and often this would require me to look up how to something faster or how to do something at all, and all those look-ups would gradually add to my knowledge more and more which I would immediately use to create my apps. \n\n&#x200B;\n\nThe literally first app that I ever created when I was just starting to learn Python was a simple program where you would input a number of seconds and it would spill you out how much hours that is. \n\n&#x200B;\n\nA simple enough task, even for somebody who is learning programming for just a week, right? Yes, but I ended up writing over 300 lines of code for it! Why? Because I asked my self: How can somebody fuck this up (by typing in letters and so on)? How can I make mistakes not frustrating? What if somebody wants to put in minutes or hours and wants to get something else? How much precision does somebody want? Can I put a calendar in this too?  And many more... \n\n&#x200B;\n\nSo after just 2 weeks of learning and one week of writing, I had my first little app together. I had to look up so many things, especially how I can write something more efficient and I learned classes and objects much earlier than what I would through the course I was taking. \n\n&#x200B;\n\nThis showed me that that is the way, at least for me, to learn efficiently and productively. That's how I continued to learn programming to this day, sometimes reading whole books to finally catch up on some simple, overlooked functions that I needed to write my newest piece of code. \n\n&#x200B;\n\nIt made learning programming plenty of fun and it really burned it into my memory. That said, I never learned it to do it as my primary profession, but rather to help me with my scientific endeavors and as a secondary source of income. ", "id": "e4ws7xd", "replies": []}, {"body": "why do u 'really really want to start...'? \nWhat is the goal? \n\nFeels like you want to get into it 'cause u read somewhere that it's important.\n\nContribution happens naturally - u are using something, you find a bug, you fix it and there you go.\n\nYou've received some good links here so use them but answer to yourself why do u wanna do this", "id": "e4vtb5i", "replies": [{"body": "There's enough cynicism in the world without you trying to make people doubt  themselves. Leave that shit at the door. \n\nIt's hard enough for folks like me to finally commit to doing something and then I see a comment like yours and start obsessing over whether I *really* want to do this as a career, or hell, just a hobby. \n\nI'm done with it. No one needs to be reminded that nothing is certain in life. ", "id": "e4wm9g5", "replies": [{"body": "calm down there little boy \ndrink little bit of cold water\n\n\nI struck your nerve it seems \ni am sorry that you are surrounded by cynicism and people who use 'nothing is certain in life' as excuse not to do something\n\n\ni agree that it's hard for people to commit to do something \nand i agree that people over think things \n\n\nbut comments like mine should remind people that they should do what they feel good doing and not force things 'just because someone told them, read somewhere', they shouldn't do programming cause it's trendy now.\n\n\nit's true that if they fail they would've learned and known that this is not for them but usually that kind of mindset has to be in place in order for lessons to be learned instead of going into circle jerk of 'oh poor me'\n\nRead book Start with Why(it's a small book) that might open your eyes about what i am talking and why WHY is important.\n\nAlso i see that you are in transition period. Stick to your guns btw! It will take about 1-2years (it least it was in my case).\nDealing with people around me was the hardest part :D \nBut that was only transition.  After that they get used to 'new you' and it's all good, some people might just drop from your life as consequence.\n\nWhat helped me was to be quiet and do my thing behind the closed doors (and not read comments that trigger rage).\nAnd those actions changed my life.\n\nGood luck young one!\n\n ", "id": "e4wnd37", "replies": []}]}, {"body": "Good point!\nBut I am actually interested. Thanks!", "id": "e4zcszh", "replies": []}]}, {"body": "You're asking the wrong question. The thread title is about open source, but the post body reveals that open source has nothing to do with what you're asking; your actual problem is you don't know how to write real software at all. So solve that, then figure out the open source thing. ", "id": "e4vo5vr", "replies": []}], "title": "How to get into contributing to open source programs?"}