{"url": "https://www.reddit.com/r/learnprogramming/comments/9bkte6/clean_coding/", "text": "Hello, currently I'm at around intermediate level programming, but for builiding large, public programs that may involve other developers I am looking into ways to ensure my projects have a solid structure, that is intuitive for others.\n\nThe way I'm doing this in some of my more recent projects is by using interfaces for polymorphism, this makes it easy to understand which methods are associated with other classes.\n\nApart from the obvious practices like using descriptive variable names, comments and organising it to look nice, can you guys reccomend any design patterns that make a project with good structure? \n\nExamples would be the factory-design, builder-design and strategy-design patterns.\n\nThanks for any recommendations.", "score": 0, "comments": [{"body": "Read *Clean Code* by \"Uncle Bob\" Robert C. Martin", "id": "e53r9ba", "replies": [{"body": "Thanks for the reccomendation, is there any free resources? I'm still in highschool and have little cash.", "id": "e53rmi2", "replies": []}]}], "title": "Clean Coding"}