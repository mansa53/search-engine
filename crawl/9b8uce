{"url": "https://www.reddit.com/r/learnprogramming/comments/9b8uce/can_someone_help_troubleshoot_this_mysql_command/", "text": "I'm trying to import a csv file into a Wordpress database table.\n\nHere's what I entered in the SSH command line (with my personal details removed):\n\n    /home4/public$ mysqlimport --ignore-lines=1 --fields-terminated-by=, --verbose --local -uUSERNAME_wrdp1 -pPASSWORD DATABASENAME_wrdp1 wp_posts.csv\n\nAnd here's the output I got:\n\n    Warning: Using a password on the command line interface can be insecure.\n    Connecting to localhost\n    Selecting database DATABASENAME_wrdp1\n    Loading data from LOCAL file: /home4/public/wp_posts.csv into wp_posts\n    DATABASENAME_wrdp1.wp_posts: Records: 1608359  Deleted: 0  Skipped: 1608351  Warnings: 32676872\n    Disconnecting from localhost\n\nIn short, it appears to be finding the records--but skipping all of them.\n\nDoes anyone have an idea how I can edit my original command to get the CSV file imported?\n\n&#x200B;", "score": 2, "comments": [{"body": "I'd hazard a guess those 32 million warnings are an indication. Do you know what they are about? I  haven't used MySQL in a long time, but maybe you can do do this in the GUI instead, so maybe you can see what these warnings are?\n\nEdit: seems like it imports 8 records fine, but skips the rest. Maybe there's some formatting error that causes the subsequent records to not match the table(s) you're importing to?", "id": "e515sw6", "replies": [{"body": "That's correct, there are eight records that do import correctly. Seven of them import as blank entries and the final one just has three columns. Does this give you any ideas of what I'm missing?", "id": "e51nmzd", "replies": []}]}, {"body": "Try the `LOAD DATA INFILE` command instead of `mysqlimport`. \n\nhttps://dev.mysql.com/doc/refman/8.0/en/load-data.html\n\n    LOAD DATA INFILE \"/path/to/your.csv\"\n    INTO TABLE import_data\n    COLUMNS TERMINATED BY ','\n    OPTIONALLY ENCLOSED BY '\"'\n    ESCAPED BY '\"'\n    LINES TERMINATED BY '\\n'\n    IGNORE 1 LINES;\n", "id": "e51gsem", "replies": [{"body": "Thanks for this suggestion. I saw a command like the one you've recommended elsewhere, but I couldn't figure out where to enter it. I tried entering it in PHPMYADMIN as SQL query--but it didn't work. And I tried to enter it on the command line of SSH, but it only accepts commands without a line break.\n\nIf you can point me in the right direction, I'd love to test this. ", "id": "e51nieo", "replies": [{"body": "You need to start a CLI instance of `mysql` and then you can run commands against your database. I would think you can run it in PMA but the paths might be wonky or just not work. Not sure on that I don't really use PMA.\n\nYou can launch `mysql` pretty easily though: `mysql -u USERNAME -p DATABASENAME` You should get something like this: https://imgur.com/TnN5Uue (I just ran `show tables;` to show I was in my Wordpress DB). Once you're there you can what I posted before. Each line is part of the same command, mysql does not interpret line breaks as the end of command like BASH does, so the command doesn't end until you explicitly tell mysql to end it (with the `;` character).\n\nI did a quick run through with a sample CSV using my dev box to demonstrate: https://pastebin.com/7K3Sp94r\n\nJust a caveat: You might get this error (I did): `ERROR 1290 (HY000): The MySQL server is running with the --secure-file-priv option so it cannot execute this statement`\n\nWhich means mysql is configured to only accept files from a specific location. \n\n`mysql> SHOW VARIABLES LIKE 'secure_file_priv';`\n\nWill show where that directory is and you can then (over SSH) use `mv` or `cp` to place the CSV file there. That might work for you or it might not. I'm guessing there's a reason for all those warnings, this might at least tell you what it is.", "id": "e51r6xz", "replies": [{"body": "I've tried opening MySQL via the Command Line in SSH--but the operation just hangs. I never make it to the screen you referenced.\n\nSo, I tried to add the other information from your alternate code to my existing one:\n\n    mysqlimport --ignore-lines=1 --fields-terminated-by=, --fields-optionally-enclosed-by=\" --fields-escaped-by=\" --lines-terminated-by=\\n --verbose --local -uUSERNAME -pPASSWORD DATABASENAME wp_posts.csv\n\nAnd, now I'm getting a different error message:\n\n    mysqlimport: Error: 1083, Field separator argument is not what is expected; check the manual, when using table: wp_posts\n\nAny idea how I can edit the command above to make this work correctly?", "id": "e51wryb", "replies": [{"body": "Not really sure at this point. I have literally never used mysqlimport in my life. The errors make me think there is an issue in the data set, like an extra or missing ',' somewhere but really that's pretty much just a shot in the dark at this point.", "id": "e522z2n", "replies": [{"body": "Just a quick follow up note, I figured out the problem. The double quotes after the enclosure portion of the command above have to be enclosed themselves in single quotes like this:\n\n    --fields-enclosed-by='\"'\n\nAs ever, the smallest error makes the biggest impact.\n\nMany thanks for the help, context, and alternate angle. I really thought this was the puzzle that would whip me for good, so your input encouraged me to keep at it.", "id": "e52a8q0", "replies": [{"body": "Fantastic! Often the tiniest of errors cause these cascading problems.   \n\n\nI had an issue here at work the other day where a binary reference I made to Restsharp (should have been a Nuget package, not a binary reference) in a project that worked fine when building locally, caused total havoc with several unrelated packages in the solution on our build server. I still don't know why that happened.", "id": "e5304ue", "replies": []}]}, {"body": "I don't believe it's the dataset. I'm restoring a backup to the same database from which I exported it a couple days ago. So, I think it's my command.\n\nIf you're unfamiliar with  mysqlimport, do you have any idea why my attempt to get into mysql won't complete?\n\nI entered mysql -uUSERNAME -pPASSWORD DATABASENAME (albeit with my actual username, password, and database name included.\n\nIf you have any ideas, I'd happy to try that approach again.", "id": "e526sbl", "replies": []}]}]}]}]}]}], "title": "Can someone help troubleshoot this MySQL command line error message?"}