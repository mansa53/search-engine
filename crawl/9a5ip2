{"url": "https://www.reddit.com/r/learnprogramming/comments/9a5ip2/learning_java_and_need_some_help/", "text": "Hey r/learnprogramming , I've been given some work to do for school and have been stuck for a few days now. I can't seem to work out how to read to the end of the file, and subsequently how to check whether the manufacturer and model match those found in the file.\n\nThe question is as follows:\n\nWrite a program that asks the user to enter a file name.  Once this file has been opened, the user is then prompted  for a manufacturer and a model. The program then reads through the file. If a matching manufacturer and model is found in the file, all the information for that plane is displayed to the screen. The order of display is shown in the example runs below. Manufacturer's can be repeated in the file, but, the combination of manufacturer AND model is unique in the file, so there will be at most only one match. User entered manufacturer's and model's must be case insensitive, that is, any combination of uppercase and lowercase letters must give the same result. If the entire contents of the file has been read and no match is found, then an appropriate message is displayed to the screen.\n\n*Note: user input is in bold.*\n\nExample run: \n\nEnter file name >> **planes.dat** \n\nEnter manufacturer >> **Sukhoi** \n\nEnter model >> **Su-27** \n\nName: \"Flanker\" model: \"Su-27\" manufacturer: \"Sukhoi\" range: \"3530kms\" passengers: \"1\"\n\n&#x200B;\n\nHere's my **terrible** code ( for those who have bothered to read this far!) \n\n    import java.util.*;\n    import java.io.*;\n    \n    public class PlaneQuestion\n    {\n       public static void main (String [] args) throws IOException\n       {\n        Scanner keyboard = new Scanner (System.in);\n        System.out.println(\"Enter a file name: \");\n        String fName = keyboard.nextLine();\n    \n        File fileToOpen = new File (fName);\n        Scanner myFile = new Scanner(fileToOpen);\n    \n    \tSystem.out.println(\"Enter manufacturer: \");\n       \tString userManufacturer = keyboard.nextLine().toLowerCase();\n       \t\t \n        System.out.println(\"Enter model: \");\n        String userModel = keyboard.nextLine().toLowerCase();\n    \n      while (myFile.hasNextLine())\n        {\n          String line = myFile.nextLine();\n    \n          int first = line.indexOf(\"^\");\n          int second = line.indexOf(\"^\");\n          int third = line.indexOf(\"^\");\n          int fourth = line.indexOf(\"^\");\n          int fifth = line.length();\n          System.out.println(fifth);\n          \n          String passengers = line.substring(0,first);\n          String range = line.substring(first +1, second);\n          String name = line.substring(second + 1, third);\n          String manufacturer = line.substring(third + 1, fourth);\n          String model = line.substring(fourth + 1, fifth );\n    \n          System.out.println(\"Name: \" + name + \" model: \" + model + \" manufactuer: \" + manufacturer + \" range: \" + range + \" passengers: \" + passengers);\n       }\n    \n       }\n    }\n    \n\nThe error message I receive is :\n\n \n\nException in thread \"main\" java.lang.StringIndexOutOfBoundsException: begin 2, end 1, length 30\n\nat java.base/java.lang.String.checkBoundsBeginEnd(String.java:3107)\n\nat java.base/java.lang.String.substring(String.java:1873)\n\nat PlaneQuestion.main([PlaneQuestion.java:35](https://PlaneQuestion.java:35))\n\n&#x200B;\n\n**ANY HELP WOULD BE GREATLY APPRECIATED!** \n\n&#x200B;\n\n&#x200B;", "score": 1, "comments": [{"body": "You're attempting to delimit data with a caret by getting the index of each caret. However, you're using the same call to line.indexOf() each time. Hence, all of your indices point to the same first instance of a caret. What you want to do instead is use the version of indexOf() that accepts a starting point for the search, and make that starting point equal to the previous index plus one. ", "id": "e4swarv", "replies": [{"body": "Also, if you have had exposure to arrays, then String.split() would simplify your loop a lot.", "id": "e4swj2x", "replies": [{"body": "Thanks for the help! I've been told this way would be easier, unfortunately I haven't learnt that yet.", "id": "e4sy2ot", "replies": []}]}]}], "title": "Learning Java and need some help!"}