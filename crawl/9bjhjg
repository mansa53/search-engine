{"url": "https://www.reddit.com/r/learnprogramming/comments/9bjhjg/learning_oop_does_language_matter/", "text": "My primary back end language is PHP and it has OOP, I'm not sure if it's true OOP but yeah. I also use Python and want to get into C++. I'm just wondering if I learn OOP in one, do I \"learn it\" in the other.\n\n&#x200B;\n\nOne problem is stuff being deprecated. Depends on docs/language it seems.", "score": 1, "comments": [{"body": "There's definitely a continuum of OO support in languages:\n\n1. C has no OO\n2. PHP has OO, but it's implemented poorly and the standard library doesn't use it\n3. Python and C++ both have OO and it's implemented well, and some of the standard library uses it but you never have to\n4. Java and C# are entirely built around OO, it's impossible to write code without classes and objects\n\nSo yeah, if you're learning Java you HAVE to use OO. PHP is kind of a poor choice, I'd avoid it. Python and C++ are pretty different languages overall but when it comes to OO they both give you the tools to use it when you want to.\n\n&#x200B;", "id": "e53nopp", "replies": [{"body": "While it's true a language like Java is entirely built on OO. I've definitely written many programs where all of the code is in one main class. So while some languages are more suited to OO, it doesn't mean that it'll force you to use it.", "id": "e53oqdd", "replies": [{"body": "Yeah but there are a lot of Java library classes where you HAVE to write a class to even use it - for a call back interface, for example. So I'd argue you can't really get away with no OO if you write Java long enough.", "id": "e53owt3", "replies": [{"body": "I've used Processing for about a dozen of my games. That library provides functions to avoid ALL of the OO aspects of Java. I'm just saying that it's entirely possible to write Java without touching OO.", "id": "e53pc0v", "replies": []}]}]}, {"body": "Java and C# I see, someone else mentioned that pair. Nice to hear about Python, I use it but currently only for hardware related stuff(Pi).\n\nOh man, Java or C# it seems hmm\n\nI was trying to go through PHP.net's OOP section, got some ways, but I also was running into stuff like \"this is no longer supported/deprecated\" haha like why won't this :: or something work.", "id": "e55k2c8", "replies": []}]}, {"body": "OOP is a concept. if you get it, you will most likely understand its use in any language.", "id": "e53f03p", "replies": [{"body": "Right I just gotta get into it/adopt it/think that way all the time. Easy to just write things that execute top down usually in one file.", "id": "e55k41q", "replies": []}]}, {"body": "Only the semantics and the supported types of inheritances. Rest all concepts should be common. An exception to this would be something like prototypal inheritance (JS).", "id": "e53f32s", "replies": [{"body": "Ooh man... that prototype thing, I see it, but I never use it.", "id": "e55k37e", "replies": []}]}, {"body": "Use Java or C#. These languages force OOP principles and will be much easier for you to visualize and understand the concepts of the paradigm. I recommend http://moocfi.github.io/courses/2013/programming-part-1/", "id": "e53tzu0", "replies": [{"body": "Isn't C# easier/scoped vs. more broad like C++ or even C?\n\nJava's here to stay right?\n\nThanks for the link, currently it's like I can't think of things to build with these languages coming from procedural/web side. But I think I will do some OOP tasks/challenges to force myself to think/build that way.\n\nI run into that problem of starting to write a crap load of functions everywhere and just running every possible state at once to make sure it works by brute force, it can get bad.", "id": "e55jz2z", "replies": [{"body": "If your objective is to learn OO, you better start with a less overwhelming language. C# and Java have basically everything that C++ has, but is way easier for newcomers to learn and use. I'm learning C++ now and, even though I have already programmed for a good time, it's bugging my head.\n\nC doesn't have object orientation. While Python and PHP supports OO features, none of them forces you to do it. Java and C# help a lot in understanding concepts like inheritance, polymorphism and composition.\n\nJava is around for a long time, and will still be for another long time. Doesn't matter which one you choose between Java and C#, both are very similar.\n\nFor projects, I suggest you try to build a social media. You'll have to apply most concepts of OO. Feel free to PM me anytime if you need some help.", "id": "e55vhut", "replies": [{"body": "I gotcha, I heard there are like different versions of C++ I'm not sure if they're different but regular eg. incremental versions but I've heard people say \"In C.. 11\" or something haha.\n\n> even though I have already programmed for a good time, it's bugging my head.\n\nPathetic. JK\n\nWhat are you making with it? That's one reason I haven't seriously gotten into it, is I don't know what to use it for, so much of what I do is web based and I can write bad code because of having so much cpu/memory.\n\nHmm social media, really. I couldn't imagine a web-app built on Java... I guess is that what JSP is. I could build a functional Social Media site with LAMP haha... but I guess that is a way to learn. If you know what you have to build but have to translate it into OOP.\n\nThanks for the info and tips.\n\nI have to do it though, because code reuse/code architecture, my code is trash essentially it works but it's trash/rats nest haha.", "id": "e5d4byo", "replies": []}]}]}]}], "title": "Learning OOP does language matter?"}