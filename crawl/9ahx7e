{"url": "https://www.reddit.com/r/learnprogramming/comments/9ahx7e/python_importing/", "text": "I've spent quite a bit of effort learning Python, but something I've never really had to pay attention to is making my own functions to use and import as I need them. Now I would like to make a project, but I'm a bit stuck on how to do this. \n\nI want to make a project folder, say 'myproject', which contains a bunch of files with different themes, for example 'easy\\_functions.py', 'hard\\_functions.py', and so on. In each .py file, there are a bunch of functions. I simply want to say:\n\nimport myproject\n\nand have access to all of the functions across all files. I just want to import a folder that contains any number of .py (function) files, and have access to the functions within those files, but without having to individually import those files. Is this possible?\n\nFrom browsing the site-packages it seems pretty crazy and unorganised for me to have a single file for all functions relating to a given project, especially if they have different 'themes'... ", "score": 1, "comments": [{"body": "I would just use local imports for your functions or classes. Bringing in a global import spanning across all other lines of code makes it harder to break apart and read your code if there was something wrong with it, whereas just importing what you need for each function makes it easier to change anything if needed in the future. \n\nIf you still wanted to have a mass import for all files (I'm a beginner as well so I'm not sure if this is efficient) you could refer to the functions in a main/master .py file. \n(Ex. For using function \"calcSomething()\" in hard_functions.py, you could have a function in your master_functions.py called \"hf_calcSomething()\" that contains a reference to hard_functions.calcSomething() )\n\n*edit: formatting*", "id": "e4vjugz", "replies": []}, {"body": "It's common to split code out into different modules in a subdirectory `mypackage/`, then put code in `mypackage/__init__.py` to import whatever you want to explicitly expose into the `mypackage` namespace. Then, when you do `import mypackage`, the functions you imported in `__init__.py` will be available as `mypackge.myfunction`, etc.", "id": "e4vlf70", "replies": []}, {"body": "The official documentation explains this thoroughly. I would recommend reading this section: https://docs.python.org/3/tutorial/modules.html", "id": "e4wui08", "replies": []}], "title": "Python importing"}