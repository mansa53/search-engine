{"url": "https://www.reddit.com/r/learnprogramming/comments/9b7upl/should_data_be_formatted_on_frontend_or_on_backend/", "text": "I work at a company which has this backend structure - when you send a request to API it doesn't return data that is ready to use, but instead for example 3 arrays which contain necessary data, which we, according to our backend developer, should parse on frontend as we see fit. Mapping and reducing up to 5 arrays for one page became pretty normal, but I am not sure it is the right way to do things\n\nIs this the normal practice or should we talk with our manager?", "score": 1, "comments": [{"body": "This is one of those \"it depends\" questions.\n\nTypically data returned from an API is not ready to display for a variety of reasons. The reason for this is usually that the data from the API is grouped by the type of thing it returns - if it returns multiple things, it's useful for it to group them together so it's easier to process and understand even if it requires some looping to produce output from it.\n\nThe second reason is that APIs are designed to be consumed by more than one user. If your API returns an HTML snippet, sure you can just plonk that to the page, but then everyone else who needs the same data needs to do the cumbersome job of trying to parse it out of the HTML blob.\n\nSo if the amount of processing for your data is fairly reasonable, and it's not a difficult job to do it, then it seems pretty normal to me.\n\nHowever, if the data you receive from the API is structured poorly for no apparent reason, then it might be a sign of an issue that should be corrected in the backend - but keeping in mind that other pieces of software might depend on the API returning it in this format and you might not get your wish (unless your system has some API versioning going on)", "id": "e50zavf", "replies": []}, {"body": "Usually security related formatting (preventing xss and such) would be recommended server side, while everything else can be done on the client.\n\nAPI's usually return json or xml for you to process in your software, no matter if python, js or any other language.", "id": "e51fvod", "replies": []}, {"body": "> Is this the normal practice or should we talk with our manager? \n\nFalse dichotomy, and as such reason enough to suggest that you let this one go.\n\nI would be surprised if you had a case, but that is no longer your main problem.\n\n>when you send a request to API it doesn't return data that is ready to  use, but instead for example 3 arrays which contain necessary data, \n\nSee, you seem to think that what you just said would describe or specify your problem. It doesn't. \"3 arrays\" is a perfectly acceptable and ridiculously common way of passing around information. You're not letting your reader in on what kind of data you are requesting, what format you would like for it to be in, and why what you're getting is unacceptable to you. (I would, for example, raise an eyebrow if I requested an image and received separate arrays of RGB values; with the array names doing double duty encoding the image dimensions... I just don't think that you're facing something like this at all.)\n\nYet here you are, seeking advise. If a million people told you that your back end guy is wrong, and you'd storm of to complain to your manager .... what exactly would your case be? what exactly do you think would happen? \"The nice people on reddit said the backend developer is doing it wrong! Tell him to do what we want!\" - I'd bet good money that this would be met - at best - with a detailed rebuttal from the backend guy that would show your manager just how incompetent you are.\n\n> Mapping and reducing up to 5 arrays for one page became pretty normal, but I am not sure it is the right way to do things \n\nWhat makes you think it wouldn't be? Why do you seem to think that 5 is the magic number here? What, precisely, makes you think that what is \"normal practice\" would even matter here? This is a unique case. If every other website in the world did it the way your backend developer is doing it, it might still be wrong. If every other website did it differently, it might still be the perfect choice for this one project.\n\n> Is this the normal practice or should we talk with our manager? \n\nAnd, last but not least, the false dichotomy. You're not going to make a lot of friends if your first approach to conflict resolution is to get a manager involved. Especially when you admittedly argue from a position of sheer ignorance.", "id": "e51ou5r", "replies": [{"body": "It is my first job. I am asking if this is normal practice or not. \"Yes, it is\" would have been enough, you didn't need to shove my \"incompetency\" to my face. I know that I do not have enough experience in this field *and this is why I am asking in the first place.*", "id": "e51qvrl", "replies": [{"body": "> \"Yes, it is\" would have been enough, \n\nYou might want to work on your reading comprehension. I didn't comment either way - and for good reason.\n\n> you didn't need to shove my \"incompetency\" to my face.  \n\nYou#re obviously still not aware of just how incompetent you are ...\n\n>  I know that I do not have enough experience in this field *and this is why I am asking in the first place.* \n\nAnd I am telling you that you are asking the wrong question, and that you're asking it the wrong way. I am telling you that whatever answers your question gets - i.e. anything along the lines of \"Yes, it is\" - are not going to do you any good.", "id": "e530x6e", "replies": []}]}]}], "title": "Should data be formatted on frontend or on backend?"}