{"url": "https://www.reddit.com/r/learnprogramming/comments/9b0wqq/help_determining_if_elements_of_1st_string_array/", "text": "Hello.\n\nI have 1 array (creatures), and I want to test if any of its elements are present in the subsequent 2 arrays(animals and insects).  Can anyone suggest some code that would do this?  I would like the output to be\n\nSystem.out.println(\"blah1 is in animals and blah2 is in insects\");\n\n    String creatures[]= {\"blah1\",\"blah2\",\"blah3\"};\n    String animals[]= {\"blah1\",\"blah4\",\"blah6\"};\n    String insects[]= {\"blah2\",\"blah7\",\"blah8\"};\n\n&#x200B;", "score": 1, "comments": [{"body": "What have you tried already?", "id": "e4zhqo2", "replies": [{"body": "Maybe you all can help me with my next step?  Not to turn this into a thread but since you're here...  Now I want to store the results of   \n if(creatures\\[o\\].equals(animals\\[j\\])){  \nand   \nif(creatures\\[o\\].equals(insects\\[k\\])){  \nand \n\nif(creatures\\[o\\].equals(animals\\[k\\])&& creatures\\[o\\].equals(insects\\[j\\])){  \ninto something like 3 new arrays.  I'm having difficulty because I only know how to straight up copy arrays that aren't doing anything.  I don't know how to copy arrays that are having something passed into them.  Also, forgive my ignorance of the jargon.  \n\n&#x200B;\n\nimport java.util.Scanner;\n\n&#x200B;\n\npublic class creatures {\n\n\tpublic static void main (String \\[\\]args){\n\n\t\tString animals\\[\\]= {\"dogs\", \"dog\", \"cats\", \"cat\", \"bears\", \"bear\", \"sheep\", \"test\"};\n\n\t\tString insects\\[\\]= {\"bee\", \"bees\", \"wasp\", \"wasps\", \"ant\", \"ants\", \"gnat\", \"gnats\", \"test\"};\n\n\t\t// THE FOR LOOPS ALL WORK.  I HAVE COMMENTED OUT THE OUTPUT JUST BECAUSE IT IS A TEST.\n\n\tScanner kb = new Scanner([System.in](https://System.in));\n\n\tString prompt = \"Give me a creature:  \";\n\n\tSystem.out.println(prompt);\n\n\tString reply = kb.nextLine();\n\n\t\tString creatures\\[\\] = reply.split(\"\\\\\\\\s+\");\n\n\t\t\n\n\t\tSystem.out.println(\"The creatures from your prompt that are animals are:  \");\n\nfor(int o=0;o<creatures.length; o++){\n\nfor(int j=0;j<animals.length;j++){\n\nif(creatures\\[o\\].equals(animals\\[j\\])){\n\nSystem.out.println(creatures\\[o\\]); \n\n}\t\n\n\t\t\t}\n\n\t\t}\t\n\n\t\tSystem.out.println();\n\n\t\tSystem.out.println(\"The creatures from your prompt that are insects are:  \" );\n\n\t\tfor(int o=0;o<creatures.length; o++){\n\n\n\n\t\t\tfor(int k=0;k<insects.length;k++){\n\nif(creatures\\[o\\].equals(insects\\[k\\])){\n\nSystem.out.println(creatures\\[o\\]);\n\n}\n\n\t\t\t}\t\n\n\t\t}\t\t\n\n\t\tSystem.out.println();\n\n\t\tSystem.out.println(\"The creatures from your prompt that are an insect and an animal are:  \");\n\n\t\tfor(int o=0;o<creatures.length; o++){\n\nfor(int k=0;k<animals.length;k++){\n\nfor(int j=0;j<insects.length;j++){\n\nif(creatures\\[o\\].equals(animals\\[k\\])&& creatures\\[o\\].equals(insects\\[j\\])){\n\nSystem.out.println(creatures\\[o\\]);\n\n}\n\n}\t\n\n\t\t\t}\t\n\n\t\t}\n\n\t\tSystem.out.println();\n\n\t}\n\n}", "id": "e54ahdw", "replies": [{"body": "There's nothing inherently wrong with your logic, but it is pretty inefficient. First of all, ```ArrayList``` is more useful than an array in this case. You can add elements as you go, and there are some helpful methods that you can use. As /u/lurgi mentioned, the ```contains()``` method is exactly what you're looking for, so unless you are specifically attempting to solve this with for loops, I would use ```ArrayList```s and ```contains()```.\n\nSecond, your last loop (where you're checking if a creature is both an animal and insect) is doing a lot more work than it needs to. Besides the fact that you're checking all of animals and insects again (after you've already checked them), you have three *nested* for loops. This means that it's comparing the first creature against the first animal against every insect. If the first creature doesn't match the first animal, do you really need to check against every insect? Think about how many comparisons you will make - if creatures, animals, and insects have 10 elements each, you will make 1000 comparisons. If they have 100 elements each, you're looking at 1000000 comparisons. Instead, you should probably pull out one of those for loops so you check animals and then insects, rather than checking insects for every animal.\n\nSo, look into ```ArrayList```s and the ```contains()``` method, and try to think of how to minimize the number of comparisons you need to make.", "id": "e55itgg", "replies": [{"body": "Thanks!    \nGreat feedback.  I'm going to need to think about efficiency because these are just representative arrays.  My real ones have 6000, 1000, and 500 elements.  As the program becomes more complicated I imagine efficiency is something I'll need to consider.  I'm still new to Java so many of the methods and techniques that have been mentioned I am learning.", "id": "e57h27t", "replies": []}]}]}]}, {"body": "You could convert them to `List<String>` and use the `contains()` method. Or you could just roll your own. Suppose you wanted to see if any of the elements of `creatures` appeared in `animals` by hand. How would you do that? Step by step, what would you do?", "id": "e4zhsqs", "replies": []}, {"body": "If you wanna do a custom method you can do two for loops with condition I<array.length then just compare like array1 [i] is equal to array2 [it]", "id": "e4znz7t", "replies": []}], "title": "Help determining if elements of 1st string array are in the 2nd and 3rd string arrays"}