{"url": "https://www.reddit.com/r/learnprogramming/comments/9aynsn/whats_a_solid_programming_year_project_number/", "text": "I am a college student but I do IT work, run a Windows Server and I am working on a pretty good sized java application and iOS application for the company. I have been curious recently on the workload practice needed to get a software developer/engineer career without a full degree. I know that experience seems to look better than just a degree with not actual project practices.  \n\n\nWhat seems to be a good number or idea on these 3 questions, besides just knowing your algs & data structures and practicing those..  \n\n\n1. Good amount of projects (assuming doing big medium to big projects)  \n\n2. Years of consistent weekly programming/practices\n\n3. Safe number of languages to know (I always stuck to 3 types to really focus on all the time generally)  \n\n\n&#x200B;", "score": 3, "comments": [{"body": "1. All it takes is one really good project to catch someone's eye.\n\n2. Depends on the person. It took me around a year of 4~5 hours of actual studying spread over 8 hours to get my first internship as a self-taught dev.\n\n3. There are a couple of strategies here. I recommend only learning one language while trying to get your first job. You can branch out as your job requires you to.\n\nSome things I've done is looked at local job listings for junior / intern positions I wanted and compiled a list of the common requirements. When it came to languages, I did sort of a tally system and the language that showed up the most was what I picked and learned then I built my resume around the most common requirements.", "id": "e4z4ch8", "replies": []}], "title": "Whats a solid programming year & project number that looks good to employers? (No degree, just experience proof)"}