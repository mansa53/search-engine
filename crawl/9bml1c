{"url": "https://www.reddit.com/r/learnprogramming/comments/9bml1c/mysql_replication_prevent_hackers_from_deleting/", "text": "I have a setup of a master/slave MySQL servers. My concern is that if the master database is hacked and the hackers delete tables or drop databases entirely, all the changes would be propagated to the slave, deleting it there as well.\n\nWithout using delays, what is a good way to prevent a hacker from also destroying my slave database?", "score": 1, "comments": [{"body": "I think taking snapshots of the main database is the best way to go, so you can set the datatbase back to the state of any snapshot taken before. Then you can also cut the slave db.", "id": "e543wpc", "replies": [{"body": "Snapshots are a great idea, the only concern is that they must be stored off-site so in a catastrophe I'd need to wait for the databases to transfer to the main server + the time to import them, which can be quite a while.", "id": "e5441li", "replies": [{"body": "But wouldn\u2018t you need time to fix the vulnerability the hackers gained access with anyway? I dont think time will be your problem in this case, if it isn\u2018t like big data you handle. Of course you would need to store them off-site, but there are a lot of managed services doing the job for you.", "id": "e544wej", "replies": []}]}]}, {"body": "You should limit what your public-facing user can see and do by using stored procedures and views, and no public-facing user should have the ability to permanently delete anything, instead there should be a deleted field, optionally with a timestamp, to mark things as deleted without actually deleting them so that they can be easily restored.  MySQL allows you to fine tune user permissions so that they can only execute stored procedures in a database, so use that to your advantage.", "id": "e54avns", "replies": []}], "title": "MySQL replication, prevent hackers from deleting the main database and the deletions being replicated"}