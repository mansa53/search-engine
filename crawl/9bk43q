{"url": "https://www.reddit.com/r/learnprogramming/comments/9bk43q/new_playground_and_cheatsheet_for_learning_python/", "text": "I'm learning Python and I decided to create a repository where I could put Python script samples with standard Python syntax, structures and statements examples just to be able to quickly recap how to use this or that feature of the language.\n\n[Here is what I've got](https://github.com/trekhleb/learn-python).\n\nThis is a [collection of Python scripts](https://github.com/trekhleb/learn-python) that are split by [topics](https://github.com/trekhleb/learn-python#table-of-contents) and contain \ncode examples with explanations, different use cases and links to further readings.\n\nIt is a **playground** because you may change or add the code to see how it works and [test it out](https://github.com/trekhleb/learn-python#testing-the-code) using assertions. It also allows you to [lint the code](https://github.com/trekhleb/learn-python#linting-the-code) you've wrote and check if it fits to Python code style guide. Altogether it might make your learning process to be more interactive and it might help you to keep code quality pretty high from very beginning.\n\nIt is a **cheatsheet** because you may get back to these code examples once you want to recap the syntax of [standard Python statements and constructions](https://github.com/trekhleb/learn-python#table-of-contents). Also because the code is full of assertions you'll be able to see expected functions/statements output right away without launching them.\n\n## How to Use The Repo\n\nEach Python script in the repository has the following structure:\n\n```python\n\"\"\"Lists  <--- Name of the topic here\n\n# @see: https://www.learnpython.org/en/Lists  <-- Link to further readings goes here\n\nHere might go more detailed explanation of the current topic (i.e. general info about Lists).\n\"\"\"\n\n\ndef test_list_type():\n    \"\"\"Explanation of sub-topic goes here.\n    \n    Each file contains test functions that illustrate sub-topics (i.e. lists type, lists methods).\n    \"\"\"\n    \n    # Here is an example of how to build a list.  <-- Comments here explain the action\n    squares = [1, 4, 9, 16, 25]\n    \n    # Lists can be indexed and sliced. \n    # Indexing returns the item.\n    assert squares[0] == 1  # <-- Assertions here illustrate the result.\n    # Slicing returns a new list.\n    assert squares[-3:] == [9, 16, 25]  # <-- Assertions here illustrate the result.\n```\n\nSo normally you might want to do the following:\n\n- [Find the topic](https://github.com/trekhleb/learn-python#table-of-contents) you're want to learn or recap.\n- Read comments and/or documentation that is linked in each script's docstring (as in example above). \n- Look at code examples and assertions to see usage examples and expected output.\n- Change code or add new assertions to see how things work.\n- [Run tests](https://github.com/trekhleb/learn-python#testing-the-code) and [lint the code](https://github.com/trekhleb/learn-python#linting-the-code) to see if it work and is \nwritten correctly.\n\n## Table of Contents\n\n1. **Getting Started**\n    - [What is Python](https://github.com/trekhleb/learn-python/blob/master/src/getting_started/what_is_python.md)\n    - [Python Syntax](https://github.com/trekhleb/learn-python/blob/master/src/getting_started/python_syntax.md)\n    - [Variables](https://github.com/trekhleb/learn-python/blob/master/src/getting_started/test_variables.py)\n2. **Operators**\n    - [Arithmetic Operators](https://github.com/trekhleb/learn-python/blob/master/src/operators/test_arithmetic.py) (`+`, `-`, `*`, `/`, `//`, `%`, `**`)\n    - [Bitwise Operators](https://github.com/trekhleb/learn-python/blob/master/src/operators/test_bitwise.py) (`&`, `|`, `^`, `>>`, `<<`, `~`)\n    - [Assignment Operators](https://github.com/trekhleb/learn-python/blob/master/src/operators/test_assigment.py) (`=`, `+=`, `-=`, `/=`, `//=` etc.)\n    - [Comparison Operator](https://github.com/trekhleb/learn-python/blob/master/src/operators/test_comparison.py) (`==`, `!=`, `>`, `<`, `>=`, `<=`)\n    - [Logical Operators](https://github.com/trekhleb/learn-python/blob/master/src/operators/test_logical.py) (`and`, `or`, `not`)\n    - [Identity Operators](https://github.com/trekhleb/learn-python/blob/master/src/operators/test_identity.py) (`is`, `is not`)\n    - [Membership Operators](https://github.com/trekhleb/learn-python/blob/master/src/operators/test_membership.py) (`in`, `not in`)\n3. **Data Types**\n    - [Numbers](https://github.com/trekhleb/learn-python/blob/master/src/data_types/test_numbers.py) (including booleans)\n    - [Strings](https://github.com/trekhleb/learn-python/blob/master/src/data_types/test_strings.py) and their methods\n    - [Lists](https://github.com/trekhleb/learn-python/blob/master/src/data_types/test_lists.py) and their methods (including list comprehensions)\n    - [Tuples](https://github.com/trekhleb/learn-python/blob/master/src/data_types/test_tuples.py)\n    - [Sets](https://github.com/trekhleb/learn-python/blob/master/src/data_types/test_sets.py) and their methods\n    - [Dictionaries](https://github.com/trekhleb/learn-python/blob/master/src/data_types/test_dictionaries.py)\n    - [Type Casting](https://github.com/trekhleb/learn-python/blob/master/src/data_types/test_type_casting.py)\n4. **Control Flow**\n    - [The `if` statement](https://github.com/trekhleb/learn-python/blob/master/src/control_flow/test_if.py)\n    - [The `for` statement](https://github.com/trekhleb/learn-python/blob/master/src/control_flow/test_for.py) (and `range()` function)\n    - [The `while` statement](https://github.com/trekhleb/learn-python/blob/master/src/control_flow/test_while.py)\n    - [The `try` statements](https://github.com/trekhleb/learn-python/blob/master/src/control_flow/test_try.py)\n    - [The `break` statement](https://github.com/trekhleb/learn-python/blob/master/src/control_flow/test_break.py)\n    - [The `continue` statement](https://github.com/trekhleb/learn-python/blob/master/src/control_flow/test_break.py)\n5. **Functions**\n    - [Function Definition](https://github.com/trekhleb/learn-python/blob/master/src/functions/test_function_definition.py) (`def` and `return` statements)\n    - [Default Argument Values](https://github.com/trekhleb/learn-python/blob/master/src/functions/test_function_default_arguments.py)\n    - [Keyword Arguments](https://github.com/trekhleb/learn-python/blob/master/src/functions/test_function_keyword_arguments.py)\n    - [Arbitrary Argument Lists](https://github.com/trekhleb/learn-python/blob/master/src/functions/test_function_arbitrary_arguments.py)\n    - [Unpacking Argument Lists](https://github.com/trekhleb/learn-python/blob/master/src/functions/test_function_unpacking_arguments.py) (`*` and `**` statements)\n    - [Lambda Expressions](https://github.com/trekhleb/learn-python/blob/master/src/functions/test_lambda_expressions.py) (`lambda` statement)\n    - [Documentation Strings](https://github.com/trekhleb/learn-python/blob/master/src/functions/test_function_documentation_string.py)\n    - [Function Annotations](https://github.com/trekhleb/learn-python/blob/master/src/functions/test_function_annotations.py)\n6. **Classes**\n    - [Class Definition](https://github.com/trekhleb/learn-python/blob/master/src/classes/test_class_definition.py) (`class` statement)\n    - [Class Objects](https://github.com/trekhleb/learn-python/blob/master/src/classes/test_class_objects.py)\n    - [Instance Objects](https://github.com/trekhleb/learn-python/blob/master/src/classes/test_instance_objects.py)\n    - [Method Objects](https://github.com/trekhleb/learn-python/blob/master/src/classes/test_method_objects.py)\n    - [Class and Instance Variables](https://github.com/trekhleb/learn-python/blob/master/src/classes/test_class_and_instance_variables.py)\n    - [Inheritance](https://github.com/trekhleb/learn-python/blob/master/src/classes/test_inheritance.py)\n    - [Multiple Inheritance](https://github.com/trekhleb/learn-python/blob/master/src/classes/test_multiple_inheritance.py)\n7. **Modules**\n    - [Modules](https://github.com/trekhleb/learn-python/blob/master/src/modules/test_modules.py) (`import` statement)\n    - [Packages](https://github.com/trekhleb/learn-python/blob/master/src/modules/test_packages.py)\n8. **Errors and Exceptions**\n    - [Handling Exceptions](https://github.com/trekhleb/learn-python/blob/master/src/exceptions/test_handle_exceptions.py) (`try` statement)\n    - [Raising Exceptions](https://github.com/trekhleb/learn-python/blob/master/src/exceptions/test_raise_exceptions.py) (`raise` statement) \n9. **Files**\n    - [Reading and Writing](https://github.com/trekhleb/learn-python/blob/master/src/files/test_file_reading.py) (`with` statement)\n    - [Methods of File Objects](https://github.com/trekhleb/learn-python/blob/master/src/files/test_file_methdos.py)\n10. **Additions**\n    - [The `pass` statement](https://github.com/trekhleb/learn-python/blob/master/src/additions/test_pass.py)\n    - [Generators](https://github.com/trekhleb/learn-python/blob/master/src/additions/test_generators.py) (`yield` statement)\n11. **Brief Tour of the Standard Libraries**\n    - [Serialization](https://github.com/trekhleb/learn-python/blob/master/src/standard_libraries/test_json.py) (`json` library)\n    - [File Wildcards](https://github.com/trekhleb/learn-python/blob/master/src/standard_libraries/test_glob.py) (`glob` library)\n    - [String Pattern Matching](https://github.com/trekhleb/learn-python/blob/master/src/standard_libraries/test_re.py) (`re` library)\n    - [Mathematics](https://github.com/trekhleb/learn-python/blob/master/src/standard_libraries/test_math.py) (`math`, `random`, `statistics` libraries)\n    - [Dates and Times](https://github.com/trekhleb/learn-python/blob/master/src/standard_libraries/test_datetime.py) (`datetime` library)\n    - [Data Compression](https://github.com/trekhleb/learn-python/blob/master/src/standard_libraries/test_zlib.py) (`zlib` library)\n\n\n> I hope you find this repository helpful!", "score": 531, "comments": [{"body": "Anything in here for making a GUI or graphics? Trying and failing to teach myself PyGame atm", "id": "e53uek0", "replies": [{"body": "Trying and failing means your doing it correctly. The hardest part is to keep it up. ", "id": "e53y3o7", "replies": []}, {"body": "Not yet. But I plan to add more topics there", "id": "e53wsa9", "replies": []}, {"body": "hey not PyGame but if you want to do some graphics stuff i found this handy playlist for [TkInter](https://www.youtube.com/playlist?list=PLQVvvaa0QuDclKx-QpC9wntnURXVJqLyk) on youtube that i've been using", "id": "e53yv5z", "replies": [{"body": "Hmm-- looked up a written guide for TkInter but never did too too much with it before I went PyGame. I'll give it another look. Thanks!", "id": "e53zbb7", "replies": []}]}]}, {"body": "Seems amazing! Why don\u2019t you compile everything you did so far in an app and make it available for download so you can help beginners and still make some nickels with that?", "id": "e54mtb6", "replies": [{"body": "Interesting idea! Maybe for the future. For now I just want to learn Python first\ud83d\ude42", "id": "e551dgn", "replies": []}]}, {"body": "[deleted]", "id": "e54gea7", "replies": [{"body": "I\u2019m glad that you like it! Regarding website interaction unfortunately I didn\u2019t do anything like that so far, just started to learn Python basics.", "id": "e551aks", "replies": []}]}, {"body": "This may just be me but this is showing up as a self post with no link?  Where can I find the link? \n\n", "id": "e540jel", "replies": [{"body": "Links are in post text. But not a big deal to duplicate it here. Here you go https://github.com/trekhleb/learn-python ", "id": "e5417xz", "replies": [{"body": "It's just not showing up for me in my mobile client but thank you!", "id": "e542add", "replies": []}]}]}, {"body": "You, sir, are fantastic and this is exactly what I've been looking for!", "id": "e549h4t", "replies": [{"body": "I\u2019m glad that you\u2019ve found it useful!", "id": "e54daei", "replies": []}]}, {"body": "Saving this", "id": "e54zub7", "replies": []}, {"body": "Nice post, and god damn nice rep. The links must have been a pain to add.", "id": "e55deuk", "replies": []}, {"body": "Thank you so much. Im just starting out and thinking there might be too much memorization for me to continue on. This is a life saver!", "id": "e55r8f3", "replies": []}, {"body": "Thanks. It seems useful.", "id": "e53wgtg", "replies": []}, {"body": "Thank you so much. ", "id": "e53y1fd", "replies": []}, {"body": "a TL;DR ?", "id": "e53uazm", "replies": []}], "title": "New Playground and Cheatsheet for Learning Python"}