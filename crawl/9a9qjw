{"url": "https://www.reddit.com/r/learnprogramming/comments/9a9qjw/c_i_am_having_trouble_understanding_the_need_for/", "text": "Hello Everyone, I am having trouble understanding the need for scientific notation in C++. \n\nI understand that for every place value \\_\\_\\_ \\_\\_\\_ \\_\\_\\_ \\_\\_\\_ in binary we have the ability to represent more values. \n\nI understand that float has 4 bytes of memory allocation and double has 8 bytes of memory allocation. But when I declare a variable of type float and one of type double like this:\n\n&#x200B;\n\n \n\nfloat x = 3670003.0;\n\ndouble y = 3670003.0;\n\n&#x200B;\n\nthey both give me the same output 3.67e+06 which is the scientific notation. Im confused about this, im assuming this is because the computer cannot output the whole number? but if double is supposed to have larger precision why am I getting scientific notation? Im very confused. ", "score": 1, "comments": [{"body": "This tool that shows binary representation of floats may help: https://www.h-schmidt.net/FloatConverter/IEEE754.html\n\nThe difference between float and double is that there's more bits allocated to the exponent and mantissa for doubles, and consequently the size of the datatype is larger. But they work the same otherwise.\n\nI think you're confusing how the numbers are formatted when printed versus how it's represented in memory.", "id": "e4trppq", "replies": [{"body": ">https://www.h-schmidt.net/FloatConverter/IEEE754.html\n\nOk, I think I understand now. The exponent will represent the number, but the numbers they represent are limited for both double and float. \n\n&#x200B;\n\nFor example, if I want to represent a very large number that can fit in 8 bytes I can, but it will be printed in scientific notation instead of giving me the large number on the console. Float will not even have the ability to give me a very large number in scientific notation that needs more than 8 bytes. \n\n&#x200B;\n\nDid I get that right? ", "id": "e4ts3it", "replies": [{"body": "You're still confusing two unrelated things: *storing* floating point numbers and *printing* them. Both `float` and `double` have a maximum value that they can store, and usually that's about 10^38 for `float` and about 10^308 for `double`. So you can probably store the value `10e40` in a `double`, but not in a `float`.\n\nBy default large numbers are printed in scientific notation for readibility, but this has absolutely nothing to do with the maximum values. You can change the formatting if you want (you must `#include <iomanip>` for these):\n\n    std::cout << std::fixed << x;\n    std::cout << std::scientific << x;", "id": "e4tt2tl", "replies": []}]}, {"body": "I also tested it and got inf for float and googled it and got this:\n\n\"inf indicates that you reached the boundaries of the range that your floating\"\n\n&#x200B;\n\nThank you so much! This makes so much sense now. \n\n&#x200B;\n\n&#x200B;", "id": "e4tsasg", "replies": []}]}, {"body": "There's tonnes of ways to modify the textual output of your program to meet your needs. See the stream modifiers [setprecision](https://en.cppreference.com/w/cpp/io/manip/setprecision) and [fixed vs scientific](https://en.cppreference.com/w/cpp/io/manip/fixed) ", "id": "e4tsylz", "replies": []}, {"body": "> they both give me the same output\n\nYou mean when you print them out with `cout`?", "id": "e4tt01m", "replies": []}, {"body": "You can format output to decimal notation with std::fixed. \n\nThe computer is perfectly capable of outputting decimal for those numbers. It just defaults to scientific notation for large numbers. ", "id": "e4u93uk", "replies": []}], "title": "C++ I am having trouble understanding the need for scientific notation for double and float"}