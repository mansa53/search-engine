{"url": "https://www.reddit.com/r/learnprogramming/comments/9bdczh/scared_to_program/", "text": "Im in grade 11 and have recently learned to program in Javascript, HTML, and CSS and I wanted to become a Computer Scientist. But now, I am trying very hard to retain the information, but some concepts are complex. I often look at answers to programming challenges and later understand(does this mean im dumb). Its hard for me to think theoretically and grasp stuff like data structures and algs. I dont know if i should continue cs or choose something else", "score": 6, "comments": [{"body": "I've been training a youngin at work for the past few weeks. The biggest thing i've noticed is that he's disappointment he's not learning as fast as he thinks he is and that he makes mistakes. Both of these things are fine. The most important thing i've tries to teach him is to not worry about learning things as fast as he can and to not beat himself up over mistakes. Sometimes i'll let him make mistakes just so we can go back and walk through everything he did and get him to figure out what he did wrong.\n\nThat's the way you learn. You don't learn by doing everything right and figuring everything out right away. You learn by making mistakes and figuring out how to correct them and what you did wrong so you don't do them next time.\n\nIt's funny, he doesn't feel like he's been making progress, but in a few weeks we've gone from me supervising and walking him through everything he does to him doing most of the basic things by himself, me double checking at the end and helping him through anything not quite right.\n\nEvery day I try to go into a little more detail about things he's already learned and try and though even just one small new thing in a day for him to learn.\n\nAs far as myself, i've struggled to understand lots of things. Math and geometry was always one of them. I did poorly in math through most of highschool and didn't really understand a lot of what I learned, then one day sometime in college, it clicked and I just got it. It all just made sense and I went from getting a C- in math 12 to getting 101% on math tests and helping my classmates understand the stuff we were working with in college. Now I use math and geometry just about every day at work and I figure shit out and solve problems with things that I never would have understood 10 years ago.\n\nComputer programming was the same. Loops, program flow, even basic types confused the hell outta me. Eventually with enough fucking around I.could get basic things to work but I never really got why. Then one day it just clicked. It all kinda made sense, I was giving the computer instructions that worked over data stored in memory represented by different amounts of bytes. Loops were just a way to make the.computer do many things over and over again in succession,  data structures were just different ways of organizing things in memory and algorithms are just patterns for instructions.\n\nI've had lots of little.moments like this for lots of different things i've struggled to learn. I find they pop up at the weirdest of times while thinking or doing things totally unrelated.\n\nBut, everything takes time. Everything. And, it all takes more time than you think. Everything will take longer to do or learn than you assume and everything is harder and has more detail than you think. Whether it's programming or any of the other millions of things humans do. There's more to everything than what it seems and everyone that's good at things have devoted far more time and effort than you realize into becoming good.\n\nDon't get too disheartened. You're young. Learn the things you enjoy and struggle through them but be open to new things, there's a whole world out there, so many things that exist. The amount of things, activities, job opportunities, skills, hobbies, anything really that I knew about in grade 11 compared to what I know now was nothing and every day I learn something new and there's a whole world of things I know nothing about i'd probably find fascinating. \n\nComputer science is a huge field with tons of different things you could specialize in and learn about until the day you die and keep learning new things. Learn the things that you enjoy and inspire you to keep learning, struggle through the things you want to learn but have trouble getting, be open to learning about things you may have never heard of and just generally enjoy the process of life. It's great you never really know where it'll take you or what'll happen. \n\nOne final piece of advice, if there's one thing i've learned in life. The things you struggle with, the things that are difficult, the things that keep you up at night, the things you try to succeed at over and over again through failure, the things you wish you could do that make you uncomfortable, those are the things most worth doing in life. If something starts to get easy, it means it's time to learn and try and do more.", "id": "e52ix29", "replies": []}, {"body": "One thing I've come to grasp from C.S. is there are geniuses in this field. You can't compare yourself to them. In a lot of cases, as well, a lot of these problems are being devised by people who have been working in the field for years or by academics (PhDs). A lot of the algorithms even as a student you get taught and expected to know within a day at one point was the problem for some leader in the field bashing his head against the wall for years trying to solve. You just learn a bit at a time and slowly add more tools to your toolkit.\n\nYou're in the same boat as most others, mate. It is hard.\n\nIt sounds like you're doing just fine and should definitely not give up. :)", "id": "e525wzc", "replies": [{"body": "The genius effect is real. There are probably only a dozen people globally generating genuinely new code, new algorithms and new techniques. The rest of us just adapt existing stuff to our own needs. \n\nI tend to fall onto the camp of 'that technique is so obvious, now that someone has explained it to me'. But I'd be lost if I had to came up with the technique myself in the first place. ", "id": "e52f7tt", "replies": []}]}, {"body": "(1) No you're not dumb, you're learning. People learn at different rates and in different ways. So don't compare yourself to people who say they picked something up in \"a day or two\" (chances are thats bullshit anyways). \n\n(2) That sort of thinking will come with experience (try finding other resources to learn from, hearing it explained a different way may make it click).", "id": "e52cdbr", "replies": []}, {"body": "It takes practice, and programmers, like all people, fall into a curve.  So half of the professional population is technically below average.  Practice, and if you enjoy programming keep going.  If you don't enjoy it, then do something else.  It's not something you should be sweating in high school.", "id": "e52se27", "replies": [{"body": "That\u2019s the best advice.  Like the Nike commercials used to say - Just do it", "id": "e52sn1n", "replies": []}]}, {"body": "Thanks...but i dont know any mentors to teach me and i dont want to be stuck at the same level forever. I dont know who to approach to help me improve. Im self learning right now and it aint helping", "id": "e5264oc", "replies": [{"body": "I'm pretty good at programming and problem solving. For example, I have solved two of the top 50 hardest problems on project euler. I can tell you everything you need to know about getting better. Here it is.\n\nSolve problems yourself, and don't look up the answers. If you get stuck, just keep thinking until you get it. Don't give up. Build confidence. When I look at the harder project euler problems I have no idea how to even start. I have worked on some problem for days before I got anywhere. But I have confidence that I will eventually get there.\n\nHere is an analogy to make it clearer that this is the only way to get significantly better. Imagine you were trying to learn how to play chess. Today there are chess engines (computer programs that play chess) that can tell you what the best move is in almost any situation. But imagine if you were trying to learn to play chess by just asking the chess engine what the best move was all the time. If it answers like C4 to B3 or something, ok now what? You haven't learned anything. Unless you manage to remember that in this EXACT position, this is the best move. You haven't learned why it is the best move, what other moves are almost as good, what pieces are relevant to this decision, any underlying principles, etc. You have to think and learn for yourself. Hell, even the best chess engine learn by playing. It is not a big table of moves for each situation.\n\nThis is not to say that you shouldn't read books and blogs and communicate with other programmers. That is very important too. But to practice problem solving you must solve problems yourself.\n\nThis goes for understanding stuff as well. The best way is often to just read a book, then try to understand it yourself, not ask other people to explain it to you as soon as you don't understand anything.\n\n\n\n\n", "id": "e52qtxk", "replies": []}]}, {"body": "Relax. There are tons of people that literally didn't know anything before going to college for CS. I'm one of them. Programming is hard, so don't stress yourself out over it now, when it doesn't even mean anything yet. Code things that are fun, yet challenging. If it frustrates you that's okay, but I think it's a little too early on in your CS path to start stressing on CS knowledge. ", "id": "e528yn0", "replies": []}, {"body": "I'm a senior at uni and I knew nothing about programming until grade 12. The biggest and best piece of advice I can give you is to never think of everything as one big whole. When working on something you'll feel overwhelmed and dumb when you think about the whole thing all together. Work on one small thing at a time then slowly integrate them together.\n\n It's a slow task to learn all the theoretical stuff involved in computer science that's why the degree takes years of dedication to complete and even though i'm a senior I'll still Google the most basic things. I've had job interviews that actually said we're allowed to Google things because there's just so much to remember. Just because you don't understand stuff now doesn't mean you won't understand it later. Maybe you're just working way ahead. \n\nAs a beginner I highly suggest you learn how to do simple things with one language then look at different data structures and try to make them yourself in that language. Even with that I wouldn't expect you to fully get it in a couple months because this really is something you should take the time to look into. There aren't short cuts to being ready but eventually you'll notice the dedication to the field pay off\n\nEdit: learn object oriented programming too. A lot of beginner courses focus on this heavily", "id": "e52liuf", "replies": [{"body": "This is good advice, I've had this discussion with my students frequently.  They look at an application assignment and freeze.  \n\n\"I don't know how to do this\".  \n\nSure you do.  \n\n\"No, I don't\".  \n\nYes you do, what's the first step?  \n\n\"Print a prompt\".  \n\nSo how do you print something to the console?\n\n \"Console.WriteLine()\"  \n\nRight, so what's next?  \n\n\"Read in the data\"... etc.\n\n&#x200B;\n\nComputers only do one statement at a time, so until you decompose a problem to individual steps it will look like it can't be done.", "id": "e52sr74", "replies": []}]}, {"body": "Don\u2019t give up. It\u2019s hard in the beginning and then as you practise and do - things click. Keep reading and keep going. It\u2019ll be worth it !  Start off small and do small bits. As your confidence builds - do bigger bits :) don\u2019t \u201ctry and drain the ocean\u201d \ud83d\udc4d", "id": "e535c3q", "replies": []}, {"body": "I feel as if i need to know a lot about this stufg before i get into uni", "id": "e526655", "replies": [{"body": "Barely wrote a line of code before uni. Don\u2019t worry so much. ", "id": "e52qebw", "replies": []}, {"body": "You don't. Plenty of people enter C.S. in uni with no programming experience at all. Anything you have will help.\n\n&#x200B;", "id": "e52d222", "replies": []}]}], "title": "Scared to program"}