{"url": "https://www.reddit.com/r/learnprogramming/comments/9c8sjs/bash_best_method_of_creating_data_structures/", "text": "I've been doing a lot of bash lately, and I'm struggling to find the best way to get around the lack of objects.  For example, instead of having a BackupJob object with 3 associated attributes, I'll use 3 separate arrays and keep up with here I am in the array for each object.  Is there a better way to accomplish this in bash?", "score": 1, "comments": [{"body": "It's hard to understand what you need from the data structure.  Obviously bash doesn't have OOP, but usually you can setup pipelines on streams (aka files) that remove the need for abstractions. Just do the specific operations and read status codes / return values. ", "id": "e590r9a", "replies": [{"body": "In one instance, I'm taking input for up to 8 jobs that will take several hours to execute. I put the details for each job into several arrays.  Is there a way to keep it all together to make this cleaner? ", "id": "e59djfr", "replies": [{"body": "Why do you want to store the output in arrays? Are you really going to go back and forth over the output multiple times? @MasterDharta (how do you mention people in this reddit thing?) suggested that you could immediately run that output through a unix pipe and find the final data that you need. For instance if you need the maximum value you can easily catch it with awk. You can even catch all output implicitly with tools like sort or tail which buffer internally.\n\nIn other words, you haven't told us what you need, only how you think it should be done.", "id": "e59hdyf", "replies": [{"body": "In one example,  I'm capturing user input and then stage a set of related jobs.  Then the jobs run and collect metrics that I compare when they finish several hours later.   I don't want to pipe and  dump/ forget the data. \n\nAssuming I don't want to completely rewrite the ugly monsters I've made in BASH, maybe the best idea is to break out the functions I need in BASH and run them from a job builder in Python?\n", "id": "e59rw9g", "replies": [{"body": "Why do you want to store the data internally then? Write them to files with a unique name in /tmp. That's a time-honoured tradition.", "id": "e59w5a6", "replies": []}]}]}]}]}, {"body": "This is why python is colloquially called Bash++; when you're needing OOP it's probably best to use a language that has built in support for it. Pure Bash is best at setting a bunch of values and calling functions to transform those values using system calls / other scripts.", "id": "e5982af", "replies": [{"body": "Is there another language with objects that also offers seamless integration with system utilities.  I've used Python on some projects, but found it to be clunky when calling and using output of a lot of other external tools.", "id": "e59fj8z", "replies": [{"body": "Try harder. The python popen module is really nice. Calling external programs should be no problem.", "id": "e59hepc", "replies": []}]}]}], "title": "[bash] Best method of creating data structures?"}