{"url": "https://www.reddit.com/r/learnprogramming/comments/9c75jh/feel_like_ive_stalled_would_like_advice_in/", "text": "Hey all.\n\nI'm in a bit of an odd place at the moment, probably not an uncommon one with self learners to be honest.\n\nI feel like I've stalled out a bit, I've not really made any headway lately and I'd like to get back in the swing of things, but I'm not sure where to go.\n\nCurrently I know a bit of Python, a bit less JS, and a little less C.  \nI've tried to focus more on learning broader concepts than languages, but I think now would be a good time to focus on just *one* language and get into more complex territories with it, starting with a deeper understanding of data structures and algorithms.\n\n---\n\nI am admittedly having a hard time picking a language to stick with, to be honest. I feel like as much as I like Python, it's a little too high level, and might be too 'magical' where I'd like to be able to see a bit more clearly what's happening, and why... And funnily enough, C has the opposite issue, where it seems to not be very practical to create projects with, for being too verbose? \n\nI'm sort of drawn to C++ as it seems like it's closer to C while still being somewhat high level and apparently very versatile, but I don't know if that wouldn't be a mistake. \n\nI suppose there's also C# and Java, but I have to say I feel a little put off those, though I don't really know why.  \nI've toyed with C# a little bit (nowhere near enough to claim any real understanding of the language) but I wasn't really a fan. I think I was probably a little overwhelmed though.\n\nThere's also the \"new and shiny\" options like Rust or *particularly* Go (seems simple and reasonably powerful - a bit like C, but perhaps more \"practical\"?), but with both being pretty niche, I assume it's not a good idea to go with those?\n\n---\n\nIn any case once I've made that choice I'll continue on to delve into Data Structures and Algorithms, then I'm currently planning to work through some of the topics listed [here](https://teachyourselfcs.com/), or alternatively turn my attention to learning web development (as a means to create something 'real'). Is that a good (if vague) plan?\n\nTl;dr: I think I ought to stick with one language to learn more advanced concepts, but I'm not sure which!\n\nTo be honest, I had hoped typing this out would result in me answering my own questions, but that hasn't happened... and so I'm posting it. Any thoughts?\n\n^([I hope this question is within the rules. I have read the FAQ, and this is not my first language, nor am I looking for some sort of definitive 'best' option, I feel like the question's a little more specific and so is valid? I might be wrong though.])", "score": 0, "comments": [{"body": "I felt the same when starting out. \nHad a lot of time to learn. \nIf you have time, sure. \nIf not, master one language. \nYou\u2019ll wished you knew the more advanced concepts of said language when employed. ", "id": "e5975c9", "replies": []}, {"body": "Worry less about which language, and concentrate on writing some useful software. There is no \"magic\" point where you \"know\" a language - you have to use it and keep using it.", "id": "e58j9z0", "replies": [{"body": "I mean yeah I absolutely agree.\n\nWhen I say 'magic', I just mean that the language does things to make developing more frictionless, but this can be a little 'opaque' where I'd like to understand more what the language is doing for me.\n\nI feel that would help me develop a better understanding of programming in general?\n\nI guess I might start looking into C++ if nothing further changes my mind here. I seem to have some sort of gravitation towards it, can always change my mind later I suppose.", "id": "e58jxs6", "replies": [{"body": "If you become a professional programmer, you will wind up using many languages. The last time I counted, I've been paid for programming in about 30.", "id": "e58qjbh", "replies": [{"body": "30!? Wow.\n\nI know most all professional programmers will work with multiple languages, but I was under the impression that when learning it's better to focus on one for a while before switching, and at that point you know transferable concepts that make switching that much easier.\n\n", "id": "e599lmw", "replies": []}, {"body": "Wow!  The almighty Language God!  I bow to thee, O Great One, and offer myself as thy humble servant.", "id": "e5cvhyy", "replies": []}]}]}]}, {"body": "Maybe you are better suited for SysAdmin?", "id": "e58idqw", "replies": [{"body": "What makes you say that?\n", "id": "e58iubb", "replies": [{"body": "Same domain - IT. Slightly different type of work. There is programming, then DevOps, Security.\n\nJust a different feel to the whole thing. You script most of your work, then wait around to put out fires.", "id": "e58jd13", "replies": [{"body": "Nah I get that, just wondering what prompted you to recommend that particular role is all.", "id": "e58jm4a", "replies": [{"body": "You seem like you aren't really big into puzzles. Maybe surveying them but not actually grinding through them. ", "id": "e58l1xa", "replies": [{"body": "Ahh I see.\n\nI don't really have a ton of experience to draw on though I'm still inclined to disagree somewhat, but it's honestly not something I've given a ton of thought previously.\n\n Thanks for giving me something to think about!", "id": "e58m9rj", "replies": []}]}]}]}]}]}], "title": "Feel like I've stalled, would like advice in focusing my efforts rather than floating about."}