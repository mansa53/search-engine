{"url": "https://www.reddit.com/r/learnprogramming/comments/9by3nb/should_i_learn_data_structures_or_algorithms/", "text": "I'm a first semester student of CS. In my school I'll take a data structures class in 3rd semester and an algorithms one. I want to learn more by my count, since I want to start preparing myself for internships interviews. \n\nThey've recommended me Algorithm Design Manual, but I don't know if I should learn data structures first.", "score": 1, "comments": [{"body": "Data structures and algorithms are basically two sides of the same thing - for data structures to be useful, they need to be associated with algorithms, and vice versa.  I would be suspicious about a course that tried to separate them.\n\nAnd I just remembered Wirth's famous book https://www.amazon.co.uk/Algorithms-Structures-Prentice-Hall-automatic-computation/dp/0130224189 \n\n", "id": "e56lnm6", "replies": [{"body": "+1 this. It\u2019s usually algorithms AND data structure for a reason. Why? Because if you pick a \u201cbad\u201d data structure for a given problem, even the best possible algorithm can still be relatively bad. Same goes for a bad algorithm applied to the best data structure etc...", "id": "e56mvz7", "replies": []}]}, {"body": "Generally, when a school splits up the two classes, it's not that they're teaching data structures first and algorithms second. (After all, an \"algorithm\" is just a fancy word for \"a series of instructions you give to a computer\". Algorithms are interwoven into nearly every single CS topic you could possible teach).\n\nRather, it's more like the first class teaches you about data structures and algorithms involving data structures and the second class focuses on algorithms that are less data-structure centric/are more advanced.\n\nE.g. maybe in the first class you'll learn how to implement hashmaps, learn about graphs and graph algorithms, etc... And in the second maybe you'll learn about things like dynamic programming, more advanced graph algorithms, etc...\n\nSkiena's book is a popular recommendation, though I can't comment much on it beyond that -- I haven't read it myself. I also like Sedgewick's \"Algorithms\" if you're looking for something that'll cover the baseline fundamentals and Cormen's \"Introduction to Algorithms\" if you want something more comprehensive/textbook-y.  Both books cover both data structures and algorithms, of course.", "id": "e56w3vn", "replies": []}, {"body": "You'll need to know basics of how a data structure works in order to implement it in an algorithm. ", "id": "e56sddx", "replies": []}, {"body": "I learned them separately and I'm fine. I think data structures should be learned first.", "id": "e56lv24", "replies": []}], "title": "Should I learn data structures or algorithms first? Can I do it simultaneously?"}