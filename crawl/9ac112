{"url": "https://www.reddit.com/r/learnprogramming/comments/9ac112/python_grid_search_algorithm/", "text": "This is homework, or more specifically part of the problem of the homework.\n\nI'm required to use python with opencv to search and track the motion of pixels between frames in a video. I'm also new to python.\n\nThe part I need help with is how should the algorithm to search outwardly, I'm kinda stumped on that. \n\nHow would I create an algorithm such that when given `n x n : n is odd` grid, that I search for `m 'layers' where m = 0 is a search area of the origin`, would return the subarray in that particular area?\n\ne.g: given `n = 3` and `m=0` it would just return `(-3,-3) to (3,3)`\n\n`n = 3` and `m=1` would \n\nreturn `(-3,-3) to (3,3)` \n\nthen `(-3,-9) to (3,-3)` \n\nthen `(3,-9) to (9,-3)` \n\nthen `(3,-3) to (3,9)`, etc...\n\nWhiteboard demo: https://i.imgur.com/CXc2cW0.jpg\n\nRed is the expected search 'path' and green is just a afterthought on which way the path should lead.\n\nAnd just so I'm not turning this into a X->Y problem:\n\nThe goal is to search the closest available search areas first before proceeding to the out-most layers when given a larger `m` value.\n\nEdit: I'm also not sure about how to deal with the image edge, so theres that too?", "score": 1, "comments": [{"body": "It seems you may have included a screenshot of code in your \npost \"[[Python] Grid search algorithm?](https://www.reddit.com/r/learnprogramming/comments/9ac112/python_grid_search_algorithm/)\".\n\nIf so, note that posting screenshots of code is against \n/r/learnprogramming's rules: please **edit** your post to use one of the \n[approved ways of formatting code](https://www.reddit.com/r/learnprogramming/wiki/index#wiki_formatting_code). \n(Do NOT repost your question! Just edit it.)\n\nIf your image is not actually a screenshot of code, feel free to ignore \nthis message. Automoderator cannot distinguish between code screenshots \nand other images.\n\nPlease, *do not contact the moderators* about this message. Your post is still visible to everyone.\n\n*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/learnprogramming) if you have any questions or concerns.*", "id": "e4uabyv", "replies": []}, {"body": "maybe something in here will help \n\nhttps://www.redblobgames.com/\n\nhttps://www.redblobgames.com/pathfinding/grids/graphs.html", "id": "e4uc4g3", "replies": [{"body": "Okay so this is what I came up with when using nodes per your link.\n\nhttps://i.imgur.com/bcXlZ0F.jpg\n\nSo I define the positions of nodes as any set of coordinates divisible by `n`, and I change the direction whenever the check for visited adjacent nodes gets to 1.\n\nThe only problem is how I terminate the search when I run out of `m` layers? Could I just limit the amount of available nodes? How would I do that in python? What's the correlation between the number of layers and the amount of nodes?\n\nEdit: So the number of possible nodes is `k = ((m * 2) + 1)^2` ", "id": "e4uf21n", "replies": []}]}], "title": "[Python] Grid search algorithm?"}