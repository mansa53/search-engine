{"url": "https://www.reddit.com/r/learnprogramming/comments/9b1ccz/are_making_and_downloading_apps_based_on_html_css/", "text": "I've heard that since apps that are built on top of frameworks that use web development technologies are bundled with some humongous web browser to boot (like how Electron bundles every update/build with a full package of Chromium) to render the app, it can cause performance issues, slow things down and is overall just a bad thing to do? Is this true?\n\n&#x200B;\n\nSpecifically, I am talking about **Electron.** There was this one post detailing all the negative aspects of a framework like Electron, and it mentioned it being bundled with Chromium. I have installed a few applications with Electron and am curious to know how serious of an impact they do have, considering I also would like to develop desktop software sometime in the future, I want to know if it hurts the end-user as well.\n\n&#x200B;\n\n**THANK YOU!**\n\n\u200b", "score": 0, "comments": [{"body": "First, you need to be specific. You're talking about \"hybrid\" apps, I assume, but you should specify what framework you're actually talking about, because even in hybrid apps, there are major differences. What you're talking about is what app frameworks like Ionic do. They don't bundle a \"humongous web browser\", but rather they use something like a WebView to render their UI. Which could potentially have performance implications, depending on what you're doing.\n\nOther hybrid app frameworks like React Native are a bit different. They actually use native controls, and have fewer performance concerns (at least from the UI layer).\n\nRegardless, please specify what you're talking about.", "id": "e4zloen", "replies": [{"body": "Sorry for not being clear. The post in now updated to ask about the nature of Electron specifically. Thank you for the kind reminder", "id": "e4zmltu", "replies": []}]}, {"body": "It really depends on your case.\n\nElectron is great for creating multiplatform apps, since you basically package a web application as a client application. This does mean that the application needs a web browser to run, that is luckily packaged with it.\n\nSince the app is not running on the OS directly but through a web browser. That means that there is a lot more overhead. Because the browser running your app, uses CPU cycles and ram even if your app inside the framework would be empty.\nLooking at this blog article that examines the actual impact comparing visual studio code (electron) and Atom (electron) to sublime and textEdit on macOs.\nhttps://blog.xinhong.me/post/sublime-text-vs-vscode-vs-atom-performance-dec-2016/\n\nLaunch time of an application is significantly faster without electron.\nAnd opening very large files took longer on sublime, but didn't work at all on Atom and VSCode.   \n\n\n[Memory is also significantly higher in electron apps](https://blog.xinhong.me/img/sublime-text-vs-vscode-vs-atom-performance-dec-2016/small/small_04.png). \nBoth Electron apps use more RAM than it's non electron counter part, which for the end user might not matter that much. However when using many electron apps that all use a lot of RAM it can stack up and slow down a user's machine.\n\nHowever if it is more important to be available on multiple platforms, and if high performance is not a concern it is not necessarily bad practice. \n\nHowever writing something such as a 3D game, which can need a lot of resource it would be advisable to use something that can interface with the hardware more directly.", "id": "e4zw3ae", "replies": []}, {"body": "If it's such a bad practice, why am I running 2 Electron apps right now?\n\n&#x200B;\n\nThey are actually heck on my laptop battery, but they're also really convenient. I guess I don't see Electron going away in the short-term, so if using Electron solves your problem pretty well, I'd go ahead. Most end-users have no idea what apps run on and don't really care.", "id": "e5014y5", "replies": []}], "title": "Are making (and Downloading) apps based on HTML, CSS, and JS frameworks a bad practice?"}