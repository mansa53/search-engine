{"url": "https://www.reddit.com/r/learnprogramming/comments/9a7oe6/programming_languagegame_engine_suggestion_for/", "text": "Hi, the most fun I had for years in a game was [freefarmgame.com](https://freefarmgame.com), a simple but deep farm management game. I stopped playing years ago because the game requires the player to connect every day as it is turned based (one turn in one day). I always wanted in the back of my mind to create my own version for local play at my rhythm.[ screenshot of what the game might look](https://i.imgur.com/d0MsuaX.jpg) There are various menus and you can click and interact with each tile (crop/buildings).\n\n&#x200B;\n\nLooking at the FAQ it seems like UNITY would be my best bet but does it :\n\n\\- allow me to make a very computer resource friendly game (does not require a gaming computer)\n\n\\- allow me to code some behaviors/randomization/AI with databases in the background\n\n\\- eventually allow me to add multiplayer interactions\n\n&#x200B;\n\nI already have some knowledge of Java OOP. I know I could technically do all of that in Java (like they did with minecraft) but I could end up trying all my life and never finishing anything.\n\n&#x200B;\n\nThanks for any tips.", "score": 2, "comments": [{"body": "I am assuming that you can work with C++ since you mentioned Unity. For output I would suggest SDL. It's used heavily for 2D games. For the rest of your needs there a lot of options you can choose from. ", "id": "e4tc14j", "replies": [{"body": "Did you mean C#? That's the common language used in Unity games afaik?", "id": "e4tehem", "replies": []}, {"body": "I can learn C++ if it is the best tool for what I want to do.  Since I am new to most of this I just want to have an idea what road to take for now. ", "id": "e4tddaw", "replies": [{"body": "Define \"best\", C/C++ is surely the best you can do in terms of performance, portability, and future expand-ability. I'd use SDL to start and use the built in 2d renderer, upgrading to OpenGL or something when you need to.\n\nUnity is an option, but it's not very well optimized for low-end machines at all.", "id": "e4tme07", "replies": [{"body": "Best for me is mostly what will be the most straight forward for a simple game that does not require physics or even any movement at all. It is just really a board game with some scripts running database and logic. I am watching unity tutorials and I notice it would probably work but seems overkill? I can just do it in Java for now but I fear like I will spend 99% of my time figuring out stuff like how do I make a user interface and how do I make this tile clickable and so on.", "id": "e4tq5ml", "replies": [{"body": "I wouldn't really say Unity's \"overkill\" as in overly complex, it's built for general game development. But it's overkill in that you'll need quite a powerful machine to cope with all the included extras, even if you're not using them. And there's a lot of learning required.\n\nJava's probably fine, use what you know. Learn how to add bitmaps to the screen, then how to get the mouse coordinates, and do the rest manually in an update loop, use math to figure out if the mouse is on a tile and such. You don't need a bunch of inherited classes and such for an interface, just images.\n\nThe danger with Java is that most of its libraries have an ultra heavy OOP style to them that will necessitate a lot of tinkering/learning about libraries you don't really care about. But as long as you go in with the mindset of keeping it as simple as possible, it should be fine.", "id": "e4tqsrl", "replies": [{"body": "Thanks, I will look into that. Most of my work will be the game concepts and logic but my biggest concern is for a very small part of it ( interface and input, mouse and keyboard interaction). If I do it all in Java, would you say it would be possible to use Unity later if I want to make fancy 3D looking graphics?", "id": "e4tz3bz", "replies": [{"body": "Possible to move to Unity later using Java? No, but there's no reason that you wouldn't be able to do 3d stuff in Java. You just use need access to OpenGL, you can learn it in Java eventually when you need to. Once Java gets too slow you can eventually move to C, the shades and gl pipeline will be very easy to port. ", "id": "e4u0df9", "replies": []}]}]}]}]}]}]}, {"body": "It seems you may have included a screenshot of code in your \npost \"[Programming language/game engine suggestion for simple 2D turn based management game.](https://www.reddit.com/r/learnprogramming/comments/9a7oe6/programming_languagegame_engine_suggestion_for/)\".\n\nIf so, note that posting screenshots of code is against \n/r/learnprogramming's rules: please **edit** your post to use one of the \n[approved ways of formatting code](https://www.reddit.com/r/learnprogramming/wiki/index#wiki_formatting_code). \n(Do NOT repost your question! Just edit it.)\n\nIf your image is not actually a screenshot of code, feel free to ignore \nthis message. Automoderator cannot distinguish between code screenshots \nand other images.\n\nPlease, *do not contact the moderators* about this message. Your post is still visible to everyone.\n\n*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/learnprogramming) if you have any questions or concerns.*", "id": "e4tb8zo", "replies": []}], "title": "Programming language/game engine suggestion for simple 2D turn based management game."}