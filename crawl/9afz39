{"url": "https://www.reddit.com/r/learnprogramming/comments/9afz39/c_trying_to_figure_out_continuous_integration/", "text": "I'm a pretty decent programmer, but I know very little about automated deployment and testing. I wanted to learn some of this stuff myself by integrating some kind of CI system in one of my personal projects. The trouble is, I don't know what the best solution to my particular problem is. \n\n* My project is a C# executable that is built on Windows but also deploys to Linux and Mac via Mono.\n* My project cannot build on Linux or Mac on its own. It depends on Visual Studio scripts to build it and deploy it for those platforms.\n* Currently, I build this project on windows and then manually copy the executables over to a Linux or Mac box to test it. This is a very laborious process.\n* I try to include binaries of the dependencies next to the executable (dylibs for Mac, .so for Linux), and a bash script on the other end sets up the required changes to \\`LD\\_LIBRARY\\_PATH\\` to make sure my executable can find them. \n* How do I write the software that, every time I build my application, it gets deployed to a remote Linux and Mac machine and runs automated tests on it? What's the best CI platform for this kind of application?\n\nI can imagine some kind of custom system I could set up on my local network. Maybe I could hook up the Linux and Mac machines with known local IP addresses, then write a script that copies the binaries over and then executes them via ssh... but there's got to be a better way.", "score": 3, "comments": [{"body": "TFS. Team Foundation Server/Services is what you're going to want. You can do all of what you just said, automated. So you make a change to your code, it's then automatically built and deployed to your Linux, Mac boxes.\n\nLink: https://visualstudio.microsoft.com/tfs/\n\nIf you need help, PM me. I'm a DevOps engineer who primarily uses TFS at work. ", "id": "e4v4gxn", "replies": [{"body": "Ah cool idea, I can do it all within VS. I will check it out.", "id": "e4v7wze", "replies": [{"body": "If you're willing to embrace Microsoft, they'll provide. Personally not a fan but it's the quintessential AIO solution.", "id": "e4v9z8m", "replies": []}]}]}, {"body": "Bitbucket repositories has a 'pipelines' feature which can deploy your app somewhere.\n\nFor testing you can launch some tests on circleCI / Jenkins / Travis these are the major ones AFAIK.", "id": "e4v6hgx", "replies": [{"body": "Jenkins is still around?!", "id": "e52vxb0", "replies": [{"body": "alive but really used dunno", "id": "e53yz4a", "replies": []}]}]}], "title": "[C#] Trying to figure out Continuous Integration"}