{"url": "https://www.reddit.com/r/learnprogramming/comments/9capch/counting_the_number_of_characters_in_a_line/", "text": "Hey Folks,\n\nI'm new around these parts. Maybe it's because it's 3 in the morning or because it's been a year and a half since I've done *any* work in Java but I'm struggling harder than I normally do. \n\nBasically I am trying to write a program that will read text from a file, print the words therein, and afterwards count the number of characters in that word, finally, it would count the number of words processed at the end.\n\nI have the start, with the pulling from a file, and I have the end where it tells me how many lines were processed (Or so I believe)\n\nbut it's the middle. where I'm struggling. Code is below. I appreciate any help\n\n\n    import java.io.File;\n    import java.io.FileNotFoundException;\n    import java.util.Scanner;\n\n    public class CountWords {\n    public static void main(String[] args){\n        int count;\n        count = processFile(\"words.txt\");\n\n        System.out.printf(\"\\n%d number of lines were processed\\n\", count);\n        System.out.println(\"Done!\");\n    }\n\n    public static int processFile(String fileName){\n        int n = 0;\n        int chars = 0;\n        try {\n            Scanner input = new Scanner(new File(fileName));\n            while(input.hasNextLine()){\n\n        chars++;\n            }\n            input.close();\n        } catch (FileNotFoundException e) {\n            System.err.println(\"Ouch.  Something went wrong!!\");\n            System.err.println(e.getMessage());\n            System.exit(1);\n\n        }\n\n        return n;\n    }\n    }\n\n\n", "score": 1, "comments": [{"body": "If you don't care about whitespace characters, you can check if `input.hasNext()` and use `input.next()`, storing the result as a string, at which point you can print the string, get the length of the string, and increment the count for the number of words that have been read.", "id": "e59cfu9", "replies": [{"body": "So.. something like \n\nInput.next()\n\nWhile string.length > 0 \n\nChar++?\n\nSorry if I seem really lost. Up until now all my programs have been math based, all we worked with was numbers. It's the first time I'm working with words.", "id": "e59qrte", "replies": [{"body": "By default, Scanner breaks up its input by whitespace. Since words are separated by whitespace, using `input.next()` returns the next word that the scanner can read as a String. You'll want to store the word in a String variable (`String word = input.next();`).\n\n>Basically I am trying to write a program that will read text from a file, print the words therein, and afterwards count the number of characters in that word, finally, it would count the number of words processed at the end.\n\nSince the variable `word` is a String, you can print `word` and `word.length()`, as well as increment a running count of the number of words that have been processed. Once the scanner has run out of input to read, you can print the number of words that were in the file.\n\n\nOne thing I think you should do is look at the Java Documentation. For example, if you want to understand what you can do with a String or a Scanner, you can look at each of their pages in the documentation and read their `Method Summary`: \n\nhttps://docs.oracle.com/javase/7/docs/api/java/lang/String.html\n\nhttps://docs.oracle.com/javase/7/docs/api/java/util/Scanner.html\n\n\n\n\n", "id": "e5a99d7", "replies": [{"body": "So like. In the processFile method.\n\nString word = input.next();\n\nSystem.out.println(word + word.length)\n\n? Or am I missing entirely. I'm at work so I cant plug and play like I want to.\n\nIn pseudo code it makes sense to me. The main method prints how many lines of words were processed. The method below it counts the characters\n\nThe pseudo code I'm thinking is\n\nWhile word length > 0\nPrint word + count characters \n\nBut I dont even know if I'm going the right direction about it. I do know I need to change input.hasnextline to input.next();", "id": "e5aa0vp", "replies": [{"body": "This is some pseudocode that may help:\n\n    while input.hasNextLine()\n        assign input.nextLine() to a string variable named \"line\"\n        create another scanner named \"lineScanner\" that reads from the \"line\" string\n        read each word from the lineScanner (print word and word length, and increment totalWordCount), until lineScanner.hasNext() is false\n        close lineScanner\n        increment totalLinesRead", "id": "e5abxis", "replies": [{"body": "I think that left me more confused lol. I have got such a mental block for this. I forgot about programming headaches when I don't get it lol. Wish the teacher had pointed us to a chapter we could look over to do something SIMILAR.\n\nIt also doesnt help that I dont have the program WITH me. \n\nSorry if I am frustrating you.", "id": "e5ack64", "replies": [{"body": "    while input.hasNextLine()\n        assign input.nextLine() to a string variable named \"line\"\n        create another scanner named \"lineScanner\" that reads from the \"line\" string\n        while lineScanner.hasNext()\n            assign lineScanner.next() to a string variable \"word\"\n            print word and its length\n            increment totalWordCount\n        close lineScanner\n        increment totalLinesRead\n    print totalWorldCount\n\nI rewrote the pseudocode to be slightly more verbose. \n\nYou want your program to read one line from the file at a time, until there are no more lines left to read. `input.hasNextLine()` will be false when there are no more lines in the file left to read.\n\nFor each line that is read, you want your program to print individual words and their respective lengths, until you reach the end of the line.`lineScanner.hasNext()` will be false where there are no more words in the line left to read.", "id": "e5adrw3", "replies": [{"body": "I attempted something in a second response to you. Let me know if I'm heading in the wrong direction", "id": "e5ae8by", "replies": []}]}]}, {"body": "I can only use 2 methods. One to count the total number of lines. (Main)\nAnd one to do the reading of the line and count it.\n\nSo are you saying something like..\n\nPublic static int processFile (String fileName) {\n\nInt n=0;\nWord =0;\n\n\nTry{\nScanner input = new Scanner(new(fileName));\nWhile (input.hasNextLine()){\n\nString word = input.Nextline();\nSystem.out.println(word+word.length);\n\nWord++;\n\n\n? Or am I totally lost? \n\nSorry again if I am frustrating you.\n\n\n", "id": "e5ae219", "replies": [{"body": "No need to apologize. \n\nLets say you have a text file named \"words.txt\" that contains these lines:\n\n    testing this program\n    abc defg\n\nNow lets run the following code:\n\n    Scanner input = new Scanner(new File(\"words.txt\"));\n    int lineCount = 0;\n    while (input.hasNextLine()) {\n        String line = input.nextLine();\n        System.out.println(\"Line: \" + line);\n        lineCount++;\n    }\n    System.out.println(\"Line count: \" + lineCount);\n\n\nThe output is:    \n\n    Line: testing this program\n    Line: abc defg\n    Line count: 2\n\nAs you can see, using `input.nextLine()` gives you an entire line of words. That is why in my pseudocode, I created another scanner (`Scanner lineScanner = new Scanner(line);`) so that you can process each word from the latest line that was read. \n\nOnce you have a chance to test things out for yourself, eventually things will \"click\". The pseudocode I wrote isn't the only way to go about the problem, so don't worry if you think of a different approach. Go for whatever approach seems logical to you and if your program's output is wrong, try to determine why it ran the way it did.", "id": "e5ag1do", "replies": [{"body": "Well that was super helpful since it taught me how the fuck to get it to read the words. I had thought since int meant integer it was reserved for only numbers. Not text as well.\n\n\n Thank you for the help so far but honestly that example was fucking super helpful for the first half of making it READ the word. Now it's the counting of characters I gotta nail.\n\nThe whole whatever approach I want is a little difficult for me cause I dont know what all Java can do. I know it's this like. All powerful language but how to make it do the things it can do is what i dont know lol. But now. Thanks to you. I know how to make it read words from a file! \n\n\nWould I use the same idea to get the number of characters? Using your example\n\nLike \n\nBy setting \n\nInt letterCount = 0\nWhile input.hasNextLine \nString line = string.length \nSystem.out.println(line)\n? \n\nOr am I missing something?", "id": "e5ai1fp", "replies": [{"body": "An `int` is indeed an integer, so it does only store numbers. In my example, I declared `int lineCount` as a variable that keeps track of the number of lines that have been read.\n\nJust to illustrate how to get the length of a string, let's have `String word = \"test\";`. If you wanted to store the length of `word` in a variable, you would write `int wordLen = word.length();`. Printing `wordLen` would output the number `4`.\n\nThe best way to see if you're on the right track or missing anything is to try running your code.", "id": "e5ajjpe", "replies": [{"body": "I'll have to plug your example code that prints the words and counts them into my code and then try the word.length and see what that does. I'm almost there though and that has me less frazzled and a bit excited.\n\nI have an appointment with the actual teacher for a screenshare session and I might actually solve it before then. This gives me hope! \n\nThank you. I'll message you if I run into more trouble. \n\nEdit: I'm almost there right? Lol", "id": "e5ajy75", "replies": []}]}]}]}]}]}]}]}]}]}, {"body": "Firstly the \"Ouch. Something went wrong\" can be changed to \"cannot find file: \" + fileName, since it is a file not found exception.\n\nWhen you do input.hasNextLine() you just look forward to see if there is a next line ready. input.nextLine() will actually retrieve it. [like this bit of example code shows](https://www.tutorialspoint.com/java/util/scanner_hasnextline.htm)\n\nif you want to count characters in a line I would suggest making a method \"int countChars(String line)\" and feed it each line.  That way your while loop focusses on getting a line from file, calling the method and handling the response (but nothing more). And your countChars can worry about the rest of the code/other loops you may need to run.\n\nNot sure what you are a specifically asking so just giving you some general pointers.", "id": "e59ka14", "replies": [{"body": "The ouch something went wrong was just for fun. It does actually tell me the error if it doesnt find the file.\n\nI'm not manually feeding the character in though. It's on a separate text file that has words on each line, like red, green, blue, etc.\n\nI haven't worked with words before in Java mostly using math until now so I'm really lost with how you make Java read words lol.\n\nI wanted to use the processFile method I have to be the part that does the counting. \n\nThe program is really basic in idea. The main method prints the total number of lines processed while the second method prints the word and the number of characters it has after it. Like red (3) green (5) etc.", "id": "e59qldg", "replies": [{"body": "about the first part: I'm just trying to direct you towards writing clear error messages. They don't have to be long but ouch, ouch2, ouch3 or other silly messages can be a hard habit to break. And if you write a larger program you'll kick yourself for not actually being clear (to yourself). But that was indeed just an aside.\n\nI understand you're reading the file. When you ask the scanner \"do you have more lines for me\" you get yes/no back but you don't actually process the line. in your code I am missing the \"now get the actual line from the scanner\" which is what my second point was suggesting.\n\nFrom a design perspective, processFile should do one thing: process the file. it does this by doing an operation per line of the file. (in your case count chars in a word and print result to screen)\nI would leave processFile to just looping and processing each line in \"processLIne\" ... which would take a single line and then split it into words. then calling processWord to do the actual output. (keep in mind how you deal with whitespace characters)\nYou can do it all in one giant method but it is easier to debug to call methods for smaller and smaller jobs, with encompassing methods that orchestrate the whole affair. but that is just a readability and debugging issue.\n\nstart with getting the line into a string. It will depend on how you handle non-word characters whcih approach is better. will this:\n\n    red, green and blue\n\nbecome:\n\n    red(3) green(5) and(3) blue(4) // ignore any non-alphabet char\n    // or\n    red,(4) green(5) and(3) blue(4) // split on any non-space\n    \nYou can do a lot with regex and string tokenizers but I think the exercise you are doing is meant for you to simply loop over all characters in a line and do something like:\n\n    // pseudocode, deliberately not spelling things out for you sorry ;)\n    int pos = 0;\n    while (pos < line.length) {\n        if (line.getSomeCharacterAtPosition(pos) is a letter) {\n            // count char towards current word\n        } else {\n            // start new word\n        }\n    }\n\nlook up string charAt which lets you retrieve a character from string. you can test with something like [Character.isLetter](https://docs.oracle.com/javase/10/docs/api/java/lang/Character.html#isLetter(char))\n\n", "id": "e5a2rqj", "replies": [{"body": "The idea of running many smaller methods to complete a larger program makes sense to ME since that would mean if any one part broke you could see when it breaks. Or try multiple try catches. Issue with breaking it down to many small methods is he added the caveat that theres only 2 methods allowed. One to print the total lines processed (main) I got that one (I think. It worked when I did it with numbers)\n\nAnd the other method (my processFile) is supposed to do the count of the letters.\n\nThe oops part was the instructor since he wanted to show us the try catch. It's something I'm not familiar with and to be honest I'm not positive how it works. I'm guessing it tries the method and if it doesnt work catches the error code and spits it out how you tell it to?\n\nSpaces and characters other than letters do not in fact matter. He just wants red(3) green(5) \n\nDoes that change which direction I'm trying to go?\n\n Sorry if I seem super dumb. Like I said I have no idea where to start poking this bear and the concept seems so simple that I'm kinda pissed I cant figure it out.", "id": "e5a3po3", "replies": []}]}]}]}], "title": "Counting The Number Of Characters In A Line"}