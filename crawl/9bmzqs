{"url": "https://www.reddit.com/r/learnprogramming/comments/9bmzqs/go_regexp_error/", "text": "I get this error `error parsing regexp: invalid escape sequence: `\\x[0`` when trying to complie the following regexp \n\n`r, ok := regexp.Compile(\"(\\\\x[0-9][0-9].*)+\")`\n\nI want to find strings with this patter using the following regexp `x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x80J\\x13\\x80SQ`", "score": 1, "comments": [{"body": "In [golang/re2](https://github.com/google/re2/wiki/Syntax) regexp syntax, `\\x` needs to be followed by a brace-enclosed hexadecimal number that is the value of a codepoint to match. If you want to match a literal \"\\\\x\", you need to escape the backslash twice - one for escaping them in the string and once for in the re - so `\"(\\\\\\\\x[0-9]...\"` It looks like go supports raw strings using backticks instead of quotes so you can get rid of one layer of escapes to make it easier to read:\n\n     `(\\\\x[0-9]...`", "id": "e5491ya", "replies": []}, {"body": "To match one `\\` character, the regular expression is `\\\\`. i.e. two blackslashes. However, for a string value, to generate one backslash, two is required. So, you'll need four backslashes instead of just two.", "id": "e54ahht", "replies": []}], "title": "Go regexp error"}