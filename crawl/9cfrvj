{"url": "https://www.reddit.com/r/learnprogramming/comments/9cfrvj/is_it_okay_to_look_at_answers_when_youre/", "text": "I've been taking a course online and self-studying but many times I am not sure where to start and proceed on a problem. Because of this, I often look up the solution and work through how it works myself. Is this okay for learning concepts/problem solving because many times I spend wayyy too much on problems. Thanks", "score": 8, "comments": [{"body": "I think it's okay to Google the answer if you're really stuck. \n\nBut once you do, try to understand it, break it apart and see if you can make your old code work based on what you found, instead of just putting the answer in it's place. \n\nWrite it down in a note app too in plain English so you know you really understand it. And if you don't, learn that part too. ", "id": "e5ahqf0", "replies": [{"body": "My favourite, and most helpful, course at university was an algorithm design course that required all homework answers to be submitted in plain english. It got a little annoying with some of the dynamic programming algos, but in general it forced people to really understand the content. And even if you copied off of someone else, you had to rewrite it and would have to at least sort of understand it in doing so.\n\nAlso my prof would create his own problems so at best you would be able to google the type of problem to get a partial solution. I spent so many hours on that course but ended up learning so much.", "id": "e5b4zvl", "replies": []}]}, {"body": "Try googling a part of the problem rather than the problem itself -- so if the problem is to reverse a string, Google how to break the string into individual letters or how to loop through a string in your programming language.\n\nYou can also try pseudocode to write down in words what your code should be doing. It also may be helpful to try solving the problem yourself on paper, taking notes of what you did to solve the problem, then translate that into code.\n\nGoogling the whole answer usually won't help in the end since the root of programming is problem solving.", "id": "e5ah3bz", "replies": [{"body": "I would even recommend posting the exact piece that you're hung up on here, where people can help with your specific problem, as opposed to solving the whole thing for you. ", "id": "e5b54ig", "replies": []}, {"body": "Beware though that can lead to this: [https://en.wikipedia.org/wiki/XY\\_problem](https://en.wikipedia.org/wiki/XY_problem)\n\n&#x200B;", "id": "e5b7mwi", "replies": []}]}, {"body": "I would say if you're really stuck - like, days stuck - then go for it.  However, you should otherwise just take a break, pen-paper it out, rubber duck it out, whatever works, and come back to the coding aspect later. \n\nWhat is perfectly fine would be to try identify the SPECIFIC problem you're having - so not the entire solution.  Narrow down the problem, and yes, it's perfectly fine to google the solution to that.  That's just normal debugging.  That's good to practice.\n\nWhat isn't a good idea is to give up early and just google entire solutions to all your problems.  Unless you go back and attempt the solution again by yourself with no help, you aren't learning from just reading answers (unless you're one of those people who can actually do that).\n\nSeeing as you're saying you get stuck at the first step, what I would say is to not think about coding it when you start.  Grab a whiteboard or pen and paper, and try to do it with no aspect of code.  A lot of people often end up getting screwed by problems that need more thinking than coding because they get too hung up on the coding aspect.\n\nTL;DR:  Don't google entire solutions unless you're either going to redo the entire thing from scratch with no help, or are stuck for literally days.  Do google specific issues you are having, such as specific errors, and do practice debugging techniques.  If you're stuck on a problem, step away from the computer and go back to pen and paper.", "id": "e5ak207", "replies": []}, {"body": "Programming is a constant battle between trying to solve a problem yourself until you're bluebin the face, and looking for pre-existing solutions.\n\nIf you've sat there for a couple days unable to find a solution, you're potentially just wasting your time. At some point, it's beneficial to see how people before you have solved it or a similar problem.\n\nNote though that programming is *mostly* an exercise in problem solving. To program, you need to be able to be given a problem, and break it down and reason about it until you find a solution. At some point, looking up pre-existing answers becomes beneficial, but don't let yourself become reliant on existing solutions. You need to be able to solve novel problems, and a basic understanding of problem solving and programming will help. ", "id": "e5aukag", "replies": []}, {"body": "I am on the fence about my personal philosophy towards this problem, in general.  On the one hand, struggling through and figuring it out can be a very rewarding educational experience.  But on the other hand, it seems like the most important thing to learning something like programming is to keep making progress, and the more rapid a pace you can keep up the better.  Sometimes it feels like I'm going too fast to learn, but if I just keep going and look back, a lot of the problems I did not understand suddenly seem easy.\n\n&#x200B;\n\nI would say the best strategy is to know when you're going to spend too much time and get help immediately and move on.  Plan some regular review time every week, and keep a list of the problems you want to try again as you advance down the path.  You still might not get it right away next time you try it.  But after 2 or 3 times you will know the solution to the problem and to problems like it.", "id": "e5b8sd5", "replies": []}, {"body": "I would rather not.. It only leads down the treacherous road.. how do you define completely stuck? If you do it once, you are just likely to do it over and over as soon as you get stuck. \n\nMy feeling is that (mostly) learning in programming happens by banging your head against the wall over and over :)", "id": "e5adcfk", "replies": [{"body": "Completely stuck as in spending an hour on a problem and not proceeding whatsoever, probably requiring a perspective shift or mindset on tackling the problem. I'd rather not look up how to do it but sometimes I feel I am just wasting my time spending too much on one thing.", "id": "e5adws7", "replies": [{"body": "When you get stuck like that, walk away from the problem for a while - a few minutes, an hour, a day, whatever it takes. Take a shower or a walk. Think about other stuff. That's how you reset your brain so that you can take a different approach to solving the problem.", "id": "e5aeb2p", "replies": []}, {"body": "An hour is honestly nothing, some problems can sometimes take days to click.  Take a break, maybe rubber duck it out, and come back to it.", "id": "e5af8v3", "replies": []}, {"body": "I hate to say it, but an hour is nothing. I've spent *days* on a single problem. The key is to constantly shift your perspective and *lose focus* until a solution becomes apparent. Go for a walk. Feed your pet. Do something irrelevant. Give yourself room to think. Sometimes the best thinking is done in the background when we're not paying attention. ", "id": "e5autos", "replies": []}]}]}], "title": "Is it okay to look at answers when you're completely stuck?"}