{"url": "https://www.reddit.com/r/learnprogramming/comments/9amgoh/homework_search_function_on_array_of_string/", "text": "Hi there,\n\nIts been awhile since I been back to school and I'm trying to finish this last class up. There is already an assignment to program a search function with an array.\n\n\"Write a function that uses the pointer representation of an array and pointer arithmetic to search an array of type string for a particular string. The function returns -1 when the search string is not contained in the array and the index number of the first match when found. \n\nYou must use this function prototype: int searchArray(string\\* const bunch\\_of\\_strings, const int number\\_of\\_strings, const string string\\_to\\_find); \n\n// first parameter const means \"don't change any of the elements accessed through the // pointer\u201d. \n\n&#x200B;\n\nThen write a main() that initializes an array and uses searchArray() to try to find a string among the elements of the array. Be sure that your function works when the array does not contain the value, when it contains the value as the first or middle or last element, and when it contains multiple instances of the same value.\"\n\n&#x200B;\n\nI just need some pointers on where I should start. It is a little daunting after coming back to school after a few years hiatus. Any reference articles will help me refresh for this class.\n\n&#x200B;\n\nThank you.", "score": 1, "comments": [{"body": "> Write a function that uses the pointer representation of an array\n\nConsider that the array\n\n    string str_array[]\n\ncan decay to\n\n    string *str_array_ptr = str_array;\n\nand contain a reference to the 0th element of `str_array`.\n\n> pointer arithmentic\n\nConsider the pointer `str_array_ptr`, which contains a reference to the 0th element of an array.\n\nIf we do `str_array_ptr++`, this pointer now contains a reference to the 1st element of the array.\n\nSo, your function is going to take an array that decays to a pointer and compare each of the elements of the array to `string_to_find`. If it doesn't find it, it'll return `-1`. Otherwise, it'll return the index of the array.\n\nNote that you don't have to keep track of the index - it's `current_ptr - bunch_of_strings`, where `current_ptr` is the string that you're currently comparing.\n\nAlso, note that you have to dereference the pointer when comparing it to `string_to_find`. Therefore, the `if` statement is going to be\n\n    if(*current_ptr == string_to_find) {\n        ...\n    }", "id": "e4wj213", "replies": [{"body": "Slight correction: the if statement only checks for the equality of the pointers' value and not their contents. Use strcmp function instead.", "id": "e4wkfkw", "replies": [{"body": "I assume that he's using `std::string`, so the operator is overloaded. You have to dereference the pointer, of course.\n\n[Shown here](https://repl.it/@pogtastic/ApprehensiveAntiqueTraining)", "id": "e4wkllv", "replies": [{"body": "Oh, duh. My eyes glazed over the function declaration and I assumed it was a C exercise with char\\*, since pointer arithmetic was expected.", "id": "e4wkog2", "replies": []}]}]}]}], "title": "[Homework] Search function on array of string"}