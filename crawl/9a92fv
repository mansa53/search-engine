{"url": "https://www.reddit.com/r/learnprogramming/comments/9a92fv/cs_student_trying_to_refresh_c_knowledge_and/", "text": "In the first year we had programming1 and 2, C and C++.\n\nNow in my upcoming fifth semester I'll be in a work placement (internship) in a company, working in the automotive industry. while i did technically learn C++ in the second semester, i never really used it for more than the small  weekly mandatory exercises, and haven't really programmed in C++ at all for a year. The only \"real programming\" I did last semester was an Android app, but again, no C++, especially not any larger project.\n\n&#x200B;\n\nIn the job interview they said it's gonna be pretty hard for me, especially in the beginning, steep learning curve, and I should refresh my C++ knowledge beforehand to have a better start. So can you help me with \n\n\\- what to learn\n\n\\- how to learn it (books, websites)\n\n\\- what to focus on (automotive specifics?)\n\n?\n\n&#x200B;\n\n&#x200B;\n\nHelp would be much appreciated.\n\nProgramming is such a huge field, C++ too, that I just don't know where to begin.\n\n&#x200B;\n\nFYI we kind of did learn about all the main features of C++, even some newer C++ 11 ones, but the professor wasn't really good and I can't remember too much about it anymore. Especially, like i said, i may remember some features, but not how to use them / program in C++ in \"the bigger picture\"", "score": 2, "comments": [{"body": "I like to say that C++ can be summed up as 3 main pillars: Low level system access, OOP, and template meta programming.\n\n* Low-level system access: Essentially the same as with C\n* OOP: Interfaces, abstract classes, and multiple inheritance\n   * interface: class with only pure virtual methods\n   * abstract class: mixture of implemented methods and pure virtual methods\n* Template meta programming: Additional compile-time language that was bolted onto C++. While it's something you can spend huge amounts of time studying by itself, it's very powerful even when used in its most simple form.\n\nThese three pillars have been present for a long time, including with all Modern C++ variants (C++11/14/17).\n\nThe biggest problem you might run into on the job is that the modern C++ world has abandoned the old styles afforded by the C++03 standard in favor of C++11 and beyond, but your job might not have made the jump yet. All the latest books and online tutorials teach \"Modern C++\" almost exclusively. This won't be too much of a problem if your employer is using the [Boost libraries](https://www.boost.org/).\n\nIf you want to get into C++ and develop a thorough understanding, pick up a couple of books listed [here](https://stackoverflow.com/questions/388242/the-definitive-c-book-guide-and-list). It's a big language, but there are some really good books out there for it.", "id": "e4trsd4", "replies": []}, {"body": "This is a question better suited for your employer, because they have a much better idea of what you'll be doing. \n\nIn general, the big hang up between java (your android programming) and c++ is memory management and pointers. I would start there. \n\nBut definitely ask what areas you should be refeeshing, without knowing what you'll be doing, nobody here can give you a good answer. ", "id": "e4tnshx", "replies": []}], "title": "CS student trying to refresh C++ knowledge and learn some more"}