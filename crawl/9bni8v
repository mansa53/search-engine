{"url": "https://www.reddit.com/r/learnprogramming/comments/9bni8v/resources_for_putting_createreactapp_on_the_web/", "text": "I'm having a really difficult time finding resources that teach me how to put my react application onto the web. Almost every react tutorial I found finish their tutorials just before they would put their site on the web (because why would they spend money on that. I get it).\n\nMy website is a simple create-react-app that makes use of a flask api that I wrote (by using fetch to connect to it's localhost url). That flask api simply connects to a mysql database and returns json data back to the react app. I assumed that there would be tons of examples online that cover something like this, but almost all of those tutorials I mentioned don't make use of a custom api and therefore (I think) can be considered 'static'.\n\nSo, **question**:\n\nis there a tutorial that follows what I do (custom api attached to database) and follows through with putting their website on a web host (I am open to any webhost)?\n\nI thought I was close to something using aws's ec2 and rds, but just couldn't figure it out, got frustrated, and tried something else. Btw, I'm using windows command prompt environment, but can easily switch to mac's terminal if I need to.\n\n\u200b\n\nThanks. Just got frustrated and am desperate for assistance.\n\nEdit: I should mention that I haven't put all my effort into putting the react app onto the web. Honestly that doesn't sound too bad because of the build function. The thing that I got most frustrated was trying to find a host for my flask api, or try to bring it along with the website build to whatever host. I tried aws ec2, made a windows instance, installed what I needed, but didn't know what kind of url I could have used to connect the react app (which was still local at this point) to the flask api (on the ec2 server instance) since local host port 5000 clearly wouldn't work anymore.", "score": 1, "comments": [{"body": "There\u2019s a bit of confusion here. It seems like what you\u2019re asking is how to deploy a web app? You want it accessible like a webpage open to the public right?", "id": "e54hcxc", "replies": [{"body": "Yes. A web app that is created with the create-react-app framework(?) from facebook. Super cool and nice to use. \n\nThe biggest confusion for me in deploying this app is what to do with the 'things' I have with. 'Things' being an restful-api written in the Flask micro-framework, and a mysql database that the Flask api is talking to.\n\nSince posting I have decided to try something though. I'm abandoning the flask api and mysql database. I'm switching over to Amazon's Api-gateway and Amazon's Dynamodb. I think I can get away with this pretty easy because I don't have a lot of data (and don't plan to) and have fairly simple api functions. \n\nBased on what I read, the process of 'communicating' with the api is pretty straightforward because they give the URL syntax for connecting with the api. Also, the ui for the api-gateway easily let's me connect it to the Dynamodb. So far, this solves my problem with the api.\n\nStill haven't fully tackled the deployment of the web app though. I'm going to give ec2 another try, or attempt to use some other kind of Amazon service in hopes they have a lot of documentation in the deployment.\n\nIf you could describe the general steps for that, that would help me a bunch I think. Right now I think the general steps are:\n\n1: build the react app (npm run build)\n\n2: choose a web host to deploy to\n\n3: follow instructions to move it to server\n\n4: follow instructions to allow server to be connected to by the internet <-- (Where I think I'll get stuck again).\n\nI know about setting the appropriate security groups, but where I started to get confused and fuzzy-brained is when tutorials would use things like phpmyadmin, internet information services (iis), server managers and some other things in order to connect it to the internet.", "id": "e54k6qa", "replies": []}]}, {"body": "Yes create-react-app is a set of scripts that kick start a react app :). It\u2019s a bit irrelevant to the whole problem though!\n\nThe aws libraries are quite helpful for this. They have a sample code example with links to a step by step guide on how to deploy. I\u2019m not too familiar with them but here\u2019s what i could find: [aws sample github page](https://github.com/aws-samples/lambda-refarch-webapp?files=1) \n\nTheir documentation will help you the most.  I suggest you test with their example first then adapt if needed. \n\nAlso:\n\n[the whole tutorial for web apps](https://aws-amplify.github.io/amplify-js/media/quick_start?platform=purejs) \n\nCheck the toolchain section for hosting, it\u2019s a command to push your code onto the server.", "id": "e54loh2", "replies": []}, {"body": "You could try Heroku. It's easier than AWS.", "id": "e54r4kc", "replies": []}], "title": "Resources for putting create-react-app on the web."}