{"url": "https://www.reddit.com/r/learnprogramming/comments/9bu04w/what_can_one_build_with_c_programming_language/", "text": "I was just wondering what kinda useful stuff can one make today with C language. ", "score": 0, "comments": [{"body": "Whatever you want. C is somewhat low-level, but it's still a general-purpose programming language. Some things will be quicker and easier to build with other frameworks.\n\nEdit: I realize my answer may be less than satisfactory. I don't want people using this sub as a replacement for googling things (and literally googling the title of this thread gives you plenty of great answers). But I can expand on this answer a little bit.\n\nC is, as far as languages go, very low-level. It's not assembly or machine code, but it also provides very few abstractions compared to more modern, more high-level languages. It puts the responsibility of memory management on the shoulders of the programmer, not the framework. So with that responsibility comes the capability for great performance. But it also means it's more effort on the programmer's part to write programs.\n\nIn some cases, you need this speed and flexibility (and the ability to compile to a platform-native binary). Drivers, for example. Systems programming in general.\n\nAnd in many other cases, you don't need those aspects. In those cases, it might make sense to use a language that involves less dev time and does more things for you.\n\nBut that doesn't preclude you from using C to do all those things. It just means it might be more effort to do so.", "id": "e55onwp", "replies": [{"body": "Also, technically speaking, your answer is not correct. There are some problems (especially in theoretical computer science) that are impossible to solve programmatically. New programmers probably won't stumble over them though, so I accept your answer :)", "id": "e55u307", "replies": [{"body": "Come on, guy. I think it's obvious that \"whatever you want\" has an implied \"...that's not provably impossible\".", "id": "e55us05", "replies": [{"body": "Wasn't meant offensively. Was just for OP so that they know that there are some limitations", "id": "e55v7bq", "replies": []}]}]}]}, {"body": "Operating system kernels, a C++ compiler, an embedded system OS, a python interpreter, etc, are examples of software that are currently written in C.", "id": "e55ri0m", "replies": []}, {"body": "It\u2019s also important to remember (especially for new programmers) that a C machine is a finite tape turing machine, and can do exactly all the things that all other turing complete languages can do. But that doesn\u2019t mean that an efficient two line solution in clojure will be fun for you to write in C. C is very good for certain things, like OS, drivers, kernels, etc. and not as good for others (achem general purpose data structures).", "id": "e56jh0j", "replies": []}, {"body": "It's a general-purpose language. I'm currently writing the realtime software for a digitally-controlled modular synthesizer in C.\n", "id": "e55to16", "replies": []}, {"body": "Almost anything, I think the only thing C is really horrible at is front-end web design. And even then it's possible, just not recommended.\n\nBasically all other languages and toolsets have a method for linking to C code because everyone's been writing it for so long.", "id": "e55u7os", "replies": []}], "title": "What can one build with C programming language?"}