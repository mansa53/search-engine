{"url": "https://www.reddit.com/r/learnprogramming/comments/9ba84q/will_i_need_to_switch_from_c_to_do_app_development/", "text": "I'm doing a course in games programming at University and the bulk of the course is learning C++ on visual studio, and some of the course teaches us about Android apps. \n\nI have a big interest in making Android apps and obviously would benefit from learning Java, but I was wondering how easy it would be to just make Android apps with C++ given that I might want to completely switch careers to app development? \n\nI figured with C++ I can do a lot of things, but I would like to know if I can only learn C++ and sustain a career in app development.\n\nthanks", "score": 2, "comments": [{"body": "So since there are plenty of tools to build Android apps in a variety of languages, I'm not going to say that you can't make Android apps in C++ - I just don't know enough. But I can say that that the *common* path for building Android apps is Java or (recently) Kotlin. If you choose not to use either of those, then you'll be at least somewhat off the beaten path. \n\nAndroid *does* have built-in support for mix Java and native code, so you could potentially write large swaths of your application code in C++ and then write Java or Kotlin glue code to bind it all together. That would work well if you have a lot of CPU-heavy, GUI-independent code. ", "id": "e51gaif", "replies": [{"body": "> I'm not going to say that you can't make Android apps in C++ - I just don't know enough\n\nAndroid has what's called an \"NDK\" (native development kit). Adding it to your project enables C++ support, but Google's advice in this regard is basically \"If you can, avoid using the NDK because it significantly complicates your projects\".", "id": "e51h2nd", "replies": [{"body": "Yeah, that's what I was referring to when I said \"Android does have built-in support for mix [sic] Java and native code\". But AFAIK you can't use the NDK to build an application top-to-bottom - your app manifest has to name Activity classes, for example, and those need to be implemented in Java (or Kotlin). But I could be wrong - I've never played with the NDK.\n\nI'd expect that, any time you need to access any of the Android GUI APIs, you would have to do so from Java. It looks like you can access [some Android APIs](https://developer.android.com/ndk/guides/stable_apis) from the NDK, but not all.\n\nBut correct me if I'm wrong.", "id": "e51iolq", "replies": []}]}]}, {"body": "I would say using C++ for the whole app would be quite horrible experience. The UI things for example are not available directly in C++ so you would need to write lots of boilerplate to bridge the gap. So it would not be worth it. \n\nIt would be a lot better to use Java or Kotlin for Android development. ", "id": "e51gm1g", "replies": []}, {"body": "Depends on the type of app. I make games using OpenGL, and transitioning to mobile was pretty easy, it required almost no changes in the bulk of my code (just had to rewrite shaders and a new platform layer). But if you want to use all the system specific widgets then Java is probably important.\n\nAlthough honestly I would only work with Java to expose a widget library to C++, because then the main body of code is still portable, so when you need to move to iOS it'll be easy.\n\nYou can only expect for things to get more fragmented, and I think portability is important.", "id": "e51go0a", "replies": []}, {"body": "It\u2019ll make you\u2019re life ALOT easier to just switch to kotlin(java) ", "id": "e51h7l4", "replies": []}, {"body": ">but I would like to know if I can only learn C++ and sustain a career in app development\n\nVery unlikely, unless you are doing nothing but games. Apps themselves are far, far easier and more commonly written in Java (or Kotlin now, hopefully that gains as much traction as Swift did).\n\nDon't worry though, if you already have a strong foundation in C++, Kotlin or Java shouldn't be as much of a stretch as they'd be without it. C++ is a beast of a language, so having a good functional knowledge of it makes transitioning to other languages easier.", "id": "e51h8wo", "replies": []}, {"body": "If you're interested in Android development you should really consider using the Android SDK/Java and recommended tools. There are tools for making Android applications in a variety of languages/frameworks but they all add varying degrees of complexity and issues. ", "id": "e51hlw2", "replies": []}], "title": "Will I need to switch from C++ to do app development?"}