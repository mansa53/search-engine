{"url": "https://www.reddit.com/r/learnprogramming/comments/9bw0eg/how_do_you_design_a_game_software_to_adjust/", "text": "By playing games I already know that with the help of math/numbers you can do things like increase damage for you, decrease damage for enemies (or vice versa), spawn many enemies or only a few, give you more starter weapons, increase/decrease critical chance or just the chance of something happening, use a random number generator, etc.\n\n&#x200B;\n\nBut what if this isn't so obvious? What if we're talking about a chess game software? How do you program it so that in the easiest difficulties the video game deliberately makes mistakes, essentially letting you win?", "score": 3, "comments": [{"body": "No universal answer as it likely depends on the game.  Let's take chess for example.\n\nSay your default AI looks 5 moves in advance.  That is, it computes the best move by looking at all moves up to 5 moves in the future.  Your hard AI might then look 7 moves in advance, and easy 3 moves.  \n\nOr, if you're using training data, you could train it on specific levels of data (say, by ELO).", "id": "e5650w0", "replies": []}, {"body": "A common technique is to change the AI's parameters. A naive example: an expert AI might evaluate all the choices in front of it, score them all based on its own rules, and choose the highest scoring one to execute. An intermediate AI might randomly choose between the top N number of outcomes sorted by score, and a beginner AI might have an even wider range to choose from.", "id": "e566lh0", "replies": []}, {"body": "There was a great youtube video about some video game, it was an FPS that had a \"mass failure\", the enemies were very very stupid. Wouldn't notice the players. Pirated/cracked versions of the game had fixed the bug making it 1000x better than the official copy.\n\nTurned out to be a bug caused by a 1 character typo.\n\n.. Anyways the video goes into detail about how the games difficulty options were more than just damage/movement and made the enemies smarter. It also talked about how users don't want the enemies to be 'too smart', and the types of prediction methods users liked versus hated.\n\n\u200b\n\nedit: Thanks Kered13 that's the one", "id": "e566sq7", "replies": [{"body": "That was Aliens: Colonial Marines, and the bug was only discovered recently, over 4 years after the game came out and massively failed. With the bug fixed the game is still fairly bad, but the enemies do function much better.", "id": "e567fin", "replies": []}]}, {"body": "Instead of making mistakes, just have less mechanics.\n\nDiablo adds additional mechanics to rare and elite monsters. They are called affixes.\n\nThe higher the difficulty, the more affixes rares have. Sometimes certain affixes together make packs impossible to the extend high end players skip them.\n\nOr in WoW, the highest difficulty often has an additional stage and stages are more complex than in lower difficulties. For example, certain bosses have a damage over time effect and need to be swapped between the two tank players so they don't get killed. In higher difficulties, you can reduce the window of swapping.", "id": "e56bxtn", "replies": [{"body": "> Instead of making mistakes, just have less mechanics.\n\nThat's not always an option. The OP actually mentioned chess as an example, where you can't really manipulate the mechanics like that (not if you want the game to still be chess). Your only option is to change the behavior of the AI.", "id": "e56kjr7", "replies": [{"body": "He didn't specifically say that mechanics remain the same.", "id": "e57341l", "replies": []}]}]}], "title": "How do you design a game software to adjust difficulty?"}