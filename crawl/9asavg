{"url": "https://www.reddit.com/r/learnprogramming/comments/9asavg/java_help_setting_jtable_row_color_based_on_row/", "text": "I am trying to set row colors based on a specific value, in the example below I have it looking in row 5 of .getnumber for number of 1 and I did a console print of each time there was a 1 in row\\[5\\] and it accurately prints them. It prints \"1\" 3 times, which is correct because I know that there is only 3 ones in the row of random numbers.\n\nI also tested it, if row\\[5\\].equals(1), then change the table background to red and that works as well so I know my method works in a way. But I am unsure how to change only the color of the row that has the value of 1.\n\nCode:\n\n        public void show_sqlmonthsall(){\n        ArrayList<SQLLoadsAll> list = SQLMonthsList();\n        DefaultTableModel model2 = (DefaultTableModel)AllActive_table.getModel();\n        Object[] row = new Object[7];\n        for (int i=0;i<list.size();i++){\n        row[0]=list.get(i).getdate_arrived();\n        row[1]=list.get(i).getload();\n        row[2]=list.get(i).getdate_shipped();\n        row[3]=list.get(i).getmonth();\n        row[4]=list.get(i).getstatus();\n        row[5]=list.get(i).getnumber();\n        row[6]=list.get(i).getid();\n        model2.addRow(row);\n        if (row[5].equals(1)){\n            AllActive_table.setBackground(Color.red);     //testing idea\n            AllActive_table.getCellRenderer(i, 5); {     //testing idea\n            setBackground(Color.red);                     //testing idea\n        }\n            System.out.println(row[5]);\n            System.out.println(\"There is a 1\");\n        }\n         \n            }\n        }  \n\nConsole:\n\n1\n\nThere is a 1\n\n1\n\nThere is a 1\n\n1\n\nThere is a 1", "score": 1, "comments": [{"body": "\nIf you want to change the background color of a particular row in a table, then I think the best approach is to use a custom [TableCellRenderer](https://docs.oracle.com/javase/8/docs/api/javax/swing/table/TableCellRenderer.html) that will set the background color appropriately for each row. Here is a simple example: \n\n\n    \n    \n    public final class CustomRowColorRenderer extends DefaultTableCellRenderer {\n\n        @Override\n        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {\n            Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column); \n            \n            if (!isSelected) {\n                if (row == 5) {\n                    c.setBackground(Color.GREEN);\n                }\n                else {\n                    c.setBackground(table.getBackground());\n                }\n            }\n            \n            return c;\n        }\n    }\n\nAnd then apply that renderer to the desired columns. For example, to use it for every column: \n\n        CustomRowColorRenderer r = new CustomRowColorRenderer();\n        TableColumnModel tcm = table.getColumnModel();\n        for (int i=0; i < tcm.getColumnCount(); i++) {\n            tcm.getColumn(i).setCellRenderer(r);\n        }\n\n", "id": "e4xxxhq", "replies": [{"body": ">I was leaning towards a getTableCellRendererComponent, what you gave me, the concept worked, I just need to modify it to work fully with all my specific variables. Thank you!\n\n&#x200B;", "id": "e4yywow", "replies": []}]}], "title": "Java Help- Setting JTable row color based on row value (Code provided)"}