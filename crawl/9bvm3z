{"url": "https://www.reddit.com/r/learnprogramming/comments/9bvm3z/java_whats_the_difference_between_args0_and_args/", "text": "Two questions:\n\n\n(1) In this paste bin (https://pastebin.com/SFUXJ8qJ), why does java produce the following error \n\n    Exception in thread \"main\" java.lang.NumberFormatException: For input string: \"args\"\n\nwhen I change the argument in line 3 from args[0] to args? This doesn't make sense to me. If I input a string of numbers, wouldn't arg[0] simply be the first character - or digit - of my input? If not, what is args[1] or args[2] etc. represent?\n\n\n\n(2) Still trying to learn proper conventions. Did I phrase my question properly? Do we say that inputs are from stdIn if and only if they come from command prompt? As in:\n\n    C:\\path>java program input", "score": 0, "comments": [{"body": "`args` is an array of Strings, not characters.  `args[0]` is a String, not the first character of `args`.  Each input argument is an entire whole String in the `args` array.\n\nYou can have lots of different sources of input in a Java program. The program arguments are just one way.", "id": "e561rdk", "replies": [{"body": "I see. So \"standard input\" refers to any sort of input to a java program?", "id": "e561upg", "replies": [{"body": "No, standard input is a specific input channel.  In most programs, there's a default input channel (stdin), output channel (stdout), and error channel (stderr), that gets attached to different locations depending on how it's launched.  For instance, in your Java program, you get _program arguments_ that are the words typed on the command line after the program and any vm arguments.  _Standard input_ is a stream of characters that can be hooked to a file or the keyboard of your command terminal, and will read any characters typed _after_ the program starts.\n\nIn Java, you can access stdin, stdout, and stderr as System.in, System.out, and System.err.", "id": "e56290g", "replies": []}, {"body": "> So \"standard input\" refers to any sort of input to a java program\n\nNo. /u/g051051 has provided a good explanation for this. But if you want some more reading on the topic, start here:\n\nhttps://en.wikipedia.org/wiki/Standard_streams", "id": "e566r8q", "replies": []}]}, {"body": "Also args[0] will be the name of the program. args[1] will be the first useful argument.", "id": "e568i7c", "replies": [{"body": "Not in Java. The `args` array starts with the first argument; the program name is not included.\n\nEdit: same for C#.", "id": "e56hrxg", "replies": []}]}]}, {"body": "Here's some resources to help, wasn't seeing the issue at a glance myself.\n\n* [StackOverFlow - CommandLine Args]( https://stackoverflow.com/questions/890966/what-is-string-args-parameter-in-main-method-java )\n* [Oracle - CommandLine Args](https://docs.oracle.com/javase/tutorial/essential/environment/cmdLineArgs.html)\n\nAdditionally: \n1. Java myProgram 123, gets passed as args { \"123\" }. So args[0] refers to the whole number.\n2. Command Line Args is passed from the OS, or Terminal/Shell, before Java StdIn takes place. But this seems to be some Java Magic area with how it works between the OS and getting to your main().", "id": "e5632q0", "replies": []}], "title": "Java: What's the difference between args[0] and args when getting input from stdIn?"}