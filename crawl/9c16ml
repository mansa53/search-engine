{"url": "https://www.reddit.com/r/learnprogramming/comments/9c16ml/python_how_would_i_print_a_constantly_updating/", "text": "The following code is used to fetch messages from a database and print them to the console. \n\n    db = pymysql.connect(host, user, passw, db)\n    cursor = db.cursor()\n\n    def load(str):\n        message_group = str\n\n        cursor.execute(\"SELECT * FROM `sichat_message` WHERE sigroup = %s\", (message_group))\n        data = cursor.fetchall()\n        \n        message_group.seek(0,2)\n        while True:\n            for row in data:\n                message_date = row[3]\n                message_author = row[1]\n                message_content = row[2]\n                print(\"[%s] %s: %s\\n\" % (message_date,message_author,message_content))\n     \n    load(\"testgroup\")\n\nIt works, but I'd like to have it constantly update as the database is dynamic. I tried a \"while True\", and it works. But I want people to be able to insert data in too, so that likely won't work.", "score": 1, "comments": [{"body": "> I want people to be able to insert data in too, so that likely won't work.\n\nWhat makes you say that? Have you tested it? ", "id": "e579ugw", "replies": [{"body": "Yes, I have. I set it to constantly clear and rewrite the values. It works, but it lags a bit and the input command doesn't work as a result.\n\nAnd yes, I've already tried a GUI. I spent six hours trting to implement one actually. I can't install PyGTX or whatever it's called and Tkinter kind of sucks. So I'm putting that on the back burner for awhile", "id": "e57aaxh", "replies": []}]}, {"body": "In order to have two routines running at once (one to display messages and one to take user input) you will need to run them on separate threads. There are loads of sample programs and tutorials out there that you should be able to adapt to your needs.", "id": "e57a0yn", "replies": [{"body": "I tried threading and it didn't seem to work that well. I'll try it again tomorrow though.", "id": "e57adnt", "replies": [{"body": "Your implementation of it may not have worked well but threading is the way to go. Put your reading code in a loop that pauses between iterations and spin it up on a thread. You can then use the main thread to get user input. Or, even better, use tkinter (or equivalent) to stick a gui on it - avoids mixing the input and output on the command line.", "id": "e57bei2", "replies": [{"body": "Already tried tkinter and it sucked  so I'll go with threading and get back with you tomorrow.", "id": "e57bjvn", "replies": []}, {"body": "So I tried it.\n\n    db = pymysql.connect(host, user, passw, db)\n    cursor = db.cursor()\n\n    # define our clear function\n    def clear():\n     \n        # for windows\n        if name == 'nt':\n            _ = system('cls')\n     \n        # for mac and linux(here, os.name is 'posix')\n        else:\n            _ = system('clear')\n\n    def load(str):\n        message_group = str\n\n        cursor.execute(\"SELECT * FROM `sichat_message` WHERE sigroup = %s\", (message_group))\n        data = cursor.fetchall()\n        \n        clear()\n        x = 1\n        while True:\n            for row in data:\n                message_date = row[3]\n                message_author = row[1]\n                message_content = row[2]\n                print(\"[%s] %s: %s\" % (message_date,message_author,message_content))\n            time.sleep(1)\n            clear()\n            \n    def input(str):\n        message_group = str\n        nextMessage = input(\"a\")\n        clear()\n     \n    thread1 = Thread(target = load, args = (\"testgroup\", ))\n    thread2 = Thread(target = input, args = (\"testgroup\", ))\n    thread1.start()\n    thread2.start()\n\nIt doesn't work, it just shows a big long block of text before switching to thread 1 and not letting me enter anything.", "id": "e587jjg", "replies": []}]}]}]}], "title": "python - How would I print a constantly updating MySQL database to my program?"}