{"url": "https://www.reddit.com/r/learnprogramming/comments/9bnrht/yet_another_where_should_i_start_post/", "text": "I'm a complete beginner. I've dabbled with AutoHotKey a little and was trying to get it to do more complex tasks. Eventually wound up looking for resources on C++. Problem is that a lot of the books available are outdated and for older versions of C++. Is it important that I get one up to date?\n\nI've mostly been looking at C++ Without Fear a lot. I've never been a good book learner.\n\nsorry for wall of text ahead, but some history:\n\nEvery novel I've ever read I found myself struggling along with it. I didn't notice this discrepancy until around middle school. By that point, I was going back entire chapters just to get what was going on. Even then, I ended up focusing too much on other details that I was trying to listen to and ended up missing out on understanding even more things. By the end of the novels, I was so tired of reading them and just wanted to get them over with. I was so unbelievably lost at the end of them. I kept forgetting which characters did what and what their personalities were, if the reader was supposed to root for them or jeer. This has always been happening. It took me two months to get through 250 paged Rendezvous with Rama, even though I so fucking desperately wanted to know what was going on. Even tried listening along an audiobook to no result. I have a diagnosed attention disorder so I would imagine that has a large role in all of this.\n\nOKAY, bottom line is that I want to get C++ Without Fear, but I fear ^^^haha ^^^get ^^^it that it's too outdated. The last version it covered was C++14. Could I still get it and not have to worry about it being incompatible with C++17?\n\nI know some people aren't really mentally built to do programming, however I keep coming back to it because I want to automate tasks to make things more convenient for me on my desktop. I want to definitively try it.\n\nThanks for taking the time to read this and providing any feedback, my dude. ", "score": 2, "comments": [{"body": "An interactive course might be a good fit for you. Even as someone who's comfortable with books, I actually like interactive courses a lot because they make practicing easy.\n\nThat being said, programming books aren't quite like novels. Chapters are usually more self-contained, and there are often exercises to help you learn by doing.\n\nPython is probably better than C++ for automation. It's probably a better beginner language, as well. [Learn Python](https://www.learnpython.org/) is a good tutorial. (There's a sibling [site](https://www.learn-cpp.org/) for C++, but it's not complete, and I don't think it covers features added in C++17.) That being said, C++ is still a popular language for game development and Windows development.\n", "id": "e54fksm", "replies": []}, {"body": "Why did you decide on C++? I would recommend something else, like Python. And maybe look up a course on Coursera or something if you have trouble with books.", "id": "e54rg76", "replies": [{"body": "My dad is a seasoned programmer. He knows how to code in, as far as I know, 20 languages (maybe more). He's worked with it for several decades. I inquired him about the subject and his philosophy was that learning the absolute base level of programming would provide a foundation for my understanding of other languages. I'm more inclined to take his advice because a lot of comments in the *how to learn c++* threads that I was able to find repeated the exact same phrase: *a good book*, which irritates me. In some instances, users were going with the truth bomb, in which one said *if you don't commit, you won't continue learning for much longer*, which I believe is a much too negative ideology. I don't want to use books, but I swear, I keep coming back to the idea of programming. He also said that everyone learns differently. Another user had a similar message, adding on  that there is no universally agreed method on learning how to code. I'm just hoping to ask for other plausible options and recommendations.", "id": "e56cfo2", "replies": [{"body": "> I inquired him about the subject and his philosophy was that learning the absolute base level of programming would provide a foundation for my understanding of other languages.\n\nI don't understand what you mean. Does this mean that you will learn C++?\n", "id": "e56yzxv", "replies": [{"body": "Other languages are all based on C++, but typically with more simple changes to make coding not so tedious. It would be better to know what's going on under the hood when a function is too simple to do specifically what you want.\n\nHopefully that makes it clearer.", "id": "e57154c", "replies": [{"body": "> Other languages are all based on C++\n\nNo, they are not.", "id": "e572fqu", "replies": []}]}]}]}]}, {"body": "To learn C++ properly, you _really_ need to do a lot of reading - not just one text book but at least  half a dozen.\n\nIt sounds like Python would be a much better fit for you.", "id": "e54d6p2", "replies": [{"body": "From what I've seen on all of these subreddits, 90% of users recommend lots of books for any language and online courses are largely controversial, or rather, much lower voted on than book recommendations. Is Python not the same?", "id": "e54dj2g", "replies": [{"body": "The standard Python distribution comes with lots of tutorials and documentation, and Python is an explorative language - you don't have to write a complete programs to see how a little bit of code might work, unlike C++.  However, in my experience Python books are really nowhere near as good as C++ books - For example, I have just finished wading through \"Fluent Python\" which has much useful information, but presented in a brain-numbing manner.  But there are crappy books on all programming languages.", "id": "e54dnl7", "replies": []}]}]}, {"body": "Sometimes actual books are good solely for the fact you break away from staring at your screen", "id": "e54pxyb", "replies": []}, {"body": "> OKAY, bottom line is that I want to get C++ Without Fear, but I fear haha get it that it's too outdated. The last version it covered was C++14.\n\nAs long as the book you get covers C++11 you will be just fine. If you write a program using C++11 features then it will work just fine on newer compilers, as well. Once you have a good grounding in C++, you can learn a few extra features from C++14 and C++17 as you need them, but think of these as side dishes. C++ is the main course and you will probably already be full from learning it. Generally you shouldn't try to use new language features just for the hell of it -- this is doubly true for C++; there are way too many features in the language to do that well.\n", "id": "e54zprs", "replies": []}], "title": "Yet another \"where should I start\" post"}