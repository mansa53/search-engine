{"url": "https://www.reddit.com/r/learnprogramming/comments/9br2o2/which_language_is_the_best_for_learning/", "text": "I have a reasonably good understanding of Javascript and want to learn something of a different paradigm in order to broaden my programming horizons. I have spent a bit of time looking at Scala and Elixir, but didn't particularly like either. Scala seems very hard to learn without Java knowledge, and I hear a lot of worrying things about the community. Elixir has better long term prospects, but I don't like that the syntax is lightweight to the point of being unclear and it uses English words to mean completely unintuitive things.\n\nIdeally what I'd like is a language with some industrial relevance (no FP language is terribly popular in industry I know, but something with niche use at least would be preferred) that has really good tutorials incorporating minimal assumed knowledge and exercises/interactivity. Can anyone suggest a good candidate?\n\nEDIT: Thanks for the suggestions so far. I started learn you a Haskell and I like what I've seen so far, but other suggestions would still be cool. ", "score": 4, "comments": [{"body": "I am personally a huge fan of scala, so I can't agree with your assessment, but I have heard a lot of good things about kotlin, although I have never used it before. But it being developed by intelliJ is a huge plus in my books ", "id": "e558zxx", "replies": [{"body": "Kotlin is mixed paradigm, not FP. ", "id": "e55ck5p", "replies": [{"body": "So is scala and it was still used as example. ", "id": "e55dbcq", "replies": [{"body": "Kotlin is _strongly_ mixed paradigm. Yes, you can do FP in it; but ask a hundred developers with experience with Kotlin to name FP languages and they won't mention Kotlin.\n\nKotlin is a _lot_ more like Java than it is like Scala or Haskell or Clojure.", "id": "e55dy8h", "replies": [{"body": "I take you by your word. Sounds plausible. And like I said I don't have first hand knowledge. ", "id": "e55g3pe", "replies": [{"body": "You should try it sometime! It's fantastic. If I could substitute all Java with Kotlin for the rest of my life, I'd be happy.", "id": "e55kqxt", "replies": []}, {"body": "I do. He's right; Kotlin is like C# in the sense that it borrows some concepts from functional languages without being a full FP language. Just like a lot of modern languages these days.\n\nBut Kotlin is designed as a drop-in replacement for Java. You can use them both in the same project, and use tooling to convert from one to the other. Kotlin definitely fits Java's paradigm more closely than some of the other JVM languages.", "id": "e55l5yb", "replies": []}]}]}]}]}]}, {"body": "Haskell -> [Learn You A Haskell For Great Good](http://learnyouahaskell.com/)\n\nHaskell's niche has a lot to do with writing parsers.", "id": "e55a7k7", "replies": [{"body": "It is a great book, and I don't even like Haskell!", "id": "e55b1fi", "replies": []}]}, {"body": "Hmm. I would go with Haskell. Its a pure functional language.  So if you want to learn to program in a functional style its where you should start. ", "id": "e55cey8", "replies": []}, {"body": "Some options:\n\n* Lisp, in one flavour or another. It's very \"pure\" syntactically. Clojure might appeal to you as it can compile to JS, and it's used by some companies. \n* Haskell. Big boy language. Probably the purest FP language. Fewer jobs though. \n* OCaml/Reason. OCaml is somewhat similar to Haskell, but with performance approaching that of C. Reason is basically an update to the syntax to make it more JS-like, plus a toolchain for compiling to JS. You might see some front end gigs doing Reason. ", "id": "e55cno7", "replies": []}, {"body": "I kinda feel if you're going to be picky about Elixir's syntax, then every little thing will upset you about every language you try.  ", "id": "e55i9po", "replies": [{"body": "I don't dislike it so much I'd never use the language, but while I'm trying to learn a whole new paradigm I'd prefer to do it with a language whose syntax I find reasonably intuitive. ", "id": "e55k28b", "replies": [{"body": "Just saying, it's quite possible you'll find a lot of languages' syntax not so intuitive.  Maybe not.  Maybe this is the only you'll find unpleasant.", "id": "e55w2ct", "replies": []}]}]}, {"body": "These day lots of programming languages are introducing functional behaviours, although some of them were originally designed to be strictly OOP (or object based at least). Hence, pretty much anything these days might have some \"feature\" you might find interesting.\n\nScala is the perfect candidate although it is much more difficult than it seems.\n\nKotlin is a very good choice too.\n\nHowever, plenty to choose from as I would also consider: PHP, Python, Perl, JavaScript and Ruby", "id": "e55lgeq", "replies": []}], "title": "Which language is the best for learning functional programming with interactive tutorials?"}