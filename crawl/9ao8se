{"url": "https://www.reddit.com/r/learnprogramming/comments/9ao8se/c_how_to_handle_a_method_with_complicated_logic/", "text": "I have a method with a large number of optional parameters that might be used in any combination, it looks something like this:\n\npublic void DoThis(int a, int b, string s=\"\", string s1 = \"\", string s2 = \"\", string s3 = \"\", string s4 = \"\", string s5 = \"\")\n\nWhenever I call this method, it usually looks messy and I have to pass in most of the default values myself depending on which combination of variables are required.  So it could look something like this:\n\nDoThis(1, 2, \"\", \"\", \"\", \"\", \"\", \"String s5\")\n\nIs there a cleaner way of doing this?", "score": 0, "comments": [{"body": "Maybe a struct or data object would be better suited?\n\nGenerally, methods with many optional parameters look like code smell. Such methods quite often violate the [Single Responsibility Principle](https://en.wikipedia.org/wiki/Single_responsibility_principle), one of the 5 [SOLID](https://en.wikipedia.org/wiki/SOLID) principles that form the core of OOD/OOP. Probably, re-thinking and re-engineering is necessary.", "id": "e4wtdji", "replies": [{"body": "Each optional parameter is basically a result of me finding a special case in our system that my method couldn't handle normally so I had to add in a optional variable to handle it.  These special cases could potentially happen in any combination so I'm not sure there's another way other than splitting it into a few dozen different methods.", "id": "e4wtosb", "replies": [{"body": "> These special cases could potentially happen in any combination so I'm not sure there's another way other than splitting it into a few dozen different methods.\n\nWell, there is exactly where you should go. Individual methods.\n\nIf you have too many cases with optional variables, something is fishy in the design.", "id": "e4wtroe", "replies": []}]}]}, {"body": "\nYou don't need to supply the items with the default values. The following will work:\n\n     DoThis(1,2, s5: \"String s5\");\n\n", "id": "e4wyq9i", "replies": []}], "title": "[C#] How to handle a method with complicated logic and many optional parameters?"}