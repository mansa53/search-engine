{"url": "https://www.reddit.com/r/learnprogramming/comments/9comp0/web_technologies_what_is_coding/", "text": "More of an opinion than a question - I read over and over of people programming \"coding\" their first app or program using HTML and CSS.  While this is a toolset that allows creative expression in a web centric environment, it is not really programming.  Programming requires decision making using logic.  Throw some Javascript or PHP into the mix and now you are programming.  I think that introduction to programming courses (especially in the junior college level) do first time programming students a disservice by starting out teaching HTML and CSS.  When did that become the de facto starting platform?  Why not Python or C?  These languages actually teach programming.    ", "score": 0, "comments": [{"body": "Whether or not \"coding\" is the proper choice of words, keep in mind that these concepts might be totally new to some students:\n\n* Using a plaintext editor\n* Typing something with a lot of meaningful symbols\n* Typing something with very precise syntax - forgetting a single *'>'* and the whole thing can break\n* Making a tiny change to the \"source\", that when interpreted by the computer, manifests as a large change in the resulting web page\n* Sharing one file across multiple projects (like one CSS file shared by all web pages on a site)\n\nThese are all really important concepts in programming too, but they're a little easier to learn with HTML and CSS. Some students find it overwhelming to learn all of these concepts **and** learn things like variables and loops too.\n\nThere's no single best way to teach. You'll find some who believe that starting with HTML is a great way to warm up, others who believe Python is best, and others who think you should start with C and learn more low-level concepts first. There's no clear winner, but there are good arguments in favor of each option.\n\n&#x200B;", "id": "e5c5ixz", "replies": []}, {"body": "It's coding but not programming IMO. I think it's a great place to start for younger people and casual beginners. It's easy to get visual feedback, and teaches some important concepts that seem obvious to experienced devs but aren't when you're just starting out. (Like, semicolons and closing your braces are really important!) \n\nDoesn't make as much sense to me in a college programming class, unless it's specifically web-focused.  But heck, if it works for people, maybe it doesn't matter too much. It's not like learning CSS first would make you WORSE at programming. It just might be a waste of time for some people, that's all.", "id": "e5c7doq", "replies": []}, {"body": "I don\u2019t really get the attitude toward web programming.  Maybe because it\u2019s visual in nature, or because it\u2019s not compiled?\n\nDesign work is just as important as the algorithms you use to crunch data.\n\nBeginners need to learn how the core technologies work before they can get to working on the languages that will be manipulating those cores.\n\n", "id": "e5c8xud", "replies": [{"body": "I am a web programmer as well as a desktop application programmer.  I enjoy web programming a lot and do a fair amount of it.  My thoughts here are not web or not to web, but what is the right place to start teaching programmers.  I grant that it is satisfying tweaking some html or css and seeing big changes, but I deal with interns who think they are programmers because they learned some html and css in a junior college.  Equally bad I think is they thought they were learning programming, and when they get to more advanced topics they realize they are doing the wrong thing.  Maybe they can reclaim a few credits as they change their major to design or something.  It is an opinion - down vote if you want. ", "id": "e5cdhag", "replies": []}]}], "title": "Web technologies - what is coding?"}