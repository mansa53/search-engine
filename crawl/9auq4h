{"url": "https://www.reddit.com/r/learnprogramming/comments/9auq4h/creating_sub_users_with_passportjs_create_another/", "text": "I have a basic application set up where I have users sign up where their role is company then I want the company to create sub users like manager, team lead, hr, ect. The idea of this is that the sub users will be linked to my company user. Currently I have a `/register` route set to handle the initial signup. Now I want to be able to set `newUser.role` to say `manager` and also `newUser.companyID` to `req.user.companyID`.\n\n\u200b\n\nI am using passportJS for this and am wondering how I should go about changing my register strategy to handle this when I intend to use \\`/user/create\\` as my second POST route that will call on this passport strategy. Or am I better off creating another strategy that will handle these sub users?\n\n\u200b\n\n\\*\\*Passport signup strategy:\\*\\*\n\n\u200b\n\n\u200b\n\n`passport.use('signup', new LocalStrategy({`\n\n`usernameField: 'email',`\n\n`passReqToCallback : true`\n\n`},`\n\n`function(req, email, password, done) {`\n\n`User.findOne({ email:` [`req.body.email`](https://req.body.email) `}, function(err, existingUser) {`\n\n`if(err){`\n\n`console.log(err);`\n\n`}`\n\n`if (existingUser) {`\n\n`req.flash('form', {`\n\n`email:` [`req.body.email`](https://req.body.email)\n\n`});`\n\n`return done(null, false, req.flash('error', 'An account with that email address already exists.'));`\n\n`}`\n\n`// edit this portion to accept other properties when creating a user.`\n\n`var user = new User({`\n\n`email:` [`req.body.email`](https://req.body.email)`,`\n\n`password: req.body.password, // user schema pre save task hashes this password`\n\n`role: 'company'`\n\n`});`\n\n[`user.save`](https://user.save)`(function(err) {`\n\n`if (err) return done(err, false, req.flash('error', 'Error saving user.'));`\n\n`var token = new Token({ _userId: user._id, token: crypto.randomBytes(16).toString('hex') });`\n\n[`token.save`](https://token.save)`(function (err) {`\n\n`if (err) return done(null, false, req.flash('error', err.message));`\n\n`var email =` [`req.body.email`](https://req.body.email)`;`\n\n`// Send the email for the token`\n\n`var message = 'Hello,\\n\\n' + 'Please verify your account by clicking the link: \\nhttp:\\/\\/' +` [`req.headers.host`](https://req.headers.host) `+ '\\/user/confirmation\\/' + token.token + '\\/' + email + '\\n';`\n\n`sendEmail('\"Site name\"` [`noreply@domain.com`](mailto:noreply@domain.com)`',` [`user.email`](https://user.email)`, 'Account Verification Token', message);`\n\n`});`\n\n`var time = 14 * 24 * 3600000;`\n\n`req.session.cookie.maxAge = time; //2 weeks`\n\n`req.session.cookie.expires = new Date(`[`Date.now`](https://Date.now)`() + time);`\n\n`req.session.touch();`\n\n`return done(null, user, req.flash('success', 'A verification email has been sent to ' +` [`user.email`](https://user.email) `+ '. Verfication token expires in 12 hours.'));`\n\n`});`\n\n`});`\n\n`})`\n\n`);`", "score": 2, "comments": [], "title": "Creating sub users with passportJS | Create another strategy or modify current one?"}