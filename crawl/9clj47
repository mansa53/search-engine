{"url": "https://www.reddit.com/r/learnprogramming/comments/9clj47/sqlalchemy_question/", "text": "I'm not sure what relationship to use to for one of my models.  I want to create a table that stores transactions between accounts(stored in my account table).  I imagine each row to have an account connected for who receives the transaction and an account connected for where the money comes from.  Could some help me with what this would look like? My google efforts have fallen short.\n", "score": 1, "comments": [{"body": "So you want a many-to-many relationship between a table and itself? It's not really any harder than that. Your main table will be\n\n     Account | id | accountInfo | ....\n\nAnd your association table will be\n\n    Transactions | id | SourceId | TargetId | amount\n\nBoth SourceId and TargetId refer to an account, though strictly different accounts. You need an id as primary key since account relationships are not unique.\n\nWith this you can calculate anything you need fairly easily using only sql.\n\nNote that you never store the balance of an account directly, which is ideal. You already store all required info as transactions.", "id": "e5bj556", "replies": [{"body": "Ok I see, although the idea of not storing the balance confuses me a little.\n\nIf Account was a usual object, I guess i would write a method that adds all its TargetId transactions and  takes away all the SourceId transactions.  What does this look like in a model?  Do I just create a function and call it in a route when I want to display the balance?\n\nThanks for your help", "id": "e5crll9", "replies": [{"body": "Yes. You can even do it using sql:\n\n    SELECT id, coalesce(\"inBal\") - coalesce(\"outBal\") AS balance FROM \"Accounts\"\n        LEFT OUTER JOIN\n        (SELECT \"SourceId\", sum(\"amount\") AS inBal\n              FROM \"Transactions\" GROUP BY \"SourceId\") AS inTrans\n              ON \"SourceId\" = \"id\"\n         LEFT OUTER JOIN\n         (SELECT \"TargetId\", sum(\"amount\") AS outBal\n              FROM \"Transactions\" GROUP BY \"TargetId\") AS outTrans\n              ON \"TargetId\" = \"id\"\n         WHERE \"id\" = :account_id;\n\nSomething along those lines.\n\nThe reason why you don't store account balance directly is that by adding it up you guarantee the validity of the database at any point in time, with as few operations as possible when updating the content. In general you want your operations to modify the database to be as simple as possible, while extraction can be complex, because if extraction fails halfway through it doesn't really matter, but if insertion fails then the database is invalid and severely messed up.\n\n       \n        ", "id": "e5d1ubn", "replies": [{"body": "Thanks, that makes total sense and it didn't occur to me to think like that.  This is my first venture in to anything SQL (and flask) so I'll prob stick with a python function, really appreciate your help.", "id": "e5d1yww", "replies": []}]}]}]}], "title": "SQLAlchemy question"}