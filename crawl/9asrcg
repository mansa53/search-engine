{"url": "https://www.reddit.com/r/learnprogramming/comments/9asrcg/im_learning_how_to_program_what_else_can_i_learn/", "text": "I feel like my biggest issue is I'm too scattered. I hear about something new I should be learning and put off what I started. I'm going through a couple of programming books to learn Python and Java. \n\nI've though about starting a book on Git. I hear version control is really important for entry jobs.\n\nWhat would you recommend for essential skills that will help me get that first job developing? I know projects seem essential for applying. \n\nWhere I am from there are a lot of java developer roles that open so that's why I'm choosing to learn it first. Thanks in advance!", "score": 15, "comments": [{"body": "Kind of depends on your situation. Full time college kids learn multiple things at once but they have all/most of the day and also have most of the material curated for them. If you're on your own, with a job to hold down, then you need to be way more pragmatic. \n\nDon't jump around. If you're passionate you'll be in the field for decades so you'll have plenty of time to learn SO LONG AS YOU DON\"T KEEP STARTING OVER. And you need to start over whenever you don't focus the first time around. \n\nDrop Python, focus on Java. Use GitHub as you work. The basic git init, add, commit, push, pull are enough to get you through 99% of all version control work you'll do until you start working with a team. Learn some more when you need it. It's not like you'll ever be perfectly prepared for a role anyway, no one ever is, so only learn those accompanying skills when you need them. Don't chase rabbits down rabbit holes. ", "id": "e4xtv9w", "replies": [{"body": "Sounds like solid advice. I'll start focus more on java so I can get there faster. I do IT support right now and it is miserable. The only redeeming part is I don't take work home so I have time to do my own thing. I just need to get out and do something I enjoy. Thank you again!", "id": "e4yektj", "replies": []}]}, {"body": ">my biggest issue is I'm too scattered. I hear about something new I should be learning and put off what I started\n\nSo stop that. You've identified the problem, now just stop the behavior.\n\n>What would you recommend for essential skills that will help me get that first job developing\n\nProgramming. Not joking. All the soft skills, all the periphery skills...none of that means anything if you're not a good programmer. If you can, learn source control while working towards learning programming, but if anything should be sacrificed, it's certainly not the core programming skills. ", "id": "e4xt1lj", "replies": [{"body": "It's a problem I've dealt with for a while so I appreciate hearing I just need to address it before I get anywhere. I've got some solid material from other commenters and books I'm reading so I think with more focus I can do it.", "id": "e4yeqp1", "replies": [{"body": "I have the same problem and have found that creating specific goals with a sequence of steps to be helpful. ", "id": "e4yfr9h", "replies": [{"body": "I feel like that is the nice thing about a book is I could say I want to finish it this year and break down that time with chapters and my own homework. Then a project would be good too. That's really what I need to do once I get a little more experience.", "id": "e4zs2x0", "replies": []}]}]}]}, {"body": "Get the basics of programming down. Once you start an actual project, worry about version control. \n\n\nIt doesn't take long to learn the basics of git, it's just that often the guides go into a lot more than you need, seethis comment for a \"what you need to know\" minimal list. /r/learnprogramming/comments/88bl5o/z/dwjd8t1\n\nBut the other commentor is right, get the basics of programming down first. It's much easier to learn these tools when you actually know what problems (from experience) they're actually addressing. ", "id": "e4xtabb", "replies": [{"body": "Awesome. I appreciate the response. I'll bookmark that to read. I feel like having a good track of stuff to go through will help me focus and achieve my goals. Thanks again!", "id": "e4yeoi4", "replies": []}]}, {"body": "If you're focused on Java:\n\n\u200b\n\n1. Yes, git is very very important. Know how to commit, push, pull, resolve merge conflicts and what the pull request/code review flow looks like\n2. Spring MVC, and Spring IOC. If you can stand up an Apache Tomcat Server with these technologies reading and displaying some kind of data on a webpage from a MySQL database, on your own, if I were interviewing you for an entry level Java web position I'd hire you.", "id": "e4xun9v", "replies": [{"body": "Awesome! I'll make a note of that and get learning. Do you have any recommendations for learning MySQL? I've looking up stuff in the past but everything seems really classroom based.", "id": "e4yeg65", "replies": []}]}, {"body": "[deleted]", "id": "e4yjw8v", "replies": [{"body": "Okay. I think I might have the same idea with the book \"The Object-Oriented Thought Process, 4thE\" It's supposed to teach you how to think in a programming mindset and understand things conceptually while only showing syntax to illustrate points. I also saw that site www.teachyourselfcs.com and it has a similar book for programming that uses Lisp I believe.", "id": "e4zsys9", "replies": []}]}, {"body": "Learn a framework that supports the programming language of your choice. ", "id": "e4y7amb", "replies": [{"body": "Would it be worth looking and seeing if current open positions have frameworks listed in the job descriptions to see if one might be more valuable? Or is a framework like a programming language where once you learn one it is easier to learn others?", "id": "e4yee0s", "replies": [{"body": "Learning a framework is a great deal of investment. \nEspecially if it will be your first. \nThere are lots of patterns and concepts to learn. \nYes some frameworks share these. \nBut each has it\u2019s own caveats. \nYes take your job market into consideration;\nIt may be risky to learn/invest in a framework/technology that isn\u2019t common in your market/location. \n", "id": "e4yf808", "replies": [{"body": "Got you. Okay. I will definitely look around and see what works. I think I'm going to look at places that are known to be good to employees and then look under those job descriptions. Maybe land a job somewhere nice which a lot of jobs would be better than where I am currently.", "id": "e4zs6kl", "replies": []}]}]}]}, {"body": "I would focus on just learning your first language and building something in it. Don't worry about losing out by not using the most popular or newest technology because after you learn one language learning another is incredibly easy.\n\nAs for learning Git I have a thorough YouTube video that covers the basics of Git you need to get started. https://youtu.be/IHaTbJPdB-s", "id": "e4y9cad", "replies": [{"body": "Thanks for the advice! Throwing that in a playlist right now!", "id": "e4yebxb", "replies": []}]}], "title": "I'm learning how to program. What else can I learn at the same time to maximize my skills and become a software developer?"}