{"url": "https://www.reddit.com/r/learnprogramming/comments/9bxm8i/can_someone_explain_this_if_statement_for/", "text": "if(!nums[i + 1] || nums[i + 1] - nums[i] !== 1){\n\n...\n}", "score": 1, "comments": [{"body": "Okay, let's break this up piece by piece:\n\n    !nums[i+1]\n\nThis is saying if the (i+1)th element of nums is not true, then this statement is true.  Javascript elements are \"truthy\" - that is, unless they are defined to be false, zero or null, they are true.  So, 1 is true, \"test\" is true, but 0 is false.\n\n    nums[i + 1] - nums[i] !== 1\n\nThis is saying that if nums[i + 1] - nums [i] is not exactly 1, then the statement is true.  That is, if the (i + 1)'th element minus the i'th element of nums are not exactly 1, then return true.\n\n    ||\n\nThis is an OR.  Let's say you had the statement (A || B).  This is saying that any of A or B are true, then the ENTIRE statement is true.  It is only false if A AND B are both false.\n\nThus, the overall statement of \n\n    if(!nums[i + 1] || nums[i + 1] - nums[i] !== 1){\n        //...\n    }\n\nis saying that if nums[i+1] is false (in this context, it would probably mean if nums[i+1] is 0) OR nums[i+1] - nums[i] is not equal to 1, then the if statement is true and executes whatever is in its block.", "id": "e56ikgl", "replies": [{"body": "So JavaScript reads 1 as a true Boolean and 0 as a false brueoolean?", "id": "e56iyvd", "replies": [{"body": "JS reads any number that isn't 0 as true if you try to use them in a truth statement.  This is a \"truthy\" property (search it up).\n\nSo something like \n\n    if(0) { //... }\n    else if (2) { //... }\n\nis the same as \n\n    if(false) { //... }\n    else(true) { //... }\n", "id": "e56jihc", "replies": [{"body": "Weird. I was confused because I thought he was comparing integers instead of books for a second. ", "id": "e56joay", "replies": []}]}]}]}, {"body": "if NOT numsArray position i+1 OR (numsArray position i+1 MINUS nums position i DOES NOT EQUAL 1)\n\nOr better yet\n\nif(nums[i+1] evaluates to null or undefined OR number in nums[i+1] minus number in nums[i] DOES NOT EQUAL 1)", "id": "e56idjo", "replies": []}, {"body": "! means \"not\"\n\n|| means \"or\"\n\n!== means not equals (!= means the same, but !== will check the types match exactly - see https://stackoverflow.com/questions/8616483/javascript-comparison-operators-vs for a much better explaination)\n\n\n\nIt might be easier to read it as\n\n    if(\n         ( nums[i + 1] NOT TRUE )\n           OR \n        ( nums[i + 1] - nums[i] NOT EXACTLY EQUAL 1 )\n        ){\n    ...\n     }", "id": "e56j0lx", "replies": []}, {"body": "Everyone else is literally translating the condition into English. Here's what the code is actually trying to do:\n\nThe coder wants to make sure the diff between `nums[i+1]` and `nums[i]` is not equal to 1 before executing the code in the if statement.\n\nThis code (I assume) is in a loop. So the coder wants to make sure that the `i+1` element actually exists before trying to access it. This is what the `!nums[i+1]` is doing. The second part of the OR statement only gets executed if the first part is false. So if `!nums[i+1]` is false, or in other words if `nums[i+1]` is truthy, then we evaluate the second part.\n", "id": "e56qa06", "replies": []}], "title": "Can someone explain this if statement for me?[Javascript]"}