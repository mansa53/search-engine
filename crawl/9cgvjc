{"url": "https://www.reddit.com/r/learnprogramming/comments/9cgvjc/struggling_with_oo_software_design_how_to_improve/", "text": "I'm currently a cs senior. Currently with projects I feel pretty comfortable diving into coding, without planning, and achieving a result. With c, I can also do some design beforehand and end up with a clean result.\n\nI recently started a smallish (5-10k lines of code) project in python - and with it, I'm trying to follow industry practices to the best of my ability- both for resume material, and so I can get more used to that kind of thinking.\n\n\u200b\n\nThe issue is, it seems impossibly difficult. Like, I'm constantly worrying if my classes should actually resemble intro-to-javaish type models of physical object, using inheritance, or if theres some more professional way to do things. Or whether or not I'm violating dry by having classes that represent the same thing, but are in different areas of the codebases following different roles - should they be brought together, creating a nasty cross reference web? Or whether or not a method belongs in one class where it might theoretically fit better, or another where it realistically fits better.\n\nI'll spend so much time trying to figure this stuff out, I just end up getting overwhelmed and making no progress. This doesn't feel like a lack of knowledge regarding design principles, instead it feels like theres a lot of conflicting/incomparable information.\n\n\u200b\n\nAny advice?\n\nAlso do any codebase design commentaries exist, where people look at the structure of a codebase? Like starting with where it started, and the decisions they made along the way to end up where they did with it.\n\nThanks\n\n\u200b", "score": 1, "comments": [{"body": "You're never going to have a perfect sollution.\n\nIt's good to think about the things you list - but if you keep thinking about it too much, you're never going to get anything done.\n\nPick what seems like a good way of doing it, and do it. \n\nEven after decades of experience it's still the same. You just have more experience to draw ideas from.\n\n-----\n\nTo elaborate a bit more on this: software changes. Even if you pick a perfect solution today, it's likely to no longer be a perfect solution next week. In most real projects you get new requirements, new features, things need to be changed... etc. \n\nYou can never predict these up front. As such, if you have multiple ideas on how to do something, the simplest way is often the best. Simple code is easier to maintain and change. And it's almost guaranteed to change.\n", "id": "e5ao7lw", "replies": []}, {"body": ">having classes that represent the same thing, but are in different areas\n\nCould you sketch an example of that happening?", "id": "e5alviw", "replies": [{"body": "not the best example, but say a web browser. A possible implementation  would have the renderer in a different section than the page fetcher (clumsy naming) - possibly a complete different project. They both have to deal with a webpage object, but is there any reason to have the webpage class used by the content fetcher be somehow linked to the webpage class used by the renderer. In theory yeah, but it just seems like you'll be including parts from a codebase that should be isolated from the other.\n\n\u200b", "id": "e5anazo", "replies": [{"body": "I can easily imagine that content fetching and rendering need to interact. The renderer does not wait for all content to be available. So you need one webpage object for which content & visual routines are both defined.\n\nSorry, I know nothing about web pages. Maybe someone else can say more about your example.", "id": "e5aphb9", "replies": []}]}]}, {"body": "> I'll spend so much time trying to figure this stuff out, I just end up getting overwhelmed and making no progress.\n\nThis is the main issue with OOP, I suggest [this video](https://www.youtube.com/watch?v=QM1iUe6IofM), not to bash OOP, but to show you that these seemly nebulous issues (\"Should a message send() itself?\" \"Should a receiver receive() messages?\" \"Should there be MessageSender to deal with this?\") are inherent in OOP and there's no general answer. You need to look at your project and figure out things contextually, you can't know everything right from the start, so be ready to tear down walls all the time and not spend so much time trying to pre-plan everything.\n\nEDIT: If you don't want to watch it all, jump to [18:13] (https://youtu.be/QM1iUe6IofM?t=1093)", "id": "e5ar9kc", "replies": [{"body": "I enjoyed the video, thanks.", "id": "e5atx0h", "replies": []}]}], "title": "struggling with oo software design - how to improve?"}