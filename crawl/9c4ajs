{"url": "https://www.reddit.com/r/learnprogramming/comments/9c4ajs/where_is_the_programming_world_heading/", "text": "I have experience in software engineering for about 5+ years. It\u2019s not much but the deeper I look into, future for software engineers who try to make a living on their own or as a small team seems a little tough. Any product or piece of software is expected to integrate things like block chain and AI/ machine learning. Which cannot be handled by a smaller company.  Software development seems to be moving towards a business for large corporates. \n\nSorry about my language, English is not my tongue.", "score": 0, "comments": [{"body": "\\>  Any product or piece of software is expected to integrate things like block chain and AI/ machine learning. Which cannot be handled by a  smaller company\n\nWhat makes you think that? You can write a block chain in 100 lines of code. Now making it properly distributed etc will take longer but it's not like it's some sort of black magic, source code is freely available. Although frankly I don't really see that many uses for it. It's needed if you really don't want any central server. But most of the time you DO. As far as I am concerned in fact the most natural decisions to consider blockchain ARE for smaller companies since they could use it to greatly decrease their own costs. In the same fashion that Spotify originally used p2p everywhere since they couldn't afford a sufficient infrastructure. NOW they are big so they no longer need it. \n\nWhereas word \"AI\" is so bloated nowadays plus not everything requires you to have a PhD. Real life example - we needed a system that automatically assigned tickets/emails to correct employees. It had to take into account email's language and it's subject. Basic Naive Bayes (which is an example of \"AI algorithm\") got us 85% accuracy after feeding it 100 mails and doing some basic cleaning on input data (ignoring words that are too short, removing all special characters and whatnot). You don't need Keras + Tehsorflow + Deep Learning for this (and heck, you likely wouldn't even have a big enough dataset to utilize them in such a space).\n\nBut even if you needed such tools it's NOT black magic and it can be learnt, you have plenty of books and courses for it, often available for free (eg. Coursera's Andrew Ng is a really good one). Heck, you have master degree thesis topics nowadays (and let's be fair - this means it's someone still barely ready for real life coding) that use fairly sophisticated neural networks.\n\nAs for smaller companies - numbers don't agree with you. Eg. just look at how many startups were created in the past few years:\n\n[http://fortune.com/2017/02/22/startups-2017-challenger/](http://fortune.com/2017/02/22/startups-2017-challenger/)\n\nMany of them will obviously need applications - be it for their hardware, CRM integration, websites etc. MSP sector definitely exists, you would be surprised on just how many smaller (sub 100 employees) companies do need custom coding.", "id": "e57xezj", "replies": []}, {"body": "Hmm, IMO, most (business-related) programs are actually just CRUD wrappers. The kind of thing where it's monotonous but someone's gotta write the program to fit some niche use case that the user needs.", "id": "e57vohd", "replies": []}, {"body": "Android owns roughly 80% of the mobile market worldwide, and it's running on a Linux kernel. Most (personal/small business) servers, smart appliances, etc run on Linux too. That's just one example of ubiquitous and formidable open source software - meaning it isn't, and can never be owned by corporations, and will always be community driven.\n\nVideo games, entertainment software in general, tend to be monumental stacks of libraries and wrappers mixed with highly performant custom code, but nowadays most of that is nicely abstracted behind a game engine for you, rendering your job just making the game and not worrying about hardware and resources. No reason for corporatization here, though big AAA games will always warrant hundreds of engineers (which is still a tiny number when compared to big software corporations).\n\nThere are other examples too, but I hope I convinced you that not all software development is \"heading towards corporate\".", "id": "e57wofk", "replies": []}, {"body": "Blockchain and AI are fads in my opinion. In 5 years it will be something else that takes the spotlight. The issue with both of those are that they are very limited in applications. While AI potentially has a lot of applications, most of those applications don't actually require any sort of AI. They can be solved with other, much older techniques.\n\nAs for blockchain...............It's just stupid. I can only think of some very niche applications and even for those, other techniques would probably be better.\n\n&#x200B;\n\nAs for the future of programming, I think it's going the exact opposite way. Smaller companies will flourish while larger ones will struggle. There is less and less demand for standard packages in software. Almost every client wants something that customised and tailor-made specifically for them. This requires a lot of flexibility from a programming team. Small companies have that flexibility which allows them to satisfy the demand of clients whereas large companies will be too slow to adapt to ever-changing demands.", "id": "e58cwqy", "replies": []}], "title": "Where is the programming world heading?"}