{"url": "https://www.reddit.com/r/learnprogramming/comments/9ay7tp/still_early_into_college_which_programming/", "text": "I'm looking to make myself useful somewhat broadly. I know that I for sure want to take C# which should allow for software development, hobbyist game development, and web development. I was fairly certain I wanted to learn PHP next to that (mostly for WordPress development and/or custom database applications) but now I'm not sure if I should go for PHP or Java? I should have the option to take both if that's a good idea. I also plan to take C++ as an elective, unless anyone has a good argument for something better.\n\nAny input toward this is useful. Thanks.", "score": 1, "comments": [{"body": "Java is a good start", "id": "e4ywjai", "replies": [{"body": "Doing C# and Java seems a bit redundant, would benefit from something in a different paradigm like C for procedural and Scala / Haskell for functional ", "id": "e4yx2t1", "replies": []}, {"body": "Is that something I should try to *master* (Java I, Java II, and Java III)?", "id": "e4yxd0v", "replies": [{"body": "Java gives you a place in mobile application development. \n\n", "id": "e4yxheo", "replies": [{"body": "True. I intended to take another elective in mobile app development anyway, so if it strengthens those concepts I like it.", "id": "e4yxoa3", "replies": [{"body": "Also learn Swift while you are at it, once you have a Mobile App background. It expands your horizons quite a bit! I\u2019m not saying LEARN IT NOW, but master Java and get comfy with App Development in Java first.", "id": "e4yy1hf", "replies": [{"body": "That'll have to be after school, anyway. I don't think it's part of their curriculum. Thanks for the suggestion!", "id": "e4z0vfx", "replies": [{"body": "I\u2019ve been told by devs to \u201cLearn Swift! You\u2019ll be worth your weight in Gold!\u201d (Knowing that I am comfortable with Java already).", "id": "e4z34cj", "replies": []}]}]}]}]}, {"body": "One thing you should understand now: you're not going to *master* anything in school. Mastering a programming language is something you do over a career, over *years* of practical use.", "id": "e4zm835", "replies": [{"body": "I guess what I meant by master is taking only a tier 1 class versus taking the tier 1, tier 2, and tier 3 classes available for a given language. I'll consider claiming mastery after many years of experience... But yes, I know better. ", "id": "e4znc0x", "replies": []}]}]}]}, {"body": "Java is very very widely used and would be a great language. C# is also a nice language and is very similar to Java so learning both at the same time maybe a benefit. If you're looking to augment that with something, look into something like R or Python which are favorites for \"big data\" applications.\n\nI see you are early in your college career. I would caution you to not attempt to learn too many things at the same time. Languages are great but make sure above all though that you emphasize learning patterns that can be applied across languages.", "id": "e4z1uuj", "replies": [{"body": "For sure. The school I'm attending (online) doesn't offer Python but it's been on my radar for years. I'll definitely be learning it after school. Thanks for the suggestion.", "id": "e4z5ugp", "replies": [{"body": "If you also have access to R, look at that. It's pretty convenient for evaluating and visualizing data and even if you'll never use it, a good way of generating nice graphs for your theses.", "id": "e4z660u", "replies": []}]}]}, {"body": "Depends on what you plan to develop. For a good overall educational experience, try learning at least two programming paradigms. Java is great because it is object-oriented, but also has functional aspects.", "id": "e50460j", "replies": []}, {"body": "I'm going to be a bit controversial here and suggest something other than the languages you have listed. You see, all the languages you have listed are pretty similar to each other. If you want to learn something new, and become a more well-rounded programmer, you should try something different after you have learned one of the above. I also think the following languages are of higher quality and more interesting that all the ones you have listed. So here they are (I might have forgotten some that should be here):\n\nLisp (Scheme, Racket, Common Lisp or Clojure), Haskell, Smalltalk (or the variant Pharo), Forth and Erlang\n\nMy favorite is Lisp (the Clojure dialect), but the others are fun and interesting as well. These languages are not as popular as the ones you have listed, so if you just want a job they perhaps not the best choice, although in the long run they might be, because you will learn more from them. If you are truly interested in programming you should take a look at them.", "id": "e50t8ph", "replies": [{"body": "I get what you're saying, but none of those are offered as part of the curriculum at the college I'm attending (that I'm aware of, I'll find out). I do still appreciate the advice and can look into it after I have graduated and have the free time to learn it. Thank you.", "id": "e518d8z", "replies": []}]}], "title": "Still early into college, which programming languages should I take?"}