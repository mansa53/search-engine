{"url": "https://www.reddit.com/r/learnprogramming/comments/9aw3h7/c_what_programs_should_i_be_able_to_complete/", "text": "I'm about to enter my second year of university within a month and i feel like i don't really know much if anything besides the very basic stuff, as i have a bit of time left before i start my second year of university and start some probably intermediate c++, what programs should i be able to code?  \n", "score": 2, "comments": [{"body": "I'm a game engineer so I'll be able to best cook up examples along similar lines. Some boring but useful and vital stuff:\n\n* Implement merge sort\n\n* Implement a doubly Linked List\n\n* Implement a binary tree and search\n\n* Console-based Hangman game\n\nMore interesting, compound problems:\n\n* Implement Djikstra's shortest path algorithm\n\n* Implement weighted random selection / combination\n\n* Implement a geometric `Vector3D` data structure that supports vector algebra\n\n* Implement a behaviour tree / state machine\n\n* Console based Tic Tac Toe\n\n* Console based Battleships", "id": "e4ylh54", "replies": [{"body": "I'm fairly sure we've not covered any of that yet. Is this what i should expect in my next year with c++ or is this what i should look to do now before my year starts?", "id": "e4zdmwt", "replies": [{"body": "I don't know what your specific case will be, but these are general intermediate topics that most undergrads would at least be able to try to tackle, even if incorrectly. If they seem too advanced for you right now, how familiar are you with pointers, memory allocation, constructors/destructors, etc? What C++ concepts are you confident with? What's the most complex program you can write right now?", "id": "e4zelng", "replies": [{"body": "I'm not really confident in anything other than the absolute basic stuff, this would be User input/output, using Ints, floats, strings, If statements and probably a couple other things i can't remember right now. Some things i am not too confident on are Lists, Classes and about everything else i've not mentioned. ", "id": "e4zhhqf", "replies": [{"body": "Go through the first five chapters [here](https://www.learncpp.com/): they will solidify the foundation you are feeling so unsure of. Chapter 6 introduces pointers and memory and Chapter 7 deals with functions. After you've done all this, the first set of problems in my original comment should be doable by you. Chapter 8 onwards deals with classes and the fundamentals of OOP, after which you should be able to tackle the second set of problems too.", "id": "e4zii14", "replies": [{"body": "Thanks a lot, i'll be sure to go through it.", "id": "e4zvhx7", "replies": []}]}]}]}]}]}, {"body": "Did you take a course did you take already in C++? What did you learn in that course? Could you use those skills to make some programs? What do you want to make?\n", "id": "e4yl8jd", "replies": [{"body": "My course was game development with c++, we made a snake game but it felt like it was over my head for the most part. I don't really know what i want to make right now because i feel overwhelmed, the part of programming i enjoy the most is seeing how the project comes together no matter how big or small, so i'm looking for things to create.", "id": "e4zdjcd", "replies": [{"body": "For C++ I think the best way to learn is with a good book and by doing the exercises and seeing what works best. For example C++ Primer by Lippman et al is a decent book if you already have some experience and want to sharpen your skills. There are many others, some which focus on game programming, too. But probably if you focus on gaining C++ skill first, then you'll be able to approach game programming with more focus later. For example, suppose you read a book later about game programming that explains game programming well but doesn't explain C++ well at all, or perhaps uses bad C++ practices. Well, that's OK if you already are a decent C++ programmer; you can just \"correct\" their C++ as you go, and focus on the game programming parts.\n", "id": "e4zom4l", "replies": [{"body": "We did have a short introduction to c++ programming but i don't think it was enough for someone who wasn't programming a lot before university, i think you're right about focusing on just c++ for now and then focus more on the game aspect when my projects start in a couple months.", "id": "e4zw7rg", "replies": []}]}]}]}, {"body": "Really up to you, and that's the great thing about programming. I have sped up my learning by checking out udmy courses.\n\nI learn well with a video instructor. $10 for a class is cheaper and more effective than a book for me most times. \n\nEnd of my Junior year and just now starting to learn Interfaces.\n\nEveryone is on a different path same journey.  \nI think if you should understand what a constructor is and encapsulation is. Learn what JSON & XML is and how to use an API. \n", "id": "e4yl994", "replies": [{"body": "Thanks, i know a bit about JSONs but i've never covered XML so i'll give that a ago.", "id": "e4zd89t", "replies": []}]}], "title": "C++, What programs should i be able to complete after finishing my first year of university?"}