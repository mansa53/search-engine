{"url": "https://www.reddit.com/r/learnprogramming/comments/9az8jg/iterating_a_list_and_only_returning_those_items/", "text": "New to python . Have checked couple of threads but can't figure it out .\n\nThere's a class called 'Menu' in which 4 different menus have been defined. Each menu has their own specific time range for which they are available. \n\nThere's a second class called 'Franchise'. Inside this class there is a method defined called 'Available menus' that consists of a 'for' loop inside it also commented as # Problem Loop. The basic idea is that it should only return those 'menus' that are available at that time .\n\n    from datetime import time,datetime\n    class Menu(object):\n      def __init__(self,name,items,start_time,end_time):\n        self.name = name\n        self.items = items\n        self.start_time = start_time\n        self.end_time = end_time\n      def __repr__(self):\n        return (\"Name of menu %s and is available from %d to %d\" % (self.name,self.start_time,self.end_time))  \n     \n      def calculate_bill(self,purchased_items):\n        self.purchased_items = purchased_items\n        calculate_bill = 0\n        \n        for i in purchased_items :\n          calculate_bill += self.items[i]\n        return calculate_bill \n          \n    items = { 'pancakes':7.50,'waffles':9.00,'burger':11.00,'home fries':4.50,'coffee':1.50,'espresso':3.00,'tea':1.00,'mimosa':10.50,'orange juice':3.50}\n    brunch = Menu('Brunch',items,time(hour=11),time(hour=16))   \n    \n    items = { 'salumeria plate':8.00,'salad and breadsticks(serves 2, no refills)':14.00,'pizza with quattro formaggi':9.00,'duck ragu':17.50,'mushroom ravioli(vegan)':13.50,'coffee':1.50,'espresso':3.00,}\n    early_bird = Menu('Early Bird',items,time(hour=15),time(hour=18))\n    \n    items = { 'crostini with eggplant caponata':13.00,'ceaser salad':16.00,'pizza with quattro formaggi':11.00,'duck ragu':19.50,'mushroom ravioli(vegan)':13.50,'coffee':2.00,'espresso':3.00}\n    dinner = Menu('Dinner',items,time(hour=17),time(hour=23))\n    \n    items = {'chicken nuggets':6.50,'fusilli with wild mushrooms':12.00,'apple juice':3.00}\n    kids = Menu('Kids',items,time(hour=11),time(hour=21))\n    \n    class Franchise(object):\n      def __init__(self,address,menus):\n        self.address = address\n        self.menus = menus    \n      def __repr__(self):\n        return (\"Address: %s \" % (self.address))\n      def available_menus(self,time):                 # Available Menus\n        self.time = time\n        for i in self.menus:                          # Problem Loop\n          if time in range(i.start_time,i.end_time):\n            return i\n        \n    flagship_store = Franchise('1232 West End Road',[brunch,early_bird,kids,dinner])\n    new_installment = Franchise('12 East Mulberry Street',[brunch,early_bird,kids,dinner])\n    \n    print(flagship_store.available_menus(12))          # Print command 1\n    print(flagship_store.available_menus(5))           # Print command 2\n\nFor eg. the print command above commented as '#Print command 1' should only return 'brunch' and 'kids' menu as only those 2 are available at 12 noon. Similarly the next '# Print command 2' should only return 'kids' , 'early bird' and 'dinner' menus as only those are available at 5 PM .\n\nOutput :\n\n    Traceback (most recent call last):\n      File \"script.py\", line 51, in <module>\n        print(flagship_store.available_menus(12))\n      File \"script.py\", line 45, in available_menus\n        if time in range(i.start_time,i.end_time):\n    TypeError: 'datetime.time' object cannot be interpreted as an integer\n\n&#x200B;", "score": 1, "comments": [{"body": "There are two things wrong:\n\n1. You cannot use `in range` with `dateTime` types as the error message tells you. See: https://stackoverflow.com/questions/4695609/checking-date-against-date-range-in-python\n2. You will be returning too early. You will want to create a new List with only the applicable items and then return the list.", "id": "e4z51km", "replies": [{"body": "Removed the *in range* and replaced it with <= , >= but it now says \"unorderable types: datetime.time() <= int()\" ", "id": "e4z6nm8", "replies": []}]}], "title": "Iterating a LIST and only returning those items that are in a specific TIME range"}