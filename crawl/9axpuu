{"url": "https://www.reddit.com/r/learnprogramming/comments/9axpuu/case_update_else_insert_oracle_sql_developer/", "text": "Hey guys,\n\nany of you could help me with one thing in SQL Developer?  \nI'm learning some basics and I stuggle with one specific condition.\n\nHow should I wite down update for my base? \n\nI have 2 tables\n\n&#x200B;\n\n**1st**, named **work\\_groups** have this data:\n\n|worker|type\\_of\\_employment|group\\_family|LAST\\_UPDATE\\_ID|\n|:-|:-|:-|:-|\n|JSMITH|outsourcing|IT|DBADMIN|\n|STAYLOR|contract|HQ|DBADMIN|\n\n  \n**2nd** named **group\\_description** have bit more details based on **type\\_of\\_employment** and **group\\_family** from table **no.1:**\n\n|type\\_of\\_employment|group\\_family|inside\\_group|\n|:-|:-|:-|\n|outsourcing|IT|SYSADMIN|\n|contract|HQ|ACCOUNTANT|\n\n&#x200B;\n\nBased on this data I tried to make condition:  \ninsert into **work\\_groups**   \nvalues (JSMITH, outsourcing, (select **group\\_family** from **group\\_description** where i**nside\\_group** = '**SYSADMIN**'), user)\n\nand now the hardest thing\n\nif **group\\_description** doesn't have **inside\\_group** names **SYSADMIN** then insert:\n\ninsert into **group\\_description**  \nvalues (outsourcing, IT, SYSADMIN)\n\n&#x200B;\n\nAny of you could help me with this one?   \nI heard that I could use MERGE but my permissions doesn't include it. ", "score": 1, "comments": [{"body": "I'd probably start with normalizing the data a little more. Remove the employment/family columns from work\\_groups, and replace them with a foreign key into group\\_description.\n\n&#x200B;\n\nThen decide if you really need this auto-insert, or if your descriptions are static enough you can just consider them apriori data that you update by hand when new groups are added/removed.\n\n&#x200B;\n\nIf you do definitely need it, then you can make a stored procedure to handle the logic. The user would pass in (worker, employement\\_type, group\\_family, inside\\_group), and the procedure would:\n\n* Check if a matching group\\_description exists.\n* If yes, grab it's ID and create a new work\\_group entry with the (worker, group\\_description.ID foreign key, user updated).\n* If no, insert one with the 3 passed in values and grab the new group\\_description.ID, then perform the same work\\_group insert as above.\n* Return the new work\\_group.ID for the created record, or an error if the stored procedure throws one.\n\nNot sure if that's the best way, maybe there's some SQL voodoo that lets you do it in a single statement but I feel like there's enough logic there that doing it as a procedure would feel way cleaner.\n\n&#x200B;\n\nHopefully that gives you some ideas at least. As someone else who has to suffer through an Oracle DB frequently at work, good luck and godspeed.", "id": "e4ywbc6", "replies": [{"body": "unfortunately I can't change/normalize this data. \n\nI know that I need procedure for it but problem is that I can't really figure out how to write it.", "id": "e4yy13f", "replies": []}]}], "title": "case update else insert Oracle SQL Developer"}