{"url": "https://www.reddit.com/r/learnprogramming/comments/9b62ku/students_who_have_to_write_a_program_over_the/", "text": "One of my pre req courses required us to come up with a program and add to it with each week as we learned more and more. Now that I'm a year past that I have 2 courses requiring the same thing, although they are more in depth and one is with a group. \n\n\nWhen I took my intro class I struggled to come up with ideas and brainstorm, and eventually settled on writing a budget tracking program. It was fairly weak in hindsight but I still have it and intend to improve it and add a GUI to it during this semester.\n\nBrainstorming in general and coming up with ideas for programs to write seemed tough to me at the time, and it still does, and that is my reason for posting this. As a programmer I felt I wanted to come up with something original, but when I accepted how new I was it made much more sense to get an idea, make a basic model or prototype, and then continue adding to it and changing it to be more efficient. \n\n\nIf anyone sees this as me fishing for homework ideas, don't. I have my own ideas and have been in the SWE program, enough that I have a group of friends for something like that. When I first started, however, I found it tough to come up with something that felt worthwhile. Discussion helped me and many of my classmates, and that is the point of this post.", "score": 207, "comments": [{"body": "I made a password keeper(think last pass) it taught me a lot. \n\n\nObviously I learned a lot about the language that I was using. I chose Ruby. It forced me to learn about encryption and proper security practices. Once I had the main foundation of the program completed, I started adding features. \n\n\nFor instance I wanted to be able to have it open up the url and put the username and password into the correct boxes. So to do that I had to learn a lot about capybara, nokogiri, web scraping and parsing. \n\n\nI wanted it to generate random secure passwords and that took a while to figure out. \n\n\nWithin a month I went from basically just using ruby to save login info in a text file to a full blown password keeper that I actually like and trust enough to use myself. \n\n\nIt was great for a starter project and I learned so much. ", "id": "e50tt3g", "replies": [{"body": "I'm having to learn how to save user logins in a database for a website. Not a real website, just for learning. At first I was like \"this is gonna be easy\" then I started asking the question \"how could someone break this?\" It is NOT easy making sure all the holes are plugged. Like you said, I have learned A LOT within the past week.", "id": "e51bj1f", "replies": [{"body": "Hands on is a great way to learn. Once you get stuck on something there\u2019s no way in hell youre going to stop until you figure it out. \n\n\nThat\u2019s why I think people can be successful learning on their own. However, there were a lot of really core things that I probably wouldn\u2019t have learned if it wasn\u2019t for school. ", "id": "e51bw5p", "replies": []}]}, {"body": "I am using Ruby for a work project. It's a rather interesting language to use but it can be useful to do any number of things. ", "id": "e50zm8u", "replies": [{"body": "Mind if I ask what kind of project?", "id": "e51l2yf", "replies": [{"body": "I am building a Ruby on Rails app for a health and wellness program that one of the directors wants to do. It features:\n\n* Devise for authentication, \n* several scaffolding (for other models and information to make it a team building exercise), \n* an admin portal to keep track of progress (with Chartkick for reporting), \n* and then uses Thredded for forums and encouraging employee interaction. \n\nThere is a client I am also building with it so the employees don't necessarily have to go through the web infrastructure to log their progress too. Just had a meeting with her today and she's rather excited for the progress that is being made with it. ", "id": "e529uve", "replies": []}]}]}, {"body": "You could share its github link maybe?", "id": "e51acc3", "replies": [{"body": "Unfortunately since it\u2019s for school I can only keep it on a private repository. ", "id": "e51axoi", "replies": [{"body": "By what grounds? Did you sign some kind of an agreement?", "id": "e51exbf", "replies": [{"body": "I think thats the right choice to do until the grade comes through then he can release it. Don't want others to copy his code for a project and get in trouble for plagiarism. Once the term/semester ends tho, he should totally make it public!", "id": "e51fgb0", "replies": []}, {"body": "My teacher doesn\u2019t want us copying each other\u2019s work. ", "id": "e51iyj7", "replies": []}, {"body": "Usually work you do while in school belongs to the school, unless otherwise specified.", "id": "e51osnd", "replies": []}, {"body": "Yeah it's called cheating and getting expelled. What if some jackass found the repo and used some of (if not all) of the repo's code? ", "id": "e51r2mm", "replies": []}]}, {"body": "I'm not trying to persuade you to open source, but really? What's the point if you can't build a portfolio?", "id": "e51eyci", "replies": [{"body": "You get a grade for it. \n That's the point. ", "id": "e51ghjo", "replies": []}, {"body": "For my school, we can use our programs for our portfolio after the semester is over because they change the projects every semester. If it was on a public repository someone could use the code in their project which would be an academic integrity violation and would get both students in trouble. ", "id": "e51h2wq", "replies": [{"body": "Yup this is why. ", "id": "e51iv09", "replies": []}]}]}]}]}, {"body": "If you upgraded it to a multi user system like last pass you can also get into hashing and secure transmission. ", "id": "e517nte", "replies": [{"body": "That\u2019s a great idea. ", "id": "e51l3mb", "replies": []}]}, {"body": "I really like the idea of creating your own personal password manager. I love LastPass, but what happens when they're eventually cracked?", "id": "e51s0w6", "replies": []}]}, {"body": "We had to write a cinema application in Android. But that's doable in any language. \nJust start with connecting your application to a database (maybe think how you database should be structured first). Then make sure people can see all the movies. Then make something so they can see more detail about each movie. Then make something so they can see all the movie times for that movie. Make something to buy tickets. Make something to print or show your ticket on screen.  \n\nI can keep going but you get the idea. It is a very iterative process where you can really start very basic (a list of movies) to a completely functioning cinema application.", "id": "e50wejl", "replies": []}, {"body": "I don't think that's a particularly good or fair assignment - I'm a teacher and there's no way my students could figure out the first week what they might or might not be capable of completing by the end of the course.\n\nAnyhoo, what language are you using? What topics are on the syllabus for the course?  That'll give you a hint as to what's possible. \n\nGood luck!", "id": "e50p4r8", "replies": [{"body": "Most of us enjoyed the project and found it to be a good way to really get us programming and into it. The language was Java, and each week the professor introduced a new concept that we should include in our project. It was an intro level, so while it became challenging it was still manageable. We would turn it in every 3 weeks for a grade, which was harsh, but we were allowed to read his grade and then fix it if for the following week. It only became hard towards the end when some of the concepts just didn't fit, but by then he let us include additional classes that demonstrated our understanding of it in the event that it wouldn't make sense to use.\n\n", "id": "e50pz2c", "replies": [{"body": "Glad to hear it - the professor sounds pretty flexibly.  Glad you got something good out of it!", "id": "e50u0rp", "replies": []}, {"body": "I actually really like this. One of the things my fiance is dealing with in his classes is boring, repetitive assignments with weird stipulations. They're clearly designed to circumvent academic integrity issues, sometimes to the point of being nonsensical. It's unfortunate. While I can see both sides and I understand why this happens, it's so much more fun, engaging, and educational to work through a level-appropriate personal project.", "id": "e51rsl7", "replies": []}]}, {"body": "Unless there was a very strict definition on how much improvement was required and in what way, there are so many ways to abuse this to do very little to no work over over semester. ", "id": "e50x8vd", "replies": [{"body": "For sure. The thing about education is you get out of it what you put into it. So, do it right while you can.", "id": "e50xgwn", "replies": []}]}, {"body": "So as someone who had a similar thing for my intro class I can tell you we had plenty of resources and our professor would tell us if it's too hard for us. And the professor was generally very lenient about grading because he knew this was a lot of the students first time coding. If we couldn't think of one then he told us what to do", "id": "e52kx13", "replies": []}]}, {"body": "In my final year at uni I wrote a very basic web app for five-a-side football with Python (Django) which had to incorporate the use of XMPP to allow for an instant messaging and payment system.\n\nThe payment system didn't work and in the end after numerous hours of trial and error I managed to get the chat working (albeit with the help of some JavaScript libraries which I plugged in).\n\nBiggest lesson I took from it was I tried to bite off far too much. At the very start, simple is better. Note down what your core basic functionality is and make it happen, then start adding on bells and whistles. Good planning and documenting exactly what it is you need is a much better approach than diving in and going for the win by coding it all in one big go. If you've planned it well enough, most of the coding should take care of itself.\n\nI got a decent grade in the end and that was mostly down to the fact the report I wrote was okay, holding my hands up saying I learned I tried to do too much and next time I would do X, Y and Z differently.\n\nBest of luck with your assignment.", "id": "e50x0ms", "replies": [{"body": "What kinda stuff did you include in the report? Im still trying to finish my report right now due friday but struggling on what to write about", "id": "e51a16b", "replies": [{"body": "I began writing a background of the technologies my project used and addressed why my particular solution could be a potential solution to solving said problems in the background findings.\n\nAs is the normal with uni reports, a lot of it was boring references to journals/documentation relevant to the problems I was facing and technologies I used - so a lot of justification, explaining why I picked Django over Flask, for example.\n\nI also wrote about what went well, what I would change next time, and an overall conclusion of my own performance as well as the overall outcome of the project. I went on to write about future scope of routes the project could have taken and why it was relevant to CS as an overall subject.", "id": "e51bift", "replies": [{"body": "Can't even begin to explain how much this helps", "id": "e51blgg", "replies": []}]}]}]}, {"body": "I've made a text based Adventure game that I have added to and refactored many times and learned a lot in the process. I suppose that if I were required to add to it every week, I could just add more areas to the game without really changing any logic.", "id": "e50ycqv", "replies": []}, {"body": "I wrote a game. It was a pretty simple platforms where you run around and jump and stuff. It was a lot of fun to make mostly because I have no artistic talent. I scoured the web for assets until I found enough to make something. I found a walking plant, some asteroids, a caveman, a ninja turtle, and a few other random things. Then, I wrote a small story: you are a caveman from outer space and the fate of the universe lies in your hands! You need to defeat mutated turtles, walking plants, and other things. I certainly recommend doing something similar. So much fun. ", "id": "e50zze0", "replies": []}, {"body": "I've never finished it but I've been trying to create a tv remote program that would essentially function as you'd think it would. I was using a tv class and a remote class but there's so many array lists and different methods to create that I've never gotten around to finishing it", "id": "e515aw3", "replies": []}, {"body": "Make your own version of Zork. ", "id": "e511jkd", "replies": [{"body": "Back in the late 90s a guy I did some work with had taken SMAUG and turned it in to an IRC bot.  Something like a z-machine emulator that people could play over Slack or Discord would be pretty cool.\n\nThough I have a lot of aide projects, my favourite one at the moment is using TensorFlow to teach an AI to play Zelda:LttP.  Foe the way modern CompSci degrees are going to have to go to stay current, that wouldn't be an unreasonable 3rd year project - using TensorFlow or SparkML to play a game.", "id": "e516474", "replies": []}]}, {"body": "Write something others can learn from and contribute to open source. Something along the line of cssgridgarden.com, flexboxfroggy.com, etc... those are super useful for learning and practice ;) ", "id": "e511lr5", "replies": []}, {"body": "Point of sale system that supports variable tax calculations, a UI with manager overrides, temporary sales, receipt tracking, and reporting.\n\nEverything you need to learn about full stack single server line of business programming can be covered in this. ", "id": "e51eia4", "replies": []}, {"body": "one of the soul-crushing portions of my (minimum wage) job is cataloging metadata of newspapers in spreadsheets (stored as a gdoc). they're long and repetitive, and my supervisor thinks they need to be more or less entered by hand. one of my programming aspirations (i'm a beginner) is to automate generating these long repetitive spreadsheets (but still get paid as if i'm taking the time to do it myself lol). i feel like this has a few avenues for me to learn. i think i could just start with splitting and splicing strings properly to generate a table that i can paste into the sheet, then build into writing to the file itself. from there who knows, maybe i'll secretly make my own (terrible) job obsolete... ", "id": "e51h9u6", "replies": [{"body": "I honestly think this is a great mentality to have. I was just having a discussion about this--seeing a need for automation and learning a way to do it out of laziness is suuuuper preferable to being so stubbornly set in a particular workflow even when it's inefficient. There's always a learning curve to disrupting a workflow and I personally think it's a positive quality when people are willing to do that, even if the motivation is laziness lol", "id": "e5234ys", "replies": []}]}, {"body": "I simply think about what app I need or can I create a simple alternative of any famous app. It helps me to read the code of the particular app and  eventually develop something of my own.", "id": "e50v8un", "replies": []}, {"body": "I had a class sort of like this except that we were given what to write over the course of the semester. It was a very intro class. We were making a version of a board game (Pandemic) in python. Eventually got in to some GUI stuff near the end and it was actually a very good teaching method. \n\nMaybe take something you enjoy and make something that models it or helps you enjoy it!", "id": "e50qhn9", "replies": []}, {"body": "I've been thinking of an idea, a 'jump to conclusions' mat.", "id": "e51bsi6", "replies": []}, {"body": "I wrote a platformer game demo. It was in pure Javascript using pixi.js with free assets found on the web. It was only a single level, had no sound, though, I could have easily coded that up.\n\nI chose this because I knew only the very basics of Javascript and I wanted to learn more. It also seemed scoped properly, where it would be a challenge, but attainable if I worked at it regularly.\n\nI created a tiling engine that would build levels based on json files generated by tiled, which made level building super easy, and scalable if I chose to build on the demo.\n\nIn the end, it taught me a lot about Javascript, github, git in general, basic gaming concepts, and using external libraries. Sure, it was buggy and only had the most rudimentary optimization but because it was interesting, I learned a lot. ", "id": "e511hso", "replies": []}, {"body": "I wrote a sudoku solver for my first year project", "id": "e517b9u", "replies": [{"body": "Is that a sudoku solver that just solves a sudoku by trying every option or a sudoku solver that uses logic to solve?\n\nWhat I mean is, imagine if there are only 2 empty spaces left in a sudoku and both of them can accept 1, 2. This sudoku is not unique so it not is not solvable using non-random solutions.", "id": "e517yvq", "replies": [{"body": "If I recall correctly, it used an algorithm that would find a possible solution for a row / column / square and then continue until a solution didn't work, then I'd back up until things did work. It was a horrible, buggy, inefficient project, but it was my first year :) ", "id": "e53o7vi", "replies": []}]}]}, {"body": "I think I'm gonna make a text-adventure game in Python. I like the choose-your-own-adventure mechanics, and language processing is something I wanna learn in the future. I'll probably create a very simple language based on Portuguese because I don't think it'd be wise to implement a full-blown parser right now (I'm in the first semester). I'd justify this in-game by making the player interact with people and creatures with a small vocabulary, like ignorant trolls, enigmatic ghosts, young children and deranged individuals.", "id": "e517lz9", "replies": []}, {"body": "We had to make git for our first project. In ds class. The good thing about that is you can constantly add features. We only had like 3 weeks but still very expandable project. You can start with git functionality but only local then try to improve it by hosting the app somewhere and store the codebase there. Want to make it more secure? Add ssh or password functionality to repos. Possibilities are endless", "id": "e518rho", "replies": []}, {"body": "What I wrote and still love to use is my own home grown quiz software. I can do whatever I want, have it to where if I get something right 4x in a row (for instance) It backlogs it until I reset the counters. Or target it however you want, weight questions higher then others based on correct # of times guessed correctly or incorrectly. I love it. Though I wish I wouldn't have used console for it.", "id": "e511d4c", "replies": []}, {"body": "I\u2019m using Reinforcement learning or possibly deep reinforcement learning, which would require a neural network, to play through a simulation in hopes of understanding human behavior ", "id": "e514i02", "replies": []}, {"body": "Find a genuine need. Something practical.", "id": "e516mzj", "replies": []}, {"body": "For my senior project (13 years ago), I made a music program. I hadn't done much audio programming, so it was a good learning experience. It was also good because it was something that I could continue adding onto. There was an on-screen keyboard, but you could also use the computer keyboard or a MIDI keyboard. Once you \"recorded\", you could export it to a WAV file and add effects.\n\nIt didn't really work great, but I was proud of it.\n\nI had a couple weeks before it was due, so I extended the project and made a website to advertise it. You could download a trial version without certain features, or create a free account and download the full version. There was also a forum and upload section for sharing the recordings.", "id": "e51btol", "replies": []}, {"body": "If we're still discussing ideas, I made a program that would interface with google auth tokens and spreadsheet IDs (in google Sheets) and transform the google sheets spreadsheet that a user account that running my program had the ID token for into a csv. \n\n&#x200B;\n\nI haven't released the finished version or posted it to GitHub yet because I'm trying to figure out how to automate the retrieval of the auth token specifically for the account running it so that there are no privacy breaches when the code is shared.", "id": "e51p9wo", "replies": []}, {"body": "Make an all in one, create a program that can launch different utilities and switch between them.  If you know how to call and break out of functions it's easy to do, and it lets everyone in your group design what they want.  For your solo project you can create utilities as you go without having to worry about them being big enough to be a final project.  ", "id": "e51r5mk", "replies": []}, {"body": "You can look at apps you use and find some app you would want to improve or add some functionality to it ", "id": "e50yb0k", "replies": []}, {"body": "[deleted]", "id": "e50ojw1", "replies": [{"body": "Don't be an ass", "id": "e50oucd", "replies": []}]}], "title": "Students who have to write a program over the semester, what is your idea?"}