{"url": "https://www.reddit.com/r/learnprogramming/comments/9ahrtz/react_how_to_properly_architect_an_application/", "text": "Hello all!\n\nSo I am almost almost complete a very detailed react tutorial series on Udemy but I feel split right now in how I feel about this language and hoping you guys can tell me more about the architecture of react applications for production scale applications.  I now understand components, containers, reducers should be isolated in like their own folders. But what about internal logic, models, helper functions, internationalization and the rest of the critical functionality that I suspect should lay outside of the containers?\n\nI am thinking how I should lay out everything in terms of things like:\n\n1: Internal logic. Like logic that goes above and beyond just displaying elements.\n\n2: Models. Closely tied to internal logic, but like processing behind the scenes should involve models in larger scale applications that need to be manipulated.\n\n3: Helper functions. Such as little functions that may be wanted to be used across all containers or maybe only a few or some containers and some components. \n\n4: Internationalization. So that I can change the strings that show to the user to their language and let my website in production support more languages.\n\n\nSo like how should I handle this with react? I am still very new to front end development and hope that you guys can help illuminate how I should carve a path forward that is acceptable for production systems.\n\nThanks! :3 Have a lovely day!", "score": 1, "comments": [], "title": "[React] How to properly architect an application that can scale for production?"}