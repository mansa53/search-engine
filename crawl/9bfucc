{"url": "https://www.reddit.com/r/learnprogramming/comments/9bfucc/not_really_homework_3d_plotting_in_c/", "text": "Hi there, \n\nI\u2019m working on a simulation that requires me to move around 150 vertices in a 3 dimensional space. I\u2019m currently calculating 3 spatial coordinates, plotting the x-y coordinates on an x-y plane, and then shifting the point down and to the left by a factor of z in order to get a visually correct x-y-z graph using only SFML.\n\nObviously, this is ridiculously over complicated and I was wondering if there was any library or function I could use to graph vertices in a three dimensional coordinate plain more effectively. \n\nThanks so much for your suggestions in advance! ", "score": 1, "comments": [{"body": "OpenGL, and DirectX on desktop applications. WebGL for things on the browser. \n\nAnd of course libraries built on top of those things.", "id": "e52rtd1", "replies": [{"body": "Thanks! I\u2019ll look into it.", "id": "e52s8h8", "replies": []}, {"body": "Follow up question, are you suggesting I script the behavior of the particles in C++ and use OpenGL to model it? Would I have to save the particle data in separate file for OpenGL to access or would it work natively with my code? I\u2019m not super familiar with OpenGL, unfortunately.", "id": "e53kp07", "replies": [{"body": "I haven't used OpenGL since college (a few years ago), but you should be able to pass in a collection of vertices, set up a camera with perspective, and receive a rendering bitmap that can be applied to any 2d canvas. It can all be hard coded into one main function if you like. No need for multiple files.\n\nThe actual rendering takes place in your GPU when you use one of the libraries I suggested (most of the time). ", "id": "e53oq3v", "replies": []}]}]}], "title": "[Not Really Homework] 3D plotting in C++"}