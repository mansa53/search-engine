{"url": "https://www.reddit.com/r/learnprogramming/comments/9bratz/store_as_string_enum_or_a_another_table_in_sql/", "text": "Recently i faced a dilemma regarding what datatype to store in database.\n\n\u200bMy table has new field \"LastUpdatedBy\" which covering different users from different 3rd party integrations.\n\nIt can be\n\n* admin from System X\n* assistance manager from System Y\n* user from the System itself\n\n\"UpdatedBy\" can be useful when audit, but not needed during normal operations. more 3rd party integrations to add later.\n\nI'm thinking to save them as\n\n* one field, string **LastUpdatedBy** \"system\\_x:username1\", \"system\\_y:username2\"\n* two fields, string **LastUpdatedByName** & enum **LastUpdatedBy** (specify which system it from)\n* create Many to Many tables\n\nMay I know which practice is ideal for above scenario? Thanks.", "score": 1, "comments": [{"body": "I had the same issue, but all data coming from my system. In the end, I opted for the many to many table, the main reason being that Imit enables me to use foreign keys, with all of the benefits they have.\n\n", "id": "e55657c", "replies": []}, {"body": "The proper solution is even more. A table holding the user names and a table for lastUpdatedBy with many-to-many relationships.", "id": "e55d2x7", "replies": []}, {"body": "From a financial perspective, we do all sorts of stuff depending on the level of audit needed. Everything from fairly generic audit journals to always saving a new record when something changes to many to ones with specific fields on a record to some many to many sitting in between to a simple field that holds who the user is and the system. \n\nIt really completely depends on what level of audit you need and what information is available and from where.  \n\nIf you have a user table somewhere, a many to many table in between with extra information is probably the easiest if that\u2019s all you need for audit. ", "id": "e55lhgh", "replies": []}], "title": "Store as string , enum or a another table in SQL database?"}