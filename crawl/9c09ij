{"url": "https://www.reddit.com/r/learnprogramming/comments/9c09ij/how_do_i_go_about_learning_git/", "text": "So I'm looking to start learning Git, but I'm a bit short on time, what with classes starting again. I'm wondering what the general approach I should be taking is to learn Git at a level an entry-level software engineer or intern should be expected to know it. \n\nI came across resources like [this](https://www.udacity.com/course/how-to-use-git-and-github--ud775) and [this] (https://www.youtube.com/watch?v=Y9XZQO1n_7c) that could teach the fundamentals in about a day or 2. The Pro Git book is around 500 pages, though. Is it true that you don't need much beyond  the basics as an intern or junior dev? Is it fine to just learn the fundamentals in a day or 2 and learn the rest as I go, through practice, or should I try to cover most of the book too? Thanks.", "score": 2, "comments": [{"body": "> Is it true that you don't need much beyond the basics as an intern or junior dev?\n\nI would expect you to know `clone`, `add`, `commit`, `push` and `pull`. Maybe `branch`, `checkout` and `merge` for bonus points. Plus I would expect you to ask for help from more experienced colleagues before/if you fuck something up.", "id": "e574w6v", "replies": [{"body": "You wouldn't expect someone to know about branching?", "id": "e57f0jl", "replies": [{"body": "A branch is just a pointer to a commit, and the pointer gets automatically updated when committing. I can explain that in 5 minutes.", "id": "e57fu8l", "replies": []}]}]}, {"body": "This helped me at some point: https://dont-be-afraid-to-commit.readthedocs.io/en/latest/index.html", "id": "e573peq", "replies": []}, {"body": "Probably [this is the best](https://www.youtube.com/playlist?list=PL4cUxeGkcC9goXbgTDQ0n_4TBzOO0ocPR) git tutorial you can find in the internet.", "id": "e576fcx", "replies": []}, {"body": "[https://try.github.io/](https://try.github.io/)  \\- - Straight from the source.\n\nYou should keep a cheatsheet. \n\nIf you need one, put all of the commands you think you will use onto a graphic and set it as your wallpaper. Make sure it is organized by program, and where you are in the flow of the program. If you use Linux, I like a black background with white lettering and transparency set to 50% or so on the 80 char wide terminal window. Keep your workspace desktop free from clutter.", "id": "e57av4e", "replies": []}, {"body": "Since 90% of advice you see for learning Git strings Github along and the fact that someone new probably wouldn't understand they are independent of each other, I'll just say learn Git first while maintaining a local repository. I think it's bad practice to learn two things at once especially when they are independent of each other. ", "id": "e57du48", "replies": []}, {"body": "I wrote a \"here's the basics you should learn\" comment a while ago. I'll link it here\n\nhttps://www.reddit.com/r/learnprogramming/comments/88bl5o/z/dwjd8t1", "id": "e57cq1z", "replies": []}, {"body": "I have a YouTube video that is very similar to the YouTube video you linked except my video is specifically geared towards learning and understanding all the concepts that I would want a junior to know before applying. I cover adding, commiting, pushing, pulling, cloning, initializing, branching, and merging. I also use visuals to describe how to do things and why they are important. Lastly I include a full demo of how to use each command of Git. Most importantly, it will only take you 20 minutes to learn these fundamentals and start applying them in your own projects today. https://youtu.be/IHaTbJPdB-s\n\nWhile the video you linked is good (I watched it while making my video), I personally think my video does a better job of explaining the concepts of Git. It also doesn't hurt to watch both to see Git from two different perspectives.", "id": "e57hrhd", "replies": [{"body": "Thank you. I'll definitely check it out", "id": "e585yq4", "replies": []}]}], "title": "How do I go about learning Git?"}