{"url": "https://www.reddit.com/r/learnprogramming/comments/9con3v/getting_assets_image_audio_clip_into_a_working/", "text": "Hello; I've got two questions:\n\n1. So I've figured out how to create a functional .jar file of a simple application I wrote -- but I haven't figured out how to get the extra stuff into it. I have an image and an audio clip that are part of the program. The file launched fine but just doesn't have them in it. How can I best do that, given I've already built an artifact? I'm using Intellij. Currently, the png and wav files are stored in the top-level folder of the project structure. ~~When I moved them into /src, the assets no longer loaded  stopped working ->~~ I've now moved them into src and just fixed the location reference accordingly.\n2. Is a .jar file something I could zip up, email to a friend, and they could run on their Windows system regardless of whether they have the right (or any) version of Java installed? Is that sort of the point of a .jar file? \n\nThanks!", "score": 1, "comments": [{"body": "This was the first result when googling \"intellij include resources in jar\": [stackoverflow](https://stackoverflow.com/questions/29887524/how-to-add-resource-file-to-jar-in-intellij)\n\nAs for your second question, the receiver needs to have a version of java installed, and their version needs to be compatible with the code you've written, however they do not need to be on windows, any operating system will work as long as they have java installed THAT is the point of java.\n\nJava works by simulating a sort of virtual machine inside your computer called the JVM. This virtual computer can run java programs. The \"Java\" you download from the internet is the software for running this virtual machine, your jar file is the program.", "id": "e5c69zc", "replies": [{"body": "I read that entry and couldn't make it work. Then I tried again just now, and success!\n\nBut now my issue is -- the same approach doesn't *seem* to work with an audio file. What I have found is this:\n\n    private void playSound() {\n     try {\n        InputStream inputStream = \n      getClass().getResourceAsStream(\"/test1/bark.wav\");\n        AudioStream audioStream = new AudioStream(inputStream);\n        AudioPlayer.player.start(audioStream);\n    } catch (Exception e) {\n      // handle exception\n    }\n    }\n\nIs there a simpler way than that? ", "id": "e5c6khp", "replies": []}]}], "title": "Getting Assets (image, audio clip) into a working .jar file"}