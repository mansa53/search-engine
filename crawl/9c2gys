{"url": "https://www.reddit.com/r/learnprogramming/comments/9c2gys/python_confusion_when_trying_to_make_the_cursor/", "text": "I have the following code in Python 3:\n\n    import time\n    \n    def countdown(t):\n        while t >=0:\n            mins, secs = divmod(t, 60)\n            timeformat = '{:02d}:{:02d}'.format(mins, secs)\n            print(timeformat, end='\\r')\n            time.sleep(1)\n            t -=1\n        print('\\r')\n\n    countdown([some time in seconds])\n\nThe output is as follows:\n\n    $python3 countdown.py\n    00:05 #and then it stays on this line but changes number\n\nThe explanation (or at least, my explanation) of the program is as follows: the program takes an input t (the time you want it to countdown in seconds. If t is greater than or equal to 0, take t and split it into 2 variables (mins, secs) which are the minutes and the seconds. The timeformat bit simply takes those two variables and pads them with zeroes so that it 'looks proper'. The remaining is now printed, and there is a carriage return at the end (not entirely sure what it does but it makes sure that the time is printed onto the same line). Finally, python is set to sleep for 1 second before taking of 1 second from t. The loop continues till t is 0, at which point there is another carriage return, this time to make sure that the prompt for bash is on a newline. I will add more stuff later, but for now this is what I have.\n\nMy problem is as follows: currently, the cursor is positioned where the strikethrough is:\n\n    ~~0~~0:05\n\nI want it to be *after* the 5:\n\n    00:05_\n\nI know, it's a petty thing, but I simply don't understand how I would go about doing this. Here's what I've tried:\n\n* Putting a space after timeformat (`print(timeformat, \" \", end='\\r')`) - doesn't do anything (same output)\n* Putting a formfeed after timeformat (`print(timeformat, '\\f', end='\\r')`) - prints the times onto seperate lines (not what I want)\n* Putting a tab after timeformat (`print(timeformat, '\\t', end='\\r')`) - doesn't do anything\n* Getting rid of the end in `end='\\r'` and replacing it with a simple carriage return (`print(timeformat, '\\r')`) - prints onto seperate lines (again, not what I want)\n* Putting a space in the variable itself (`timeformat = '{:02d}:{:02d} '.format(mins, secs)`) - doesn't do anthing\n* Putting a carriage return in the variable itself (`timeformat = '{:02d}:{:02d}\\r'.format(mins, secs)`) - doesn't do anything\n* Same as above but changing the end to a (`print(timeformat, end=' ')`) - the first time prints 'as normal' but then adds a space before the rest of the times\n\nI'm bloody confused. I'll continue to experiment with this and if I make it work then I'll edit this post, but right now, I need some help. I'd just like to finish up by saying that this is my first post here, so if I broke any rules please tell me and I'll try and fix this post. It's also my first programming project (or at least an important part of it). Thanks for reading this.", "score": 0, "comments": [{"body": "Let's try a different kind of character - `'\\b'`. We'll have to use `sys.stdout.write` due to some properties of `print` that are undesirable.\n\n    import time\n    import sys\n\n    def update_str(t):\n        mins, secs = divmod(t, 60)\n        timeformat = '{:02d}:{:02d}'.format(mins, secs)\n        return '\\b'*5 + timeformat\n\n    def countdown(t):\n         # Do it once, without the backspaces.\n         if t >= 0:\n             mins, secs = divmod(t, 60)\n             timeformat = '{:02d}:{:02d}'.format(mins, secs)\n             sys.stdout.write(timeformat)\n             sys.stdout.flush()\n             time.sleep(1)\n             t -= 1\n         # Now we start the update loop.\n         while t >= 0:\n             sys.stdout.write(update_str(t))\n             sys.stdout.flush()\n             time.sleep(1)\n             t -= 1\n         print()\n\n---\n\nThe proper way to do this is with `ncurses`, but it only works on a POSIX-compatible shell.", "id": "e57mu7q", "replies": []}], "title": "[Python] Confusion when trying to make the cursor appear after text on terminal."}