{"url": "https://www.reddit.com/r/learnprogramming/comments/9chon4/help_me_understand_this_higher_order_function/", "text": "    def roll_dice(num_rolls, dice=six_sided):\n        \"\"\"Roll DICE for NUM_ROLLS times.  Return either the sum of the outcomes,\n        or 1 if a 1 is rolled (Pig out). This calls DICE exactly NUM_ROLLS times.\n        num_rolls:  The number of dice rolls that will be made; at least 1.\n        dice:       A zero-argument function that returns an integer outcome.\n        \"\"\"\n        # These assert statements ensure that num_rolls is a positive integer.\n        assert type(num_rolls) == int, 'num_rolls must be an integer.'\n        assert num_rolls > 0, 'Must roll at least once.'\n        i, sum, pigout = 0, 0, False\n        while i < num_rolls:\n            k = dice()\n            if k == 1:\n                pigout = True\n            else:\n                sum += k\n            i += 1\n    \n        return (pigout and 1) or sum\n    \n    def make_averaged(fn, num_samples=30000):\n        \"\"\"Return a function that returns the average_value of FN when called.\n        To implement this function, you will have to use *args syntax, a new Python\n        feature introduced in this project.  See the project description.\n        >>> dice = make_test_dice(3, 1, 5, 6)\n        >>> averaged_dice = make_averaged(dice, 1000)\n        >>> averaged_dice()\n        3.75\n        >>> make_averaged(roll_dice, 1000)(2, dice)\n        6.0\n        In this last example, two different turn scenarios are averaged.\n        - In the first, the player rolls a 3 then a 1, receiving a score of 1.\n        - In the other, the player rolls a 5 and 6, scoring 11.\n        Thus, the average value is 6.0.\n        \"\"\"\n        def ret(*args):\n            sum, i = 0, 0\n            while i < num_samples:\n                sum, i = sum + fn(*args), i + 1\n            return sum / num_samples\n    \n        return ret\n\nI'm not too sure why \\`make\\_averaged(roll\\_dice, 1000)(2, dice)\\` returns 6.0? When I look at this I think that it should return the average of running \\`roll\\_dice\\` twice; which should end up as being 3.75 because of what the test dice is. Anyone mind explaining this to me? Thanks! ", "score": 1, "comments": [{"body": "Don't they somewhat already explain it?\n\n    In this last example, two different turn scenarios are averaged.\n    - In the first, the player rolls a 3 then a 1, receiving a score of 1.\n    - In the other, the player rolls a 5 and 6, scoring 11.\n    Thus, the average value is 6.0.\n\nIn the second situation, we're rolling the dice twice.  The dice has values [3, 1, 5, 6].  On average, we roll all four numbers once in each simulation.  Thus, on average, we score 6 as our final score (12 / 2) on average.", "id": "e5asyjv", "replies": []}], "title": "Help me understand this higher order function?"}