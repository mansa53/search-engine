{"url": "https://www.reddit.com/r/learnprogramming/comments/9amqgc/best_language_for_simple_windows_apps_and_tools/", "text": "I recently started working as a lab chemist for a large company. I have some programming background, and I have carved out a bit of a niche for myself making simple data analysis and formatting tools to make work easier and pass the time on slow days.\n\nUp to this point, all the work I have done is in Python, which I have learned to love a lot. Lots of help, and so many extra packages and such. Only now, I want to start distributing some of my work to coworkers and colleagues, and Python's lack of portability is becoming a problem. Bundled or frozen Python apps tend to be slow, and it feels like a hack. \n\nSo, I'm on the hunt for a new language. I want:\n\n* Gentle learning curve\n* As high-level as possible\n* Good portability (only windows, thankfully)\n* Lots of support and resources\n\nI have worked with these languages, decreasing order of familiarity:\n\n* Python (all the work I've done so far)\n* C (for Arduino)\n* Java (my college is classes)\n* Reddit Markdown (the most important one)\n\nBased on my research, I see it seems like ~~C++~~ *C#* and Visual Basic .NET are the gold standards for Windows development, but Javascript might be more my speed. Are those overkill for little three button tools? Is there a cost associated with .NET? It is feasible to make non-web apps with js? Is there something else I should look into? With Python, it's easy to interact with other programs or websites to get data or perform tasks. Are there other languages that have that level of integrability?\n\n\nTLDR I want to upgrade from Python for making simple tools and apps\n\n", "score": 1, "comments": [{"body": "Before you give up on Python, could you explain more about what experience you've had with bundled Python apps? I've seen some really excellent Python apps that are packaged really well with an installer, and a standard Windows .exe. They load quickly and work just fine. Maybe try different Python bundling tools before giving up on this option?\n\nI'm surprised you didn't mention C#. It's pretty much the gold standard for Windows desktop apps. VB.NET is basically the same APIs but VB is slowly falling out of favor while C# is still quite popular and maybe even growing.\n\nC++ is a very widely-used language but it has none of the other properties you want. It has the steepest learning curve, and it's not nearly high-level enough. Seems like a terrible choice.\n\nJavaScript is roughly equally high-level to Python and it's not a terrible choice, but compared to Python, it's probably worse when it comes to bundled apps being slow and hacky. The main option for a desktop app is Electron, which is basically a hacked up version of Google Chrome with some extra APIs to let you make desktop apps as if they were web apps. Now, it can be a really nice option, especially if you're really skilled with HTML, CSS, and JS. But holy shit is it wasteful. A \"Hello World\" gets bundled into a 25 MB download that expands to hundreds of megabytes uncompressed and takes hundreds of megabytes of RAM. Running an entire multi-process web browser for a basic desktop app is just ridiculously overkill for most things.\n\nMy vote is to try slightly harder with Python, as it really is an awesome option - and otherwise take a look at C# and see how you like it.\n\n&#x200B;", "id": "e4wktpi", "replies": [{"body": "Thanks! \n\nI said c++ up there, but I meant c#, so oops. I'll edit that. \n\nFor tools this small, I would really like to distribute them as single file executables. The only Python distro tools for that I can find for that are py2exe (last update 2014) and pyinstaller (2017). Neither work on 3.6, and even rolling back to 3.5 (or 3.3 for py2exe), I usually see 10 second load times for my 100 line program. Not unusable, but not ideal.\n\nMore than all of that, though, I want to expand my knowledge base as a programmer. I'm very comfortable with Python, but I want to get my hands on something a little different. \n\nBased on what you have said, I'm leaning towards C#.", "id": "e4wl5sf", "replies": []}]}], "title": "Best language for simple windows apps and tools"}