{"url": "https://www.reddit.com/r/learnprogramming/comments/9c24af/help_regarding_fork_in_full_duplex_tcp_programme/", "text": "I am new to socket programming and trying to learn full duplex TCP communication b/w server & client but I am confused about below logic (actually fork() is also new for me )\n\nCan anybody explain working/execution flow of below snippet\n\n\u200b\n\n`cpid=fork();`\n\n`if(cpid==0)`\n\n`{ while(1){`\n\n&#x200B;\n\n`bzero(&recvBuffer,sizeof(recvBuffer));/*Receiving the request from client*/`\n\n&#x200B;\n\n`recv(clientSocketDescriptor,recvBuffer,sizeof(recvBuffer),0);`\n\n&#x200B;\n\n`printf(\"\\nCLIENT : %s\\n\",recvBuffer);`\n\n`}}`\n\n`else`\n\n`{`\n\n`while(1)`\n\n`{`\n\n`bzero(&sendBuffer,sizeof(sendBuffer));`\n\n&#x200B;\n\n`printf(\"\\nType a message here ... \");/*Read the message from client*/`\n\n&#x200B;\n\n`fgets(sendBuffer,10000,stdin);/*Sends the message to client*/`\n\n&#x200B;\n\n`send(clientSocketDescriptor,sendBuffer,strlen(sendBuffer)+1,0);`\n\n`printf(\"\\nMessage sent !\\n\");`\n\n`}}`", "score": 0, "comments": [{"body": "First, please read the posting guidelines and format the code so it's legible.\n\nSecond, what do you think this does?  Analyze it based on what you read about `fork()` and we'll see how you do.", "id": "e57g6f3", "replies": [{"body": "I know basic things about fork() but my doubt is that how jumping(from first while to second while then again second to first) is happening and one thing I noticed while running above program is that first while loop is triggered only when I am sending message from client but how is it happening ? I am confused", "id": "e57mg64", "replies": [{"body": "Where do you see \"jumping\"?  There isn't any jumping between the first and second while.  Read what the `fork()` call does again, carefully.", "id": "e57n2hx", "replies": [{"body": "Finally After reading 5-6 articles of fork() now I am able to see hidden magic :) ", "id": "e5b49c1", "replies": []}]}]}]}, {"body": "The `fork()` system call makes a copy of the current process. The `fork()` system call returns twice - once in the parent process and once in the child process.  In this program, it is being used to create two processes. One that accepts input from a user and sends it to the other process which then prints the message out.\n\nSince the two processes are using a shared file descriptor to communicate, I am guessing that this is a preliminary example of inter-process communication (IPC) that is leading up to using sockets for IPC.\n\nYou can learn more about the `fork()` system call [here](https://timmurphy.org/2014/04/26/using-fork-in-cc-a-minimum-working-example/)", "id": "e57ii77", "replies": []}], "title": "[HELP] regarding fork() in full duplex TCP programme"}