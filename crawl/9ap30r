{"url": "https://www.reddit.com/r/learnprogramming/comments/9ap30r/help_required_enabling_analog_sticks_in_c/", "text": "I'm very new to programming and wanted to see if anyone could help me out with this; it seems to me that it's the sort of issue that would be \"easy if you know how\", but I'm not sure where to start. I wanted to modify the code from the following project to enable analog sticks support for an original Xbox controller: [https://github.com/bootsector/XBOXPadMicro](https://github.com/bootsector/XBOXPadMicro)\n\n&#x200B;\n\nIn the main.c file, the analog sticks are addressed as follows:\n\n    \tpad_left_analog_x = pad_left_analog_y = pad_right_analog_x = pad_right_analog_y = 0x7F;\n    \n    \t\tif(!bit_check(PINB, 1)) {\n    \t\t\tpad_left_analog_x = 0x00;\n    \t\t} else if(!bit_check(PINB, 3)) {\n    \t\t\tpad_left_analog_x = 0xFF;\n    \t\t}\n    \n    \t\tif(!bit_check(PINF, 0)) {\n    \t\t\tpad_left_analog_y = 0x00;\n    \t\t} else if(!bit_check(PINF, 1)) {\n    \t\t\tpad_left_analog_y = 0xFF;\n    \t\t}\n    \n    \t\tif(!bit_check(PINF, 4)) {\n    \t\t\tpad_right_analog_x = 0x00;\n    \t\t} else if(!bit_check(PINF, 5)) {\n    \t\t\tpad_right_analog_x = 0xFF;\n    \t\t}\n    \n    \t\tif(!bit_check(PINF, 6)) {\n    \t\t\tpad_right_analog_y = 0x00;\n    \t\t} else if(!bit_check(PINF, 7)) {\n    \t\t\tpad_right_analog_y = 0xFF;\n    \t\t}\n\nI pretty much understand the aim of this code; the decimal range of analog sticks is usually 0-255 (0x00 and 0xFF in hex), so that when pin PB1 of the ATmega32U4 used in the project is connected to ground, the input detected is 0 on the x axis of the left analog stick, simulating a full press to the left, which as the code was originally intended for arcade sticks is fine, as they only have four directional input. However, I would actually like to connect an analog stick to the chip. The original author of the code has said he has no intention of modifying the code, even though I have seen some other request for analog support, so I was wondering if anyone here could help point me in the right direction. Thanks.", "score": 3, "comments": [{"body": "I'm ignoring the hardware part because you haven't asked about it and I don't have experience wiring up analogue sticks so I have no idea how that would work.\n\nClearly, what's being done here is the analog value is being set to its full positive or negative value depending on which pins are on. What you'll need to do instead is obtain an analog value from the stick axes.\n\n      pad_left_analog_x = analog_value(ADC0);\n\nThis is assuming the analog values of the pin are in the range 0x00-0xFF. If not, do some addition and/or multiplication to scale it. ", "id": "e4x1xnw", "replies": [{"body": "The analog sticks should work as potentiometers with VCC, GND, X axis and Y axis wired to it. The code is running on an ATmega32U4, which has a number of analog I/O.\n\nI've added more code from the main.c to my original post. Where would you suggest altering the code? The couple of attempts I've made so far have run into issue when compiling it.\n\n\u200b\n\nEdit: I'm reading up on ADC now, so hopefully even if I don't figure it out myself, I'll be able to understand it better.", "id": "e4xmdqu", "replies": []}]}, {"body": "The code that you posted seems so simulate the analog sticks with regular buttons (So that they just have 3 values). But it's not the code to actually read the values from the analog stick hardware.", "id": "e4x2ta1", "replies": [{"body": "I've added the rest of the code from main.c and the included .h file to see if it makes more sense now.", "id": "e4xm2kd", "replies": [{"body": "Ok I've looked at the schematics of that project and it seems that it could work, except for the horizontal axis of the left stick.  PINB1 and PINB3 are digital pins and can't give the needed information. For all the other axis the Arduino function [AnalogRead](https://www.arduino.cc/reference/en/language/functions/analog-io/analogread/) can be used to read the value. The value probably needs some scaling though to fit in the needed range (0 - 255).", "id": "e4xmhwn", "replies": [{"body": "Yes, I want to keep PINB1 and PINB3 free for SCLK and MOSI, and analog input will require two pins less on each stick than the current setup anyway. I want to avoid using Arduino code if possible, so I'm reading up on AVR ADC at the moment instead.", "id": "e4xp4tc", "replies": []}]}]}]}], "title": "Help required enabling analog sticks in C..."}