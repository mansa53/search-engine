{"url": "https://www.reddit.com/r/learnprogramming/comments/9c2o6j/3_months_to_learn/", "text": "I quit my job as a high school teacher and have allowed 3 months to self improve. I want to switch to software dev/programming.\n\n\nI want to learn c++, JavaScript, and swift. I have all day everyday to learn. Is it reasonable to teach myself these languages and get a job? Or should I go back to college for a CS degree?", "score": 0, "comments": [{"body": "There are not many jobs about that require knowledge of all three of those particular languages (or any two, really) - concentrate on one of them.", "id": "e57imum", "replies": [{"body": "I see. Why is that? I suppose I'll focus on c++ for now then.", "id": "e57j3b9", "replies": [{"body": "Because this languages don't often Interact together. Eg JavaScript primarily sits on web applications. C++ almost NEVER touches web applications (unless you're a really big company). ", "id": "e57tpje", "replies": []}, {"body": "Programs are broken into pieces and split between people or, more often, entire teams. So for example when you go to Reddit there is a team doing the front-end deciding where things go, making buttons work, etc... Those people never touch the code that handles ranking posts based on votes, ensuring a user has entered the correct password, or anything like that. What seems like a single thing is a lot of discrete parts and the teams agree how they communicate. The back-end team says \"we will send you a list of posts in order by rank\" and the front-end team displays those, then tells the back-end when an upvote or downvote is pressed, they will pass that information to them in a certain way. \n\nMy opinion is that C++ is the wrong choice for self-teaching like this. It is used because it's fast, meaning most things written in it are highly optimized which requires a lot of knowledge about the inner workings of computers (the area where you'll be unable to compete with CS degree-holding candidates). I would focus on Javascript or Swift because the jobs involving those are pretty much just reliant on knowing the language itself and design principles. Plus they're better suited for projects that can be shown off to potential employers.", "id": "e57unwb", "replies": []}]}]}, {"body": "If we assume that you have a little programming experience and a little experience with computers in general:\n\n1. C++ alone would take you 6 months to start to grasp the ins and outs (at least). I'm a software developer right now and I'm trying to learn C++ in my off-time (from a Java/C#/Python background) and it's just not the easiest language to pick up and run with.\n\n2. C++, JS, and Swift are 3 different branches of development that will offer 3 different paths to a job-\n\n* C++ jobs are \"closer to the metal\" in general (embedded systems, etc). The nice thing about C++ is that if you learn the concepts of C++, you can learn just about any language. C++ is also probably the best language to know if you want to get in the gaming industry.\n\n* JavaScript is much different from C++ in that it's uses are much farther away from the hardware of a computer. You don't need to learn about memory management, Programming fundamentals won't be as critical (imo), etc. Typically jobs like \"Full Stack Developer\" or \"Front End Developer\" will require JavaScript. These devs create more colorful/vibrant/hip apps than a C++ dev, but the barrier of entry to be a JS dev is lower (because it's just easier).\n\n3. Swift is an iOS based language. I've never used it before, but careful about pigeon-holing yourself too early on. \n\nIf I had to make a recommendation, it would be either go to school or start with a better all around language like Python. Python's barrier of entry is lower than C++ and it's much easier to pick up and run with. Python is a jack-of-all-trades, master of none language. \n\nI'd recommend school if that's an option. The industry in general doesn't need more warm bodies to fill seats, it needs good developers with solid CS fundamentals and a good work ethic.", "id": "e57kyde", "replies": []}, {"body": "Another option between school and self taught is a coding boot camp. There are several 12 week boot camps with rigorous curriculums that (theoretically) teach you faster than self taught.  ", "id": "e57mhwz", "replies": []}, {"body": "What is your background?  How much do you already know?", "id": "e57iehh", "replies": [{"body": "I programmed cisco routers at a community college when I was in high school. I'm also decent in visual c+ (ue4 blueprints)\n\nI understand how code works for the most part (boolean, array, strict, etc) but don't know the keywords for these languages", "id": "e57j2l7", "replies": [{"body": "I don't see how you could go from your level to sufficient proficiency to get a job in just 3 months in one language, let alone 3.", "id": "e57jlgl", "replies": [{"body": "Ok thanks. I might look into going back to school then.", "id": "e57jmmz", "replies": []}]}]}]}, {"body": "I think it is possible to learn one of them, but it depends on your ability to learn. Can you read all day and understand what you are reading? I don't know how many people have that ability. Ability to stay focused and energetic all day long is a rarity, in my opinion, but I may be wrong. Maybe you have that ability. Maybe you don't. Try and find out. Let me know if you have it.", "id": "e57rjf2", "replies": []}], "title": "3 months to learn.."}